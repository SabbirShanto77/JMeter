/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 12245.0, "series": [{"data": [[0.0, 233.0], [0.1, 235.0], [0.2, 235.0], [0.3, 236.0], [0.4, 236.0], [0.5, 237.0], [0.6, 237.0], [0.7, 237.0], [0.8, 237.0], [0.9, 238.0], [1.0, 238.0], [1.1, 238.0], [1.2, 238.0], [1.3, 238.0], [1.4, 239.0], [1.5, 239.0], [1.6, 239.0], [1.7, 239.0], [1.8, 239.0], [1.9, 239.0], [2.0, 239.0], [2.1, 240.0], [2.2, 240.0], [2.3, 240.0], [2.4, 240.0], [2.5, 240.0], [2.6, 240.0], [2.7, 240.0], [2.8, 241.0], [2.9, 241.0], [3.0, 241.0], [3.1, 241.0], [3.2, 241.0], [3.3, 241.0], [3.4, 241.0], [3.5, 241.0], [3.6, 241.0], [3.7, 241.0], [3.8, 241.0], [3.9, 242.0], [4.0, 242.0], [4.1, 242.0], [4.2, 242.0], [4.3, 242.0], [4.4, 242.0], [4.5, 242.0], [4.6, 242.0], [4.7, 242.0], [4.8, 242.0], [4.9, 242.0], [5.0, 242.0], [5.1, 243.0], [5.2, 243.0], [5.3, 243.0], [5.4, 243.0], [5.5, 243.0], [5.6, 243.0], [5.7, 243.0], [5.8, 243.0], [5.9, 243.0], [6.0, 243.0], [6.1, 243.0], [6.2, 243.0], [6.3, 243.0], [6.4, 244.0], [6.5, 244.0], [6.6, 244.0], [6.7, 244.0], [6.8, 244.0], [6.9, 244.0], [7.0, 244.0], [7.1, 244.0], [7.2, 244.0], [7.3, 244.0], [7.4, 244.0], [7.5, 244.0], [7.6, 244.0], [7.7, 244.0], [7.8, 244.0], [7.9, 245.0], [8.0, 245.0], [8.1, 245.0], [8.2, 245.0], [8.3, 245.0], [8.4, 245.0], [8.5, 245.0], [8.6, 245.0], [8.7, 245.0], [8.8, 245.0], [8.9, 245.0], [9.0, 245.0], [9.1, 245.0], [9.2, 245.0], [9.3, 245.0], [9.4, 245.0], [9.5, 245.0], [9.6, 245.0], [9.7, 245.0], [9.8, 245.0], [9.9, 246.0], [10.0, 246.0], [10.1, 246.0], [10.2, 246.0], [10.3, 246.0], [10.4, 246.0], [10.5, 246.0], [10.6, 246.0], [10.7, 246.0], [10.8, 246.0], [10.9, 246.0], [11.0, 246.0], [11.1, 246.0], [11.2, 246.0], [11.3, 246.0], [11.4, 246.0], [11.5, 246.0], [11.6, 246.0], [11.7, 246.0], [11.8, 246.0], [11.9, 246.0], [12.0, 247.0], [12.1, 247.0], [12.2, 247.0], [12.3, 247.0], [12.4, 247.0], [12.5, 247.0], [12.6, 247.0], [12.7, 247.0], [12.8, 247.0], [12.9, 247.0], [13.0, 247.0], [13.1, 247.0], [13.2, 247.0], [13.3, 247.0], [13.4, 247.0], [13.5, 247.0], [13.6, 247.0], [13.7, 247.0], [13.8, 247.0], [13.9, 247.0], [14.0, 248.0], [14.1, 248.0], [14.2, 248.0], [14.3, 248.0], [14.4, 248.0], [14.5, 248.0], [14.6, 248.0], [14.7, 248.0], [14.8, 248.0], [14.9, 248.0], [15.0, 248.0], [15.1, 248.0], [15.2, 248.0], [15.3, 248.0], [15.4, 248.0], [15.5, 248.0], [15.6, 248.0], [15.7, 248.0], [15.8, 248.0], [15.9, 248.0], [16.0, 248.0], [16.1, 249.0], [16.2, 249.0], [16.3, 249.0], [16.4, 249.0], [16.5, 249.0], [16.6, 249.0], [16.7, 249.0], [16.8, 249.0], [16.9, 249.0], [17.0, 249.0], [17.1, 249.0], [17.2, 249.0], [17.3, 249.0], [17.4, 249.0], [17.5, 249.0], [17.6, 249.0], [17.7, 249.0], [17.8, 249.0], [17.9, 249.0], [18.0, 249.0], [18.1, 249.0], [18.2, 250.0], [18.3, 250.0], [18.4, 250.0], [18.5, 250.0], [18.6, 250.0], [18.7, 250.0], [18.8, 250.0], [18.9, 250.0], [19.0, 250.0], [19.1, 250.0], [19.2, 250.0], [19.3, 250.0], [19.4, 250.0], [19.5, 250.0], [19.6, 250.0], [19.7, 250.0], [19.8, 250.0], [19.9, 251.0], [20.0, 251.0], [20.1, 251.0], [20.2, 251.0], [20.3, 251.0], [20.4, 251.0], [20.5, 251.0], [20.6, 251.0], [20.7, 251.0], [20.8, 251.0], [20.9, 251.0], [21.0, 251.0], [21.1, 251.0], [21.2, 251.0], [21.3, 251.0], [21.4, 251.0], [21.5, 251.0], [21.6, 252.0], [21.7, 252.0], [21.8, 252.0], [21.9, 252.0], [22.0, 252.0], [22.1, 252.0], [22.2, 252.0], [22.3, 252.0], [22.4, 252.0], [22.5, 252.0], [22.6, 252.0], [22.7, 252.0], [22.8, 252.0], [22.9, 252.0], [23.0, 252.0], [23.1, 252.0], [23.2, 252.0], [23.3, 252.0], [23.4, 253.0], [23.5, 253.0], [23.6, 253.0], [23.7, 253.0], [23.8, 253.0], [23.9, 253.0], [24.0, 253.0], [24.1, 253.0], [24.2, 253.0], [24.3, 253.0], [24.4, 253.0], [24.5, 253.0], [24.6, 253.0], [24.7, 253.0], [24.8, 254.0], [24.9, 254.0], [25.0, 254.0], [25.1, 254.0], [25.2, 254.0], [25.3, 254.0], [25.4, 254.0], [25.5, 254.0], [25.6, 254.0], [25.7, 254.0], [25.8, 254.0], [25.9, 254.0], [26.0, 254.0], [26.1, 254.0], [26.2, 254.0], [26.3, 254.0], [26.4, 255.0], [26.5, 255.0], [26.6, 255.0], [26.7, 255.0], [26.8, 255.0], [26.9, 255.0], [27.0, 255.0], [27.1, 255.0], [27.2, 255.0], [27.3, 255.0], [27.4, 255.0], [27.5, 255.0], [27.6, 255.0], [27.7, 255.0], [27.8, 256.0], [27.9, 256.0], [28.0, 256.0], [28.1, 256.0], [28.2, 256.0], [28.3, 256.0], [28.4, 256.0], [28.5, 256.0], [28.6, 256.0], [28.7, 256.0], [28.8, 256.0], [28.9, 256.0], [29.0, 256.0], [29.1, 256.0], [29.2, 256.0], [29.3, 256.0], [29.4, 256.0], [29.5, 257.0], [29.6, 257.0], [29.7, 257.0], [29.8, 257.0], [29.9, 257.0], [30.0, 257.0], [30.1, 257.0], [30.2, 257.0], [30.3, 257.0], [30.4, 257.0], [30.5, 257.0], [30.6, 257.0], [30.7, 257.0], [30.8, 257.0], [30.9, 257.0], [31.0, 257.0], [31.1, 258.0], [31.2, 258.0], [31.3, 258.0], [31.4, 258.0], [31.5, 258.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 258.0], [32.0, 258.0], [32.1, 258.0], [32.2, 258.0], [32.3, 258.0], [32.4, 258.0], [32.5, 258.0], [32.6, 258.0], [32.7, 258.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 259.0], [33.5, 259.0], [33.6, 259.0], [33.7, 259.0], [33.8, 259.0], [33.9, 259.0], [34.0, 259.0], [34.1, 259.0], [34.2, 259.0], [34.3, 259.0], [34.4, 260.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 260.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 260.0], [36.2, 261.0], [36.3, 261.0], [36.4, 261.0], [36.5, 261.0], [36.6, 261.0], [36.7, 261.0], [36.8, 261.0], [36.9, 261.0], [37.0, 261.0], [37.1, 261.0], [37.2, 261.0], [37.3, 261.0], [37.4, 261.0], [37.5, 261.0], [37.6, 261.0], [37.7, 261.0], [37.8, 261.0], [37.9, 262.0], [38.0, 262.0], [38.1, 262.0], [38.2, 262.0], [38.3, 262.0], [38.4, 262.0], [38.5, 262.0], [38.6, 262.0], [38.7, 262.0], [38.8, 262.0], [38.9, 262.0], [39.0, 262.0], [39.1, 262.0], [39.2, 262.0], [39.3, 262.0], [39.4, 262.0], [39.5, 262.0], [39.6, 263.0], [39.7, 263.0], [39.8, 263.0], [39.9, 263.0], [40.0, 263.0], [40.1, 263.0], [40.2, 263.0], [40.3, 263.0], [40.4, 263.0], [40.5, 263.0], [40.6, 263.0], [40.7, 263.0], [40.8, 263.0], [40.9, 263.0], [41.0, 263.0], [41.1, 263.0], [41.2, 264.0], [41.3, 264.0], [41.4, 264.0], [41.5, 264.0], [41.6, 264.0], [41.7, 264.0], [41.8, 264.0], [41.9, 264.0], [42.0, 264.0], [42.1, 264.0], [42.2, 264.0], [42.3, 264.0], [42.4, 264.0], [42.5, 264.0], [42.6, 264.0], [42.7, 264.0], [42.8, 264.0], [42.9, 264.0], [43.0, 265.0], [43.1, 265.0], [43.2, 265.0], [43.3, 265.0], [43.4, 265.0], [43.5, 265.0], [43.6, 265.0], [43.7, 265.0], [43.8, 265.0], [43.9, 265.0], [44.0, 265.0], [44.1, 265.0], [44.2, 265.0], [44.3, 265.0], [44.4, 265.0], [44.5, 265.0], [44.6, 265.0], [44.7, 265.0], [44.8, 266.0], [44.9, 266.0], [45.0, 266.0], [45.1, 266.0], [45.2, 266.0], [45.3, 266.0], [45.4, 266.0], [45.5, 266.0], [45.6, 266.0], [45.7, 266.0], [45.8, 266.0], [45.9, 266.0], [46.0, 266.0], [46.1, 266.0], [46.2, 266.0], [46.3, 266.0], [46.4, 266.0], [46.5, 266.0], [46.6, 267.0], [46.7, 267.0], [46.8, 267.0], [46.9, 267.0], [47.0, 267.0], [47.1, 267.0], [47.2, 267.0], [47.3, 267.0], [47.4, 267.0], [47.5, 267.0], [47.6, 267.0], [47.7, 267.0], [47.8, 267.0], [47.9, 267.0], [48.0, 267.0], [48.1, 267.0], [48.2, 267.0], [48.3, 268.0], [48.4, 268.0], [48.5, 268.0], [48.6, 268.0], [48.7, 268.0], [48.8, 268.0], [48.9, 268.0], [49.0, 268.0], [49.1, 268.0], [49.2, 268.0], [49.3, 268.0], [49.4, 268.0], [49.5, 268.0], [49.6, 268.0], [49.7, 268.0], [49.8, 268.0], [49.9, 268.0], [50.0, 268.0], [50.1, 269.0], [50.2, 269.0], [50.3, 269.0], [50.4, 269.0], [50.5, 269.0], [50.6, 269.0], [50.7, 269.0], [50.8, 269.0], [50.9, 269.0], [51.0, 269.0], [51.1, 269.0], [51.2, 269.0], [51.3, 269.0], [51.4, 269.0], [51.5, 269.0], [51.6, 269.0], [51.7, 270.0], [51.8, 270.0], [51.9, 270.0], [52.0, 270.0], [52.1, 270.0], [52.2, 270.0], [52.3, 270.0], [52.4, 270.0], [52.5, 270.0], [52.6, 270.0], [52.7, 270.0], [52.8, 270.0], [52.9, 270.0], [53.0, 270.0], [53.1, 270.0], [53.2, 271.0], [53.3, 271.0], [53.4, 271.0], [53.5, 271.0], [53.6, 271.0], [53.7, 271.0], [53.8, 271.0], [53.9, 271.0], [54.0, 271.0], [54.1, 271.0], [54.2, 271.0], [54.3, 271.0], [54.4, 271.0], [54.5, 271.0], [54.6, 272.0], [54.7, 272.0], [54.8, 272.0], [54.9, 272.0], [55.0, 272.0], [55.1, 272.0], [55.2, 272.0], [55.3, 272.0], [55.4, 272.0], [55.5, 272.0], [55.6, 272.0], [55.7, 273.0], [55.8, 273.0], [55.9, 273.0], [56.0, 273.0], [56.1, 273.0], [56.2, 273.0], [56.3, 273.0], [56.4, 273.0], [56.5, 273.0], [56.6, 273.0], [56.7, 273.0], [56.8, 274.0], [56.9, 274.0], [57.0, 274.0], [57.1, 274.0], [57.2, 274.0], [57.3, 274.0], [57.4, 274.0], [57.5, 274.0], [57.6, 274.0], [57.7, 274.0], [57.8, 275.0], [57.9, 275.0], [58.0, 275.0], [58.1, 275.0], [58.2, 275.0], [58.3, 275.0], [58.4, 275.0], [58.5, 275.0], [58.6, 275.0], [58.7, 276.0], [58.8, 276.0], [58.9, 276.0], [59.0, 276.0], [59.1, 276.0], [59.2, 276.0], [59.3, 276.0], [59.4, 276.0], [59.5, 276.0], [59.6, 276.0], [59.7, 277.0], [59.8, 277.0], [59.9, 277.0], [60.0, 277.0], [60.1, 277.0], [60.2, 277.0], [60.3, 277.0], [60.4, 277.0], [60.5, 278.0], [60.6, 278.0], [60.7, 278.0], [60.8, 278.0], [60.9, 278.0], [61.0, 278.0], [61.1, 278.0], [61.2, 278.0], [61.3, 278.0], [61.4, 279.0], [61.5, 279.0], [61.6, 279.0], [61.7, 279.0], [61.8, 279.0], [61.9, 279.0], [62.0, 279.0], [62.1, 279.0], [62.2, 279.0], [62.3, 280.0], [62.4, 280.0], [62.5, 280.0], [62.6, 280.0], [62.7, 280.0], [62.8, 280.0], [62.9, 280.0], [63.0, 280.0], [63.1, 280.0], [63.2, 280.0], [63.3, 281.0], [63.4, 281.0], [63.5, 281.0], [63.6, 281.0], [63.7, 281.0], [63.8, 281.0], [63.9, 281.0], [64.0, 281.0], [64.1, 282.0], [64.2, 282.0], [64.3, 282.0], [64.4, 282.0], [64.5, 282.0], [64.6, 282.0], [64.7, 282.0], [64.8, 282.0], [64.9, 282.0], [65.0, 282.0], [65.1, 283.0], [65.2, 283.0], [65.3, 283.0], [65.4, 283.0], [65.5, 283.0], [65.6, 283.0], [65.7, 283.0], [65.8, 283.0], [65.9, 283.0], [66.0, 283.0], [66.1, 284.0], [66.2, 284.0], [66.3, 284.0], [66.4, 284.0], [66.5, 284.0], [66.6, 284.0], [66.7, 284.0], [66.8, 284.0], [66.9, 284.0], [67.0, 284.0], [67.1, 285.0], [67.2, 285.0], [67.3, 285.0], [67.4, 285.0], [67.5, 285.0], [67.6, 285.0], [67.7, 285.0], [67.8, 285.0], [67.9, 285.0], [68.0, 286.0], [68.1, 286.0], [68.2, 286.0], [68.3, 286.0], [68.4, 286.0], [68.5, 286.0], [68.6, 286.0], [68.7, 286.0], [68.8, 286.0], [68.9, 287.0], [69.0, 287.0], [69.1, 287.0], [69.2, 287.0], [69.3, 287.0], [69.4, 287.0], [69.5, 287.0], [69.6, 287.0], [69.7, 287.0], [69.8, 288.0], [69.9, 288.0], [70.0, 288.0], [70.1, 288.0], [70.2, 288.0], [70.3, 288.0], [70.4, 288.0], [70.5, 288.0], [70.6, 288.0], [70.7, 289.0], [70.8, 289.0], [70.9, 289.0], [71.0, 289.0], [71.1, 289.0], [71.2, 289.0], [71.3, 289.0], [71.4, 290.0], [71.5, 290.0], [71.6, 290.0], [71.7, 290.0], [71.8, 290.0], [71.9, 290.0], [72.0, 291.0], [72.1, 291.0], [72.2, 291.0], [72.3, 291.0], [72.4, 291.0], [72.5, 291.0], [72.6, 291.0], [72.7, 292.0], [72.8, 292.0], [72.9, 292.0], [73.0, 292.0], [73.1, 292.0], [73.2, 292.0], [73.3, 293.0], [73.4, 293.0], [73.5, 293.0], [73.6, 293.0], [73.7, 293.0], [73.8, 294.0], [73.9, 294.0], [74.0, 294.0], [74.1, 294.0], [74.2, 294.0], [74.3, 294.0], [74.4, 295.0], [74.5, 295.0], [74.6, 295.0], [74.7, 295.0], [74.8, 295.0], [74.9, 296.0], [75.0, 296.0], [75.1, 296.0], [75.2, 296.0], [75.3, 296.0], [75.4, 297.0], [75.5, 297.0], [75.6, 297.0], [75.7, 297.0], [75.8, 298.0], [75.9, 298.0], [76.0, 298.0], [76.1, 298.0], [76.2, 299.0], [76.3, 299.0], [76.4, 299.0], [76.5, 300.0], [76.6, 300.0], [76.7, 300.0], [76.8, 300.0], [76.9, 301.0], [77.0, 301.0], [77.1, 301.0], [77.2, 302.0], [77.3, 302.0], [77.4, 302.0], [77.5, 303.0], [77.6, 303.0], [77.7, 303.0], [77.8, 303.0], [77.9, 304.0], [78.0, 304.0], [78.1, 305.0], [78.2, 305.0], [78.3, 305.0], [78.4, 306.0], [78.5, 306.0], [78.6, 307.0], [78.7, 307.0], [78.8, 307.0], [78.9, 308.0], [79.0, 308.0], [79.1, 309.0], [79.2, 309.0], [79.3, 310.0], [79.4, 310.0], [79.5, 310.0], [79.6, 311.0], [79.7, 311.0], [79.8, 312.0], [79.9, 312.0], [80.0, 313.0], [80.1, 313.0], [80.2, 314.0], [80.3, 314.0], [80.4, 315.0], [80.5, 315.0], [80.6, 316.0], [80.7, 316.0], [80.8, 317.0], [80.9, 317.0], [81.0, 318.0], [81.1, 318.0], [81.2, 319.0], [81.3, 319.0], [81.4, 320.0], [81.5, 320.0], [81.6, 321.0], [81.7, 321.0], [81.8, 322.0], [81.9, 322.0], [82.0, 323.0], [82.1, 324.0], [82.2, 324.0], [82.3, 325.0], [82.4, 325.0], [82.5, 326.0], [82.6, 327.0], [82.7, 327.0], [82.8, 328.0], [82.9, 329.0], [83.0, 329.0], [83.1, 330.0], [83.2, 331.0], [83.3, 331.0], [83.4, 332.0], [83.5, 333.0], [83.6, 334.0], [83.7, 335.0], [83.8, 336.0], [83.9, 336.0], [84.0, 337.0], [84.1, 338.0], [84.2, 339.0], [84.3, 340.0], [84.4, 341.0], [84.5, 342.0], [84.6, 343.0], [84.7, 344.0], [84.8, 345.0], [84.9, 346.0], [85.0, 347.0], [85.1, 348.0], [85.2, 349.0], [85.3, 350.0], [85.4, 352.0], [85.5, 353.0], [85.6, 355.0], [85.7, 356.0], [85.8, 357.0], [85.9, 358.0], [86.0, 360.0], [86.1, 361.0], [86.2, 362.0], [86.3, 364.0], [86.4, 365.0], [86.5, 367.0], [86.6, 369.0], [86.7, 370.0], [86.8, 372.0], [86.9, 374.0], [87.0, 375.0], [87.1, 377.0], [87.2, 379.0], [87.3, 381.0], [87.4, 383.0], [87.5, 385.0], [87.6, 387.0], [87.7, 390.0], [87.8, 392.0], [87.9, 394.0], [88.0, 397.0], [88.1, 399.0], [88.2, 401.0], [88.3, 404.0], [88.4, 406.0], [88.5, 409.0], [88.6, 413.0], [88.7, 416.0], [88.8, 418.0], [88.9, 422.0], [89.0, 426.0], [89.1, 428.0], [89.2, 431.0], [89.3, 434.0], [89.4, 438.0], [89.5, 443.0], [89.6, 447.0], [89.7, 450.0], [89.8, 454.0], [89.9, 460.0], [90.0, 465.0], [90.1, 470.0], [90.2, 476.0], [90.3, 481.0], [90.4, 489.0], [90.5, 494.0], [90.6, 501.0], [90.7, 509.0], [90.8, 518.0], [90.9, 524.0], [91.0, 531.0], [91.1, 541.0], [91.2, 552.0], [91.3, 569.0], [91.4, 586.0], [91.5, 605.0], [91.6, 623.0], [91.7, 639.0], [91.8, 653.0], [91.9, 662.0], [92.0, 672.0], [92.1, 681.0], [92.2, 695.0], [92.3, 711.0], [92.4, 725.0], [92.5, 741.0], [92.6, 754.0], [92.7, 769.0], [92.8, 781.0], [92.9, 791.0], [93.0, 801.0], [93.1, 813.0], [93.2, 825.0], [93.3, 832.0], [93.4, 840.0], [93.5, 847.0], [93.6, 857.0], [93.7, 865.0], [93.8, 872.0], [93.9, 883.0], [94.0, 894.0], [94.1, 905.0], [94.2, 920.0], [94.3, 934.0], [94.4, 949.0], [94.5, 961.0], [94.6, 971.0], [94.7, 983.0], [94.8, 995.0], [94.9, 1004.0], [95.0, 1019.0], [95.1, 1030.0], [95.2, 1041.0], [95.3, 1055.0], [95.4, 1068.0], [95.5, 1082.0], [95.6, 1092.0], [95.7, 1101.0], [95.8, 1113.0], [95.9, 1123.0], [96.0, 1137.0], [96.1, 1150.0], [96.2, 1165.0], [96.3, 1178.0], [96.4, 1195.0], [96.5, 1211.0], [96.6, 1233.0], [96.7, 1252.0], [96.8, 1273.0], [96.9, 1288.0], [97.0, 1316.0], [97.1, 1340.0], [97.2, 1372.0], [97.3, 1401.0], [97.4, 1423.0], [97.5, 1448.0], [97.6, 1478.0], [97.7, 1520.0], [97.8, 1584.0], [97.9, 1625.0], [98.0, 1679.0], [98.1, 1747.0], [98.2, 1861.0], [98.3, 1900.0], [98.4, 1925.0], [98.5, 1953.0], [98.6, 1978.0], [98.7, 2011.0], [98.8, 2038.0], [98.9, 2085.0], [99.0, 2164.0], [99.1, 2250.0], [99.2, 2283.0], [99.3, 2322.0], [99.4, 2416.0], [99.5, 2512.0], [99.6, 2555.0], [99.7, 2597.0], [99.8, 3253.0], [99.9, 3290.0], [100.0, 10268.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[0.0, 935.0], [0.1, 941.0], [0.2, 943.0], [0.3, 944.0], [0.4, 946.0], [0.5, 948.0], [0.6, 949.0], [0.7, 950.0], [0.8, 951.0], [0.9, 952.0], [1.0, 953.0], [1.1, 953.0], [1.2, 954.0], [1.3, 954.0], [1.4, 955.0], [1.5, 955.0], [1.6, 956.0], [1.7, 956.0], [1.8, 957.0], [1.9, 957.0], [2.0, 958.0], [2.1, 958.0], [2.2, 958.0], [2.3, 959.0], [2.4, 959.0], [2.5, 960.0], [2.6, 960.0], [2.7, 960.0], [2.8, 961.0], [2.9, 961.0], [3.0, 961.0], [3.1, 962.0], [3.2, 962.0], [3.3, 963.0], [3.4, 963.0], [3.5, 963.0], [3.6, 964.0], [3.7, 964.0], [3.8, 964.0], [3.9, 965.0], [4.0, 965.0], [4.1, 965.0], [4.2, 966.0], [4.3, 966.0], [4.4, 966.0], [4.5, 966.0], [4.6, 967.0], [4.7, 967.0], [4.8, 967.0], [4.9, 967.0], [5.0, 968.0], [5.1, 968.0], [5.2, 968.0], [5.3, 968.0], [5.4, 969.0], [5.5, 969.0], [5.6, 969.0], [5.7, 969.0], [5.8, 970.0], [5.9, 970.0], [6.0, 970.0], [6.1, 970.0], [6.2, 971.0], [6.3, 971.0], [6.4, 971.0], [6.5, 971.0], [6.6, 971.0], [6.7, 972.0], [6.8, 972.0], [6.9, 972.0], [7.0, 972.0], [7.1, 973.0], [7.2, 973.0], [7.3, 973.0], [7.4, 973.0], [7.5, 973.0], [7.6, 974.0], [7.7, 974.0], [7.8, 974.0], [7.9, 974.0], [8.0, 975.0], [8.1, 975.0], [8.2, 975.0], [8.3, 975.0], [8.4, 976.0], [8.5, 976.0], [8.6, 976.0], [8.7, 976.0], [8.8, 976.0], [8.9, 977.0], [9.0, 977.0], [9.1, 977.0], [9.2, 977.0], [9.3, 977.0], [9.4, 978.0], [9.5, 978.0], [9.6, 978.0], [9.7, 978.0], [9.8, 978.0], [9.9, 979.0], [10.0, 979.0], [10.1, 979.0], [10.2, 979.0], [10.3, 979.0], [10.4, 979.0], [10.5, 979.0], [10.6, 980.0], [10.7, 980.0], [10.8, 980.0], [10.9, 980.0], [11.0, 980.0], [11.1, 981.0], [11.2, 981.0], [11.3, 981.0], [11.4, 981.0], [11.5, 981.0], [11.6, 981.0], [11.7, 982.0], [11.8, 982.0], [11.9, 982.0], [12.0, 982.0], [12.1, 982.0], [12.2, 982.0], [12.3, 982.0], [12.4, 983.0], [12.5, 983.0], [12.6, 983.0], [12.7, 983.0], [12.8, 983.0], [12.9, 983.0], [13.0, 983.0], [13.1, 984.0], [13.2, 984.0], [13.3, 984.0], [13.4, 984.0], [13.5, 984.0], [13.6, 984.0], [13.7, 984.0], [13.8, 985.0], [13.9, 985.0], [14.0, 985.0], [14.1, 985.0], [14.2, 985.0], [14.3, 985.0], [14.4, 985.0], [14.5, 986.0], [14.6, 986.0], [14.7, 986.0], [14.8, 986.0], [14.9, 986.0], [15.0, 986.0], [15.1, 987.0], [15.2, 987.0], [15.3, 987.0], [15.4, 987.0], [15.5, 987.0], [15.6, 987.0], [15.7, 987.0], [15.8, 988.0], [15.9, 988.0], [16.0, 988.0], [16.1, 988.0], [16.2, 988.0], [16.3, 988.0], [16.4, 988.0], [16.5, 988.0], [16.6, 989.0], [16.7, 989.0], [16.8, 989.0], [16.9, 989.0], [17.0, 989.0], [17.1, 989.0], [17.2, 990.0], [17.3, 990.0], [17.4, 990.0], [17.5, 990.0], [17.6, 990.0], [17.7, 990.0], [17.8, 990.0], [17.9, 991.0], [18.0, 991.0], [18.1, 991.0], [18.2, 991.0], [18.3, 991.0], [18.4, 991.0], [18.5, 992.0], [18.6, 992.0], [18.7, 992.0], [18.8, 992.0], [18.9, 992.0], [19.0, 992.0], [19.1, 992.0], [19.2, 992.0], [19.3, 993.0], [19.4, 993.0], [19.5, 993.0], [19.6, 993.0], [19.7, 993.0], [19.8, 993.0], [19.9, 993.0], [20.0, 993.0], [20.1, 994.0], [20.2, 994.0], [20.3, 994.0], [20.4, 994.0], [20.5, 994.0], [20.6, 994.0], [20.7, 994.0], [20.8, 995.0], [20.9, 995.0], [21.0, 995.0], [21.1, 995.0], [21.2, 995.0], [21.3, 995.0], [21.4, 995.0], [21.5, 995.0], [21.6, 996.0], [21.7, 996.0], [21.8, 996.0], [21.9, 996.0], [22.0, 996.0], [22.1, 996.0], [22.2, 996.0], [22.3, 997.0], [22.4, 997.0], [22.5, 997.0], [22.6, 997.0], [22.7, 997.0], [22.8, 997.0], [22.9, 997.0], [23.0, 997.0], [23.1, 998.0], [23.2, 998.0], [23.3, 998.0], [23.4, 998.0], [23.5, 998.0], [23.6, 998.0], [23.7, 998.0], [23.8, 999.0], [23.9, 999.0], [24.0, 999.0], [24.1, 999.0], [24.2, 999.0], [24.3, 999.0], [24.4, 999.0], [24.5, 999.0], [24.6, 1000.0], [24.7, 1000.0], [24.8, 1000.0], [24.9, 1000.0], [25.0, 1000.0], [25.1, 1000.0], [25.2, 1000.0], [25.3, 1001.0], [25.4, 1001.0], [25.5, 1001.0], [25.6, 1001.0], [25.7, 1001.0], [25.8, 1001.0], [25.9, 1001.0], [26.0, 1002.0], [26.1, 1002.0], [26.2, 1002.0], [26.3, 1002.0], [26.4, 1002.0], [26.5, 1002.0], [26.6, 1003.0], [26.7, 1003.0], [26.8, 1003.0], [26.9, 1003.0], [27.0, 1003.0], [27.1, 1003.0], [27.2, 1003.0], [27.3, 1004.0], [27.4, 1004.0], [27.5, 1004.0], [27.6, 1004.0], [27.7, 1004.0], [27.8, 1004.0], [27.9, 1005.0], [28.0, 1005.0], [28.1, 1005.0], [28.2, 1005.0], [28.3, 1005.0], [28.4, 1005.0], [28.5, 1006.0], [28.6, 1006.0], [28.7, 1006.0], [28.8, 1006.0], [28.9, 1006.0], [29.0, 1006.0], [29.1, 1007.0], [29.2, 1007.0], [29.3, 1007.0], [29.4, 1007.0], [29.5, 1007.0], [29.6, 1008.0], [29.7, 1008.0], [29.8, 1008.0], [29.9, 1008.0], [30.0, 1008.0], [30.1, 1009.0], [30.2, 1009.0], [30.3, 1009.0], [30.4, 1009.0], [30.5, 1009.0], [30.6, 1009.0], [30.7, 1009.0], [30.8, 1010.0], [30.9, 1010.0], [31.0, 1010.0], [31.1, 1010.0], [31.2, 1010.0], [31.3, 1011.0], [31.4, 1011.0], [31.5, 1011.0], [31.6, 1011.0], [31.7, 1011.0], [31.8, 1012.0], [31.9, 1012.0], [32.0, 1012.0], [32.1, 1012.0], [32.2, 1012.0], [32.3, 1012.0], [32.4, 1013.0], [32.5, 1013.0], [32.6, 1013.0], [32.7, 1013.0], [32.8, 1013.0], [32.9, 1014.0], [33.0, 1014.0], [33.1, 1014.0], [33.2, 1014.0], [33.3, 1014.0], [33.4, 1015.0], [33.5, 1015.0], [33.6, 1015.0], [33.7, 1015.0], [33.8, 1015.0], [33.9, 1016.0], [34.0, 1016.0], [34.1, 1016.0], [34.2, 1016.0], [34.3, 1016.0], [34.4, 1017.0], [34.5, 1017.0], [34.6, 1017.0], [34.7, 1017.0], [34.8, 1017.0], [34.9, 1018.0], [35.0, 1018.0], [35.1, 1018.0], [35.2, 1018.0], [35.3, 1019.0], [35.4, 1019.0], [35.5, 1019.0], [35.6, 1019.0], [35.7, 1019.0], [35.8, 1019.0], [35.9, 1020.0], [36.0, 1020.0], [36.1, 1020.0], [36.2, 1020.0], [36.3, 1021.0], [36.4, 1021.0], [36.5, 1021.0], [36.6, 1021.0], [36.7, 1021.0], [36.8, 1021.0], [36.9, 1022.0], [37.0, 1022.0], [37.1, 1022.0], [37.2, 1022.0], [37.3, 1022.0], [37.4, 1023.0], [37.5, 1023.0], [37.6, 1023.0], [37.7, 1023.0], [37.8, 1023.0], [37.9, 1023.0], [38.0, 1024.0], [38.1, 1024.0], [38.2, 1024.0], [38.3, 1024.0], [38.4, 1024.0], [38.5, 1025.0], [38.6, 1025.0], [38.7, 1025.0], [38.8, 1025.0], [38.9, 1025.0], [39.0, 1026.0], [39.1, 1026.0], [39.2, 1026.0], [39.3, 1026.0], [39.4, 1026.0], [39.5, 1026.0], [39.6, 1027.0], [39.7, 1027.0], [39.8, 1027.0], [39.9, 1027.0], [40.0, 1027.0], [40.1, 1027.0], [40.2, 1028.0], [40.3, 1028.0], [40.4, 1028.0], [40.5, 1028.0], [40.6, 1028.0], [40.7, 1028.0], [40.8, 1029.0], [40.9, 1029.0], [41.0, 1029.0], [41.1, 1029.0], [41.2, 1029.0], [41.3, 1029.0], [41.4, 1030.0], [41.5, 1030.0], [41.6, 1030.0], [41.7, 1030.0], [41.8, 1030.0], [41.9, 1031.0], [42.0, 1031.0], [42.1, 1031.0], [42.2, 1031.0], [42.3, 1031.0], [42.4, 1031.0], [42.5, 1032.0], [42.6, 1032.0], [42.7, 1032.0], [42.8, 1032.0], [42.9, 1032.0], [43.0, 1033.0], [43.1, 1033.0], [43.2, 1033.0], [43.3, 1033.0], [43.4, 1033.0], [43.5, 1034.0], [43.6, 1034.0], [43.7, 1034.0], [43.8, 1034.0], [43.9, 1034.0], [44.0, 1034.0], [44.1, 1035.0], [44.2, 1035.0], [44.3, 1035.0], [44.4, 1035.0], [44.5, 1035.0], [44.6, 1035.0], [44.7, 1036.0], [44.8, 1036.0], [44.9, 1036.0], [45.0, 1036.0], [45.1, 1036.0], [45.2, 1037.0], [45.3, 1037.0], [45.4, 1037.0], [45.5, 1037.0], [45.6, 1037.0], [45.7, 1037.0], [45.8, 1038.0], [45.9, 1038.0], [46.0, 1038.0], [46.1, 1038.0], [46.2, 1038.0], [46.3, 1038.0], [46.4, 1039.0], [46.5, 1039.0], [46.6, 1039.0], [46.7, 1039.0], [46.8, 1039.0], [46.9, 1039.0], [47.0, 1040.0], [47.1, 1040.0], [47.2, 1040.0], [47.3, 1040.0], [47.4, 1040.0], [47.5, 1040.0], [47.6, 1041.0], [47.7, 1041.0], [47.8, 1041.0], [47.9, 1041.0], [48.0, 1041.0], [48.1, 1041.0], [48.2, 1041.0], [48.3, 1042.0], [48.4, 1042.0], [48.5, 1042.0], [48.6, 1042.0], [48.7, 1042.0], [48.8, 1043.0], [48.9, 1043.0], [49.0, 1043.0], [49.1, 1043.0], [49.2, 1043.0], [49.3, 1043.0], [49.4, 1044.0], [49.5, 1044.0], [49.6, 1044.0], [49.7, 1044.0], [49.8, 1044.0], [49.9, 1044.0], [50.0, 1045.0], [50.1, 1045.0], [50.2, 1045.0], [50.3, 1045.0], [50.4, 1045.0], [50.5, 1045.0], [50.6, 1046.0], [50.7, 1046.0], [50.8, 1046.0], [50.9, 1046.0], [51.0, 1046.0], [51.1, 1047.0], [51.2, 1047.0], [51.3, 1047.0], [51.4, 1047.0], [51.5, 1047.0], [51.6, 1047.0], [51.7, 1048.0], [51.8, 1048.0], [51.9, 1048.0], [52.0, 1048.0], [52.1, 1048.0], [52.2, 1048.0], [52.3, 1049.0], [52.4, 1049.0], [52.5, 1049.0], [52.6, 1049.0], [52.7, 1049.0], [52.8, 1049.0], [52.9, 1050.0], [53.0, 1050.0], [53.1, 1050.0], [53.2, 1050.0], [53.3, 1050.0], [53.4, 1051.0], [53.5, 1051.0], [53.6, 1051.0], [53.7, 1051.0], [53.8, 1051.0], [53.9, 1051.0], [54.0, 1052.0], [54.1, 1052.0], [54.2, 1052.0], [54.3, 1052.0], [54.4, 1052.0], [54.5, 1052.0], [54.6, 1052.0], [54.7, 1053.0], [54.8, 1053.0], [54.9, 1053.0], [55.0, 1053.0], [55.1, 1053.0], [55.2, 1054.0], [55.3, 1054.0], [55.4, 1054.0], [55.5, 1054.0], [55.6, 1054.0], [55.7, 1054.0], [55.8, 1055.0], [55.9, 1055.0], [56.0, 1055.0], [56.1, 1055.0], [56.2, 1055.0], [56.3, 1055.0], [56.4, 1056.0], [56.5, 1056.0], [56.6, 1056.0], [56.7, 1056.0], [56.8, 1056.0], [56.9, 1057.0], [57.0, 1057.0], [57.1, 1057.0], [57.2, 1057.0], [57.3, 1057.0], [57.4, 1057.0], [57.5, 1058.0], [57.6, 1058.0], [57.7, 1058.0], [57.8, 1058.0], [57.9, 1058.0], [58.0, 1058.0], [58.1, 1059.0], [58.2, 1059.0], [58.3, 1059.0], [58.4, 1059.0], [58.5, 1059.0], [58.6, 1059.0], [58.7, 1060.0], [58.8, 1060.0], [58.9, 1060.0], [59.0, 1060.0], [59.1, 1060.0], [59.2, 1060.0], [59.3, 1061.0], [59.4, 1061.0], [59.5, 1061.0], [59.6, 1061.0], [59.7, 1061.0], [59.8, 1061.0], [59.9, 1061.0], [60.0, 1062.0], [60.1, 1062.0], [60.2, 1062.0], [60.3, 1062.0], [60.4, 1062.0], [60.5, 1062.0], [60.6, 1063.0], [60.7, 1063.0], [60.8, 1063.0], [60.9, 1063.0], [61.0, 1063.0], [61.1, 1063.0], [61.2, 1064.0], [61.3, 1064.0], [61.4, 1064.0], [61.5, 1064.0], [61.6, 1064.0], [61.7, 1064.0], [61.8, 1065.0], [61.9, 1065.0], [62.0, 1065.0], [62.1, 1065.0], [62.2, 1065.0], [62.3, 1066.0], [62.4, 1066.0], [62.5, 1066.0], [62.6, 1066.0], [62.7, 1066.0], [62.8, 1066.0], [62.9, 1067.0], [63.0, 1067.0], [63.1, 1067.0], [63.2, 1067.0], [63.3, 1067.0], [63.4, 1067.0], [63.5, 1068.0], [63.6, 1068.0], [63.7, 1068.0], [63.8, 1068.0], [63.9, 1068.0], [64.0, 1068.0], [64.1, 1069.0], [64.2, 1069.0], [64.3, 1069.0], [64.4, 1069.0], [64.5, 1069.0], [64.6, 1069.0], [64.7, 1070.0], [64.8, 1070.0], [64.9, 1070.0], [65.0, 1070.0], [65.1, 1070.0], [65.2, 1071.0], [65.3, 1071.0], [65.4, 1071.0], [65.5, 1071.0], [65.6, 1071.0], [65.7, 1071.0], [65.8, 1072.0], [65.9, 1072.0], [66.0, 1072.0], [66.1, 1072.0], [66.2, 1072.0], [66.3, 1072.0], [66.4, 1073.0], [66.5, 1073.0], [66.6, 1073.0], [66.7, 1073.0], [66.8, 1073.0], [66.9, 1074.0], [67.0, 1074.0], [67.1, 1074.0], [67.2, 1074.0], [67.3, 1074.0], [67.4, 1074.0], [67.5, 1075.0], [67.6, 1075.0], [67.7, 1075.0], [67.8, 1075.0], [67.9, 1075.0], [68.0, 1076.0], [68.1, 1076.0], [68.2, 1076.0], [68.3, 1076.0], [68.4, 1076.0], [68.5, 1077.0], [68.6, 1077.0], [68.7, 1077.0], [68.8, 1077.0], [68.9, 1077.0], [69.0, 1078.0], [69.1, 1078.0], [69.2, 1078.0], [69.3, 1078.0], [69.4, 1078.0], [69.5, 1078.0], [69.6, 1079.0], [69.7, 1079.0], [69.8, 1079.0], [69.9, 1079.0], [70.0, 1079.0], [70.1, 1080.0], [70.2, 1080.0], [70.3, 1080.0], [70.4, 1080.0], [70.5, 1080.0], [70.6, 1081.0], [70.7, 1081.0], [70.8, 1081.0], [70.9, 1081.0], [71.0, 1081.0], [71.1, 1082.0], [71.2, 1082.0], [71.3, 1082.0], [71.4, 1082.0], [71.5, 1082.0], [71.6, 1083.0], [71.7, 1083.0], [71.8, 1083.0], [71.9, 1083.0], [72.0, 1083.0], [72.1, 1084.0], [72.2, 1084.0], [72.3, 1084.0], [72.4, 1085.0], [72.5, 1085.0], [72.6, 1085.0], [72.7, 1086.0], [72.8, 1086.0], [72.9, 1086.0], [73.0, 1086.0], [73.1, 1087.0], [73.2, 1087.0], [73.3, 1087.0], [73.4, 1088.0], [73.5, 1088.0], [73.6, 1088.0], [73.7, 1088.0], [73.8, 1089.0], [73.9, 1089.0], [74.0, 1089.0], [74.1, 1090.0], [74.2, 1090.0], [74.3, 1090.0], [74.4, 1091.0], [74.5, 1091.0], [74.6, 1091.0], [74.7, 1091.0], [74.8, 1092.0], [74.9, 1092.0], [75.0, 1092.0], [75.1, 1093.0], [75.2, 1093.0], [75.3, 1093.0], [75.4, 1093.0], [75.5, 1094.0], [75.6, 1094.0], [75.7, 1095.0], [75.8, 1095.0], [75.9, 1095.0], [76.0, 1096.0], [76.1, 1096.0], [76.2, 1097.0], [76.3, 1097.0], [76.4, 1098.0], [76.5, 1098.0], [76.6, 1098.0], [76.7, 1099.0], [76.8, 1099.0], [76.9, 1100.0], [77.0, 1100.0], [77.1, 1100.0], [77.2, 1101.0], [77.3, 1101.0], [77.4, 1101.0], [77.5, 1102.0], [77.6, 1102.0], [77.7, 1103.0], [77.8, 1103.0], [77.9, 1104.0], [78.0, 1104.0], [78.1, 1105.0], [78.2, 1105.0], [78.3, 1106.0], [78.4, 1106.0], [78.5, 1107.0], [78.6, 1107.0], [78.7, 1108.0], [78.8, 1108.0], [78.9, 1109.0], [79.0, 1109.0], [79.1, 1110.0], [79.2, 1110.0], [79.3, 1111.0], [79.4, 1111.0], [79.5, 1112.0], [79.6, 1112.0], [79.7, 1113.0], [79.8, 1113.0], [79.9, 1114.0], [80.0, 1114.0], [80.1, 1115.0], [80.2, 1115.0], [80.3, 1116.0], [80.4, 1116.0], [80.5, 1117.0], [80.6, 1117.0], [80.7, 1118.0], [80.8, 1118.0], [80.9, 1119.0], [81.0, 1119.0], [81.1, 1120.0], [81.2, 1120.0], [81.3, 1120.0], [81.4, 1121.0], [81.5, 1121.0], [81.6, 1122.0], [81.7, 1123.0], [81.8, 1123.0], [81.9, 1124.0], [82.0, 1124.0], [82.1, 1124.0], [82.2, 1125.0], [82.3, 1125.0], [82.4, 1126.0], [82.5, 1126.0], [82.6, 1127.0], [82.7, 1127.0], [82.8, 1128.0], [82.9, 1128.0], [83.0, 1129.0], [83.1, 1129.0], [83.2, 1130.0], [83.3, 1130.0], [83.4, 1130.0], [83.5, 1131.0], [83.6, 1131.0], [83.7, 1132.0], [83.8, 1132.0], [83.9, 1132.0], [84.0, 1133.0], [84.1, 1133.0], [84.2, 1134.0], [84.3, 1134.0], [84.4, 1134.0], [84.5, 1135.0], [84.6, 1135.0], [84.7, 1136.0], [84.8, 1136.0], [84.9, 1137.0], [85.0, 1137.0], [85.1, 1137.0], [85.2, 1138.0], [85.3, 1138.0], [85.4, 1138.0], [85.5, 1139.0], [85.6, 1139.0], [85.7, 1140.0], [85.8, 1140.0], [85.9, 1140.0], [86.0, 1141.0], [86.1, 1141.0], [86.2, 1141.0], [86.3, 1142.0], [86.4, 1142.0], [86.5, 1142.0], [86.6, 1143.0], [86.7, 1143.0], [86.8, 1143.0], [86.9, 1144.0], [87.0, 1144.0], [87.1, 1144.0], [87.2, 1145.0], [87.3, 1145.0], [87.4, 1145.0], [87.5, 1146.0], [87.6, 1146.0], [87.7, 1147.0], [87.8, 1147.0], [87.9, 1147.0], [88.0, 1148.0], [88.1, 1148.0], [88.2, 1149.0], [88.3, 1149.0], [88.4, 1149.0], [88.5, 1150.0], [88.6, 1150.0], [88.7, 1151.0], [88.8, 1151.0], [88.9, 1151.0], [89.0, 1152.0], [89.1, 1152.0], [89.2, 1153.0], [89.3, 1153.0], [89.4, 1154.0], [89.5, 1154.0], [89.6, 1155.0], [89.7, 1155.0], [89.8, 1156.0], [89.9, 1156.0], [90.0, 1157.0], [90.1, 1157.0], [90.2, 1157.0], [90.3, 1158.0], [90.4, 1158.0], [90.5, 1159.0], [90.6, 1159.0], [90.7, 1160.0], [90.8, 1160.0], [90.9, 1161.0], [91.0, 1161.0], [91.1, 1162.0], [91.2, 1162.0], [91.3, 1163.0], [91.4, 1163.0], [91.5, 1164.0], [91.6, 1164.0], [91.7, 1165.0], [91.8, 1165.0], [91.9, 1166.0], [92.0, 1166.0], [92.1, 1167.0], [92.2, 1167.0], [92.3, 1168.0], [92.4, 1169.0], [92.5, 1169.0], [92.6, 1170.0], [92.7, 1170.0], [92.8, 1171.0], [92.9, 1172.0], [93.0, 1172.0], [93.1, 1173.0], [93.2, 1173.0], [93.3, 1174.0], [93.4, 1175.0], [93.5, 1176.0], [93.6, 1176.0], [93.7, 1177.0], [93.8, 1178.0], [93.9, 1179.0], [94.0, 1179.0], [94.1, 1180.0], [94.2, 1181.0], [94.3, 1182.0], [94.4, 1183.0], [94.5, 1184.0], [94.6, 1185.0], [94.7, 1186.0], [94.8, 1187.0], [94.9, 1188.0], [95.0, 1189.0], [95.1, 1189.0], [95.2, 1191.0], [95.3, 1192.0], [95.4, 1193.0], [95.5, 1194.0], [95.6, 1196.0], [95.7, 1197.0], [95.8, 1199.0], [95.9, 1200.0], [96.0, 1201.0], [96.1, 1203.0], [96.2, 1205.0], [96.3, 1207.0], [96.4, 1208.0], [96.5, 1211.0], [96.6, 1213.0], [96.7, 1215.0], [96.8, 1217.0], [96.9, 1220.0], [97.0, 1223.0], [97.1, 1227.0], [97.2, 1230.0], [97.3, 1233.0], [97.4, 1237.0], [97.5, 1242.0], [97.6, 1246.0], [97.7, 1250.0], [97.8, 1254.0], [97.9, 1262.0], [98.0, 1268.0], [98.1, 1274.0], [98.2, 1279.0], [98.3, 1287.0], [98.4, 1299.0], [98.5, 1310.0], [98.6, 1322.0], [98.7, 1338.0], [98.8, 1349.0], [98.9, 1380.0], [99.0, 1418.0], [99.1, 1487.0], [99.2, 1652.0], [99.3, 1954.0], [99.4, 2052.0], [99.5, 2157.0], [99.6, 2984.0], [99.7, 3128.0], [99.8, 4037.0], [99.9, 4182.0], [100.0, 12245.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 236.0], [0.3, 238.0], [0.4, 238.0], [0.5, 239.0], [0.6, 239.0], [0.7, 240.0], [0.8, 240.0], [0.9, 240.0], [1.0, 241.0], [1.1, 241.0], [1.2, 241.0], [1.3, 241.0], [1.4, 242.0], [1.5, 242.0], [1.6, 242.0], [1.7, 242.0], [1.8, 242.0], [1.9, 242.0], [2.0, 243.0], [2.1, 243.0], [2.2, 243.0], [2.3, 243.0], [2.4, 243.0], [2.5, 243.0], [2.6, 243.0], [2.7, 243.0], [2.8, 244.0], [2.9, 244.0], [3.0, 244.0], [3.1, 244.0], [3.2, 244.0], [3.3, 244.0], [3.4, 244.0], [3.5, 244.0], [3.6, 244.0], [3.7, 245.0], [3.8, 245.0], [3.9, 245.0], [4.0, 245.0], [4.1, 245.0], [4.2, 245.0], [4.3, 245.0], [4.4, 245.0], [4.5, 245.0], [4.6, 246.0], [4.7, 246.0], [4.8, 246.0], [4.9, 246.0], [5.0, 246.0], [5.1, 246.0], [5.2, 246.0], [5.3, 246.0], [5.4, 246.0], [5.5, 246.0], [5.6, 246.0], [5.7, 247.0], [5.8, 247.0], [5.9, 247.0], [6.0, 247.0], [6.1, 247.0], [6.2, 247.0], [6.3, 247.0], [6.4, 247.0], [6.5, 247.0], [6.6, 247.0], [6.7, 247.0], [6.8, 247.0], [6.9, 247.0], [7.0, 247.0], [7.1, 248.0], [7.2, 248.0], [7.3, 248.0], [7.4, 248.0], [7.5, 248.0], [7.6, 248.0], [7.7, 248.0], [7.8, 248.0], [7.9, 248.0], [8.0, 248.0], [8.1, 248.0], [8.2, 248.0], [8.3, 248.0], [8.4, 248.0], [8.5, 249.0], [8.6, 249.0], [8.7, 249.0], [8.8, 249.0], [8.9, 249.0], [9.0, 249.0], [9.1, 249.0], [9.2, 249.0], [9.3, 249.0], [9.4, 249.0], [9.5, 249.0], [9.6, 249.0], [9.7, 249.0], [9.8, 249.0], [9.9, 249.0], [10.0, 249.0], [10.1, 250.0], [10.2, 250.0], [10.3, 250.0], [10.4, 250.0], [10.5, 250.0], [10.6, 250.0], [10.7, 250.0], [10.8, 250.0], [10.9, 250.0], [11.0, 250.0], [11.1, 250.0], [11.2, 250.0], [11.3, 250.0], [11.4, 250.0], [11.5, 250.0], [11.6, 250.0], [11.7, 251.0], [11.8, 251.0], [11.9, 251.0], [12.0, 251.0], [12.1, 251.0], [12.2, 251.0], [12.3, 251.0], [12.4, 251.0], [12.5, 251.0], [12.6, 251.0], [12.7, 251.0], [12.8, 251.0], [12.9, 251.0], [13.0, 251.0], [13.1, 251.0], [13.2, 251.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 252.0], [14.0, 252.0], [14.1, 252.0], [14.2, 252.0], [14.3, 252.0], [14.4, 252.0], [14.5, 252.0], [14.6, 252.0], [14.7, 252.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 253.0], [15.6, 253.0], [15.7, 253.0], [15.8, 253.0], [15.9, 253.0], [16.0, 253.0], [16.1, 253.0], [16.2, 253.0], [16.3, 253.0], [16.4, 254.0], [16.5, 254.0], [16.6, 254.0], [16.7, 254.0], [16.8, 254.0], [16.9, 254.0], [17.0, 254.0], [17.1, 254.0], [17.2, 254.0], [17.3, 254.0], [17.4, 254.0], [17.5, 254.0], [17.6, 254.0], [17.7, 254.0], [17.8, 254.0], [17.9, 254.0], [18.0, 254.0], [18.1, 255.0], [18.2, 255.0], [18.3, 255.0], [18.4, 255.0], [18.5, 255.0], [18.6, 255.0], [18.7, 255.0], [18.8, 255.0], [18.9, 255.0], [19.0, 255.0], [19.1, 255.0], [19.2, 255.0], [19.3, 255.0], [19.4, 255.0], [19.5, 255.0], [19.6, 255.0], [19.7, 256.0], [19.8, 256.0], [19.9, 256.0], [20.0, 256.0], [20.1, 256.0], [20.2, 256.0], [20.3, 256.0], [20.4, 256.0], [20.5, 256.0], [20.6, 256.0], [20.7, 256.0], [20.8, 256.0], [20.9, 256.0], [21.0, 256.0], [21.1, 256.0], [21.2, 256.0], [21.3, 256.0], [21.4, 257.0], [21.5, 257.0], [21.6, 257.0], [21.7, 257.0], [21.8, 257.0], [21.9, 257.0], [22.0, 257.0], [22.1, 257.0], [22.2, 257.0], [22.3, 257.0], [22.4, 257.0], [22.5, 257.0], [22.6, 257.0], [22.7, 257.0], [22.8, 257.0], [22.9, 258.0], [23.0, 258.0], [23.1, 258.0], [23.2, 258.0], [23.3, 258.0], [23.4, 258.0], [23.5, 258.0], [23.6, 258.0], [23.7, 258.0], [23.8, 258.0], [23.9, 258.0], [24.0, 258.0], [24.1, 258.0], [24.2, 258.0], [24.3, 258.0], [24.4, 258.0], [24.5, 259.0], [24.6, 259.0], [24.7, 259.0], [24.8, 259.0], [24.9, 259.0], [25.0, 259.0], [25.1, 259.0], [25.2, 259.0], [25.3, 259.0], [25.4, 259.0], [25.5, 259.0], [25.6, 259.0], [25.7, 259.0], [25.8, 259.0], [25.9, 259.0], [26.0, 260.0], [26.1, 260.0], [26.2, 260.0], [26.3, 260.0], [26.4, 260.0], [26.5, 260.0], [26.6, 260.0], [26.7, 260.0], [26.8, 260.0], [26.9, 260.0], [27.0, 260.0], [27.1, 260.0], [27.2, 260.0], [27.3, 260.0], [27.4, 260.0], [27.5, 260.0], [27.6, 261.0], [27.7, 261.0], [27.8, 261.0], [27.9, 261.0], [28.0, 261.0], [28.1, 261.0], [28.2, 261.0], [28.3, 261.0], [28.4, 261.0], [28.5, 261.0], [28.6, 261.0], [28.7, 261.0], [28.8, 261.0], [28.9, 261.0], [29.0, 261.0], [29.1, 261.0], [29.2, 261.0], [29.3, 262.0], [29.4, 262.0], [29.5, 262.0], [29.6, 262.0], [29.7, 262.0], [29.8, 262.0], [29.9, 262.0], [30.0, 262.0], [30.1, 262.0], [30.2, 262.0], [30.3, 262.0], [30.4, 262.0], [30.5, 262.0], [30.6, 262.0], [30.7, 262.0], [30.8, 262.0], [30.9, 263.0], [31.0, 263.0], [31.1, 263.0], [31.2, 263.0], [31.3, 263.0], [31.4, 263.0], [31.5, 263.0], [31.6, 263.0], [31.7, 263.0], [31.8, 263.0], [31.9, 263.0], [32.0, 263.0], [32.1, 263.0], [32.2, 263.0], [32.3, 263.0], [32.4, 263.0], [32.5, 263.0], [32.6, 264.0], [32.7, 264.0], [32.8, 264.0], [32.9, 264.0], [33.0, 264.0], [33.1, 264.0], [33.2, 264.0], [33.3, 264.0], [33.4, 264.0], [33.5, 264.0], [33.6, 264.0], [33.7, 264.0], [33.8, 264.0], [33.9, 264.0], [34.0, 264.0], [34.1, 264.0], [34.2, 265.0], [34.3, 265.0], [34.4, 265.0], [34.5, 265.0], [34.6, 265.0], [34.7, 265.0], [34.8, 265.0], [34.9, 265.0], [35.0, 265.0], [35.1, 265.0], [35.2, 265.0], [35.3, 265.0], [35.4, 265.0], [35.5, 265.0], [35.6, 265.0], [35.7, 265.0], [35.8, 265.0], [35.9, 266.0], [36.0, 266.0], [36.1, 266.0], [36.2, 266.0], [36.3, 266.0], [36.4, 266.0], [36.5, 266.0], [36.6, 266.0], [36.7, 266.0], [36.8, 266.0], [36.9, 266.0], [37.0, 266.0], [37.1, 266.0], [37.2, 266.0], [37.3, 266.0], [37.4, 266.0], [37.5, 266.0], [37.6, 266.0], [37.7, 267.0], [37.8, 267.0], [37.9, 267.0], [38.0, 267.0], [38.1, 267.0], [38.2, 267.0], [38.3, 267.0], [38.4, 267.0], [38.5, 267.0], [38.6, 267.0], [38.7, 267.0], [38.8, 267.0], [38.9, 267.0], [39.0, 267.0], [39.1, 267.0], [39.2, 267.0], [39.3, 267.0], [39.4, 268.0], [39.5, 268.0], [39.6, 268.0], [39.7, 268.0], [39.8, 268.0], [39.9, 268.0], [40.0, 268.0], [40.1, 268.0], [40.2, 268.0], [40.3, 268.0], [40.4, 268.0], [40.5, 268.0], [40.6, 268.0], [40.7, 268.0], [40.8, 268.0], [40.9, 268.0], [41.0, 268.0], [41.1, 269.0], [41.2, 269.0], [41.3, 269.0], [41.4, 269.0], [41.5, 269.0], [41.6, 269.0], [41.7, 269.0], [41.8, 269.0], [41.9, 269.0], [42.0, 269.0], [42.1, 269.0], [42.2, 269.0], [42.3, 269.0], [42.4, 269.0], [42.5, 269.0], [42.6, 269.0], [42.7, 269.0], [42.8, 270.0], [42.9, 270.0], [43.0, 270.0], [43.1, 270.0], [43.2, 270.0], [43.3, 270.0], [43.4, 270.0], [43.5, 270.0], [43.6, 270.0], [43.7, 270.0], [43.8, 270.0], [43.9, 270.0], [44.0, 270.0], [44.1, 270.0], [44.2, 270.0], [44.3, 270.0], [44.4, 270.0], [44.5, 271.0], [44.6, 271.0], [44.7, 271.0], [44.8, 271.0], [44.9, 271.0], [45.0, 271.0], [45.1, 271.0], [45.2, 271.0], [45.3, 271.0], [45.4, 271.0], [45.5, 271.0], [45.6, 271.0], [45.7, 271.0], [45.8, 271.0], [45.9, 271.0], [46.0, 271.0], [46.1, 272.0], [46.2, 272.0], [46.3, 272.0], [46.4, 272.0], [46.5, 272.0], [46.6, 272.0], [46.7, 272.0], [46.8, 272.0], [46.9, 272.0], [47.0, 272.0], [47.1, 272.0], [47.2, 272.0], [47.3, 272.0], [47.4, 272.0], [47.5, 272.0], [47.6, 272.0], [47.7, 273.0], [47.8, 273.0], [47.9, 273.0], [48.0, 273.0], [48.1, 273.0], [48.2, 273.0], [48.3, 273.0], [48.4, 273.0], [48.5, 273.0], [48.6, 273.0], [48.7, 273.0], [48.8, 273.0], [48.9, 273.0], [49.0, 274.0], [49.1, 274.0], [49.2, 274.0], [49.3, 274.0], [49.4, 274.0], [49.5, 274.0], [49.6, 274.0], [49.7, 274.0], [49.8, 274.0], [49.9, 274.0], [50.0, 274.0], [50.1, 274.0], [50.2, 274.0], [50.3, 274.0], [50.4, 274.0], [50.5, 275.0], [50.6, 275.0], [50.7, 275.0], [50.8, 275.0], [50.9, 275.0], [51.0, 275.0], [51.1, 275.0], [51.2, 275.0], [51.3, 275.0], [51.4, 275.0], [51.5, 275.0], [51.6, 275.0], [51.7, 275.0], [51.8, 276.0], [51.9, 276.0], [52.0, 276.0], [52.1, 276.0], [52.2, 276.0], [52.3, 276.0], [52.4, 276.0], [52.5, 276.0], [52.6, 276.0], [52.7, 276.0], [52.8, 276.0], [52.9, 276.0], [53.0, 276.0], [53.1, 277.0], [53.2, 277.0], [53.3, 277.0], [53.4, 277.0], [53.5, 277.0], [53.6, 277.0], [53.7, 277.0], [53.8, 277.0], [53.9, 277.0], [54.0, 277.0], [54.1, 277.0], [54.2, 278.0], [54.3, 278.0], [54.4, 278.0], [54.5, 278.0], [54.6, 278.0], [54.7, 278.0], [54.8, 278.0], [54.9, 278.0], [55.0, 278.0], [55.1, 278.0], [55.2, 278.0], [55.3, 278.0], [55.4, 279.0], [55.5, 279.0], [55.6, 279.0], [55.7, 279.0], [55.8, 279.0], [55.9, 279.0], [56.0, 279.0], [56.1, 279.0], [56.2, 279.0], [56.3, 279.0], [56.4, 280.0], [56.5, 280.0], [56.6, 280.0], [56.7, 280.0], [56.8, 280.0], [56.9, 280.0], [57.0, 280.0], [57.1, 280.0], [57.2, 280.0], [57.3, 280.0], [57.4, 280.0], [57.5, 281.0], [57.6, 281.0], [57.7, 281.0], [57.8, 281.0], [57.9, 281.0], [58.0, 281.0], [58.1, 281.0], [58.2, 281.0], [58.3, 281.0], [58.4, 281.0], [58.5, 282.0], [58.6, 282.0], [58.7, 282.0], [58.8, 282.0], [58.9, 282.0], [59.0, 282.0], [59.1, 282.0], [59.2, 282.0], [59.3, 282.0], [59.4, 282.0], [59.5, 283.0], [59.6, 283.0], [59.7, 283.0], [59.8, 283.0], [59.9, 283.0], [60.0, 283.0], [60.1, 283.0], [60.2, 283.0], [60.3, 283.0], [60.4, 284.0], [60.5, 284.0], [60.6, 284.0], [60.7, 284.0], [60.8, 284.0], [60.9, 284.0], [61.0, 284.0], [61.1, 284.0], [61.2, 284.0], [61.3, 284.0], [61.4, 284.0], [61.5, 285.0], [61.6, 285.0], [61.7, 285.0], [61.8, 285.0], [61.9, 285.0], [62.0, 285.0], [62.1, 285.0], [62.2, 285.0], [62.3, 285.0], [62.4, 285.0], [62.5, 285.0], [62.6, 286.0], [62.7, 286.0], [62.8, 286.0], [62.9, 286.0], [63.0, 286.0], [63.1, 286.0], [63.2, 286.0], [63.3, 286.0], [63.4, 286.0], [63.5, 286.0], [63.6, 286.0], [63.7, 287.0], [63.8, 287.0], [63.9, 287.0], [64.0, 287.0], [64.1, 287.0], [64.2, 287.0], [64.3, 287.0], [64.4, 287.0], [64.5, 288.0], [64.6, 288.0], [64.7, 288.0], [64.8, 288.0], [64.9, 288.0], [65.0, 288.0], [65.1, 288.0], [65.2, 288.0], [65.3, 288.0], [65.4, 289.0], [65.5, 289.0], [65.6, 289.0], [65.7, 289.0], [65.8, 289.0], [65.9, 289.0], [66.0, 289.0], [66.1, 289.0], [66.2, 289.0], [66.3, 290.0], [66.4, 290.0], [66.5, 290.0], [66.6, 290.0], [66.7, 290.0], [66.8, 290.0], [66.9, 290.0], [67.0, 290.0], [67.1, 291.0], [67.2, 291.0], [67.3, 291.0], [67.4, 291.0], [67.5, 291.0], [67.6, 291.0], [67.7, 291.0], [67.8, 291.0], [67.9, 292.0], [68.0, 292.0], [68.1, 292.0], [68.2, 292.0], [68.3, 292.0], [68.4, 292.0], [68.5, 292.0], [68.6, 292.0], [68.7, 293.0], [68.8, 293.0], [68.9, 293.0], [69.0, 293.0], [69.1, 293.0], [69.2, 293.0], [69.3, 293.0], [69.4, 293.0], [69.5, 294.0], [69.6, 294.0], [69.7, 294.0], [69.8, 294.0], [69.9, 294.0], [70.0, 294.0], [70.1, 295.0], [70.2, 295.0], [70.3, 295.0], [70.4, 295.0], [70.5, 295.0], [70.6, 295.0], [70.7, 295.0], [70.8, 296.0], [70.9, 296.0], [71.0, 296.0], [71.1, 296.0], [71.2, 296.0], [71.3, 297.0], [71.4, 297.0], [71.5, 297.0], [71.6, 297.0], [71.7, 297.0], [71.8, 297.0], [71.9, 297.0], [72.0, 298.0], [72.1, 298.0], [72.2, 298.0], [72.3, 298.0], [72.4, 298.0], [72.5, 298.0], [72.6, 299.0], [72.7, 299.0], [72.8, 299.0], [72.9, 299.0], [73.0, 299.0], [73.1, 300.0], [73.2, 300.0], [73.3, 300.0], [73.4, 300.0], [73.5, 301.0], [73.6, 301.0], [73.7, 301.0], [73.8, 301.0], [73.9, 301.0], [74.0, 302.0], [74.1, 302.0], [74.2, 302.0], [74.3, 302.0], [74.4, 302.0], [74.5, 303.0], [74.6, 303.0], [74.7, 303.0], [74.8, 303.0], [74.9, 304.0], [75.0, 304.0], [75.1, 304.0], [75.2, 304.0], [75.3, 305.0], [75.4, 305.0], [75.5, 305.0], [75.6, 306.0], [75.7, 306.0], [75.8, 306.0], [75.9, 306.0], [76.0, 307.0], [76.1, 307.0], [76.2, 307.0], [76.3, 307.0], [76.4, 308.0], [76.5, 308.0], [76.6, 308.0], [76.7, 309.0], [76.8, 309.0], [76.9, 309.0], [77.0, 310.0], [77.1, 310.0], [77.2, 310.0], [77.3, 310.0], [77.4, 311.0], [77.5, 311.0], [77.6, 312.0], [77.7, 312.0], [77.8, 312.0], [77.9, 313.0], [78.0, 313.0], [78.1, 313.0], [78.2, 314.0], [78.3, 314.0], [78.4, 314.0], [78.5, 315.0], [78.6, 315.0], [78.7, 315.0], [78.8, 316.0], [78.9, 316.0], [79.0, 316.0], [79.1, 317.0], [79.2, 317.0], [79.3, 317.0], [79.4, 318.0], [79.5, 318.0], [79.6, 318.0], [79.7, 319.0], [79.8, 319.0], [79.9, 320.0], [80.0, 320.0], [80.1, 320.0], [80.2, 321.0], [80.3, 321.0], [80.4, 322.0], [80.5, 322.0], [80.6, 323.0], [80.7, 323.0], [80.8, 324.0], [80.9, 324.0], [81.0, 325.0], [81.1, 325.0], [81.2, 326.0], [81.3, 326.0], [81.4, 327.0], [81.5, 327.0], [81.6, 328.0], [81.7, 328.0], [81.8, 329.0], [81.9, 329.0], [82.0, 330.0], [82.1, 330.0], [82.2, 331.0], [82.3, 331.0], [82.4, 332.0], [82.5, 333.0], [82.6, 333.0], [82.7, 334.0], [82.8, 335.0], [82.9, 335.0], [83.0, 336.0], [83.1, 337.0], [83.2, 338.0], [83.3, 339.0], [83.4, 339.0], [83.5, 340.0], [83.6, 341.0], [83.7, 342.0], [83.8, 343.0], [83.9, 344.0], [84.0, 344.0], [84.1, 345.0], [84.2, 346.0], [84.3, 347.0], [84.4, 348.0], [84.5, 349.0], [84.6, 350.0], [84.7, 351.0], [84.8, 353.0], [84.9, 353.0], [85.0, 355.0], [85.1, 356.0], [85.2, 357.0], [85.3, 358.0], [85.4, 359.0], [85.5, 361.0], [85.6, 362.0], [85.7, 363.0], [85.8, 364.0], [85.9, 366.0], [86.0, 367.0], [86.1, 368.0], [86.2, 369.0], [86.3, 371.0], [86.4, 372.0], [86.5, 374.0], [86.6, 376.0], [86.7, 378.0], [86.8, 380.0], [86.9, 382.0], [87.0, 383.0], [87.1, 385.0], [87.2, 387.0], [87.3, 388.0], [87.4, 390.0], [87.5, 393.0], [87.6, 394.0], [87.7, 397.0], [87.8, 399.0], [87.9, 402.0], [88.0, 403.0], [88.1, 406.0], [88.2, 407.0], [88.3, 409.0], [88.4, 412.0], [88.5, 414.0], [88.6, 417.0], [88.7, 420.0], [88.8, 423.0], [88.9, 427.0], [89.0, 429.0], [89.1, 433.0], [89.2, 436.0], [89.3, 439.0], [89.4, 443.0], [89.5, 448.0], [89.6, 451.0], [89.7, 456.0], [89.8, 461.0], [89.9, 466.0], [90.0, 470.0], [90.1, 475.0], [90.2, 481.0], [90.3, 487.0], [90.4, 493.0], [90.5, 497.0], [90.6, 503.0], [90.7, 511.0], [90.8, 520.0], [90.9, 528.0], [91.0, 534.0], [91.1, 542.0], [91.2, 551.0], [91.3, 561.0], [91.4, 571.0], [91.5, 586.0], [91.6, 610.0], [91.7, 632.0], [91.8, 644.0], [91.9, 660.0], [92.0, 671.0], [92.1, 684.0], [92.2, 695.0], [92.3, 706.0], [92.4, 720.0], [92.5, 732.0], [92.6, 745.0], [92.7, 763.0], [92.8, 775.0], [92.9, 787.0], [93.0, 796.0], [93.1, 807.0], [93.2, 817.0], [93.3, 829.0], [93.4, 838.0], [93.5, 850.0], [93.6, 858.0], [93.7, 867.0], [93.8, 874.0], [93.9, 882.0], [94.0, 891.0], [94.1, 898.0], [94.2, 910.0], [94.3, 924.0], [94.4, 933.0], [94.5, 947.0], [94.6, 960.0], [94.7, 971.0], [94.8, 983.0], [94.9, 994.0], [95.0, 1004.0], [95.1, 1011.0], [95.2, 1021.0], [95.3, 1032.0], [95.4, 1045.0], [95.5, 1056.0], [95.6, 1074.0], [95.7, 1087.0], [95.8, 1104.0], [95.9, 1112.0], [96.0, 1121.0], [96.1, 1133.0], [96.2, 1147.0], [96.3, 1158.0], [96.4, 1174.0], [96.5, 1189.0], [96.6, 1207.0], [96.7, 1230.0], [96.8, 1249.0], [96.9, 1268.0], [97.0, 1287.0], [97.1, 1309.0], [97.2, 1339.0], [97.3, 1373.0], [97.4, 1399.0], [97.5, 1422.0], [97.6, 1446.0], [97.7, 1477.0], [97.8, 1508.0], [97.9, 1552.0], [98.0, 1622.0], [98.1, 1680.0], [98.2, 1782.0], [98.3, 1850.0], [98.4, 1891.0], [98.5, 1930.0], [98.6, 1959.0], [98.7, 1982.0], [98.8, 2020.0], [98.9, 2055.0], [99.0, 2110.0], [99.1, 2212.0], [99.2, 2280.0], [99.3, 2335.0], [99.4, 2428.0], [99.5, 2515.0], [99.6, 2553.0], [99.7, 2596.0], [99.8, 3252.0], [99.9, 3293.0], [100.0, 10310.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 29069.0, "series": [{"data": [[8200.0, 1.0], [9200.0, 2.0], [600.0, 288.0], [10200.0, 2.0], [700.0, 287.0], [800.0, 403.0], [900.0, 307.0], [1000.0, 311.0], [1100.0, 289.0], [1200.0, 198.0], [1300.0, 130.0], [1400.0, 139.0], [1500.0, 64.0], [1600.0, 78.0], [1700.0, 35.0], [1800.0, 63.0], [1900.0, 145.0], [2000.0, 93.0], [2100.0, 46.0], [2200.0, 83.0], [2300.0, 45.0], [2400.0, 39.0], [2500.0, 85.0], [2600.0, 26.0], [200.0, 29069.0], [3200.0, 60.0], [3300.0, 7.0], [4300.0, 2.0], [4200.0, 5.0], [300.0, 4413.0], [5200.0, 1.0], [6200.0, 2.0], [400.0, 941.0], [7200.0, 1.0], [7300.0, 2.0], [500.0, 338.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[9000.0, 1.0], [9200.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [12200.0, 1.0], [900.0, 9314.0], [1000.0, 19901.0], [1100.0, 7211.0], [1200.0, 969.0], [1300.0, 207.0], [1400.0, 59.0], [1500.0, 23.0], [1600.0, 18.0], [1700.0, 15.0], [1800.0, 11.0], [1900.0, 18.0], [2000.0, 38.0], [2100.0, 43.0], [2200.0, 4.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [2900.0, 14.0], [3000.0, 25.0], [3100.0, 32.0], [3200.0, 1.0], [3900.0, 8.0], [4000.0, 13.0], [4100.0, 36.0], [4200.0, 9.0], [4900.0, 1.0], [5100.0, 5.0], [5200.0, 3.0], [5800.0, 1.0], [5900.0, 1.0], [6100.0, 3.0], [6200.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7900.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 57.0], [9200.0, 1.0], [600.0, 264.0], [10300.0, 1.0], [700.0, 301.0], [800.0, 411.0], [900.0, 314.0], [1000.0, 319.0], [1100.0, 302.0], [1200.0, 186.0], [1300.0, 128.0], [1400.0, 141.0], [1500.0, 68.0], [1600.0, 67.0], [1700.0, 32.0], [1800.0, 81.0], [1900.0, 123.0], [2000.0, 88.0], [2100.0, 42.0], [2200.0, 63.0], [2300.0, 42.0], [2400.0, 39.0], [2500.0, 88.0], [2600.0, 26.0], [200.0, 27685.0], [3200.0, 57.0], [3300.0, 7.0], [4200.0, 12.0], [4300.0, 1.0], [300.0, 5622.0], [6200.0, 3.0], [6300.0, 1.0], [400.0, 1036.0], [7200.0, 4.0], [500.0, 388.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 306.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 68759.0, "series": [{"data": [[0.0, 68759.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 43016.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1919.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 306.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 197.29944341372882, "minX": 1.74172854E12, "maxY": 262.5386498775778, "series": [{"data": [[1.74172872E12, 202.09161931818142], [1.74172938E12, 202.17529598869035], [1.74172968E12, 211.26722449706247], [1.74172878E12, 201.72099644128116], [1.74172974E12, 212.53972541075865], [1.74172908E12, 206.37664415215067], [1.74172962E12, 206.98027017419156], [1.74172866E12, 215.30048034157625], [1.74172896E12, 203.1218733368808], [1.74172902E12, 202.5629563668742], [1.74172932E12, 201.6989304812838], [1.7417289E12, 204.9294326241136], [1.7417292E12, 250.58871112708943], [1.7417286E12, 204.0732444444447], [1.74172926E12, 262.5386498775778], [1.74172956E12, 205.99607773221612], [1.74172914E12, 208.4920350814391], [1.74172944E12, 203.50962223806198], [1.7417295E12, 203.89143161256027], [1.74172854E12, 197.29944341372882], [1.74172884E12, 205.61733238231133]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74172974E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 243.55555555555554, "minX": 1.0, "maxY": 3159.777777777778, "series": [{"data": [[15.0, 546.0], [22.0, 683.0], [24.0, 714.5], [38.0, 733.0], [43.0, 815.0], [42.0, 809.0], [44.0, 903.0], [49.0, 985.0], [48.0, 962.0], [50.0, 1044.0], [54.0, 1058.0], [56.0, 1052.0], [59.0, 1022.0], [73.0, 919.5], [79.0, 856.0], [76.0, 931.0], [80.0, 846.0], [87.0, 678.0], [86.0, 720.0], [84.0, 755.0], [94.0, 262.0], [98.0, 746.0], [96.0, 694.5], [100.0, 501.5], [103.0, 469.66666666666663], [102.0, 733.0], [101.0, 744.0], [106.0, 333.6666666666667], [105.0, 767.0], [109.0, 733.0], [108.0, 714.5], [114.0, 489.5], [119.0, 798.0], [117.0, 774.0], [116.0, 746.1428571428571], [121.0, 746.2], [122.0, 255.0], [123.0, 935.0], [126.0, 498.75], [127.0, 260.5], [124.0, 971.0], [132.0, 297.0], [134.0, 596.25], [135.0, 690.0], [133.0, 963.0], [131.0, 970.5], [129.0, 968.0], [136.0, 704.6666666666666], [137.0, 596.0], [141.0, 723.0], [143.0, 1074.0], [142.0, 1074.0], [138.0, 962.25], [144.0, 620.2], [148.0, 1014.1], [150.0, 253.0], [149.0, 857.6666666666666], [151.0, 261.0], [145.0, 1092.0], [152.0, 711.0], [153.0, 271.5], [154.0, 541.0], [155.0, 272.0], [156.0, 282.0], [157.0, 701.5], [158.0, 413.4], [159.0, 524.8333333333333], [161.0, 272.0], [162.0, 782.0], [164.0, 785.6], [163.0, 653.0], [165.0, 333.5], [166.0, 335.0], [167.0, 677.5], [160.0, 1056.75], [170.0, 255.0], [172.0, 469.0], [173.0, 828.0], [175.0, 378.875], [171.0, 1082.5], [177.0, 271.3333333333333], [178.0, 296.0], [180.0, 265.75], [181.0, 317.3333333333333], [179.0, 313.0], [183.0, 993.0], [176.0, 1095.0], [184.0, 269.375], [185.0, 258.66666666666663], [186.0, 269.0967741935484], [187.0, 267.43333333333334], [189.0, 257.9259259259258], [190.0, 268.5989010989012], [191.0, 270.71212121212125], [188.0, 260.80412371134025], [192.0, 261.5270270270271], [195.0, 261.7709720372842], [193.0, 260.42889908256853], [194.0, 261.73090909090865], [196.0, 266.2278617710585], [198.0, 266.37837837837867], [199.0, 264.82794891059353], [197.0, 263.8848063555117], [202.0, 269.3103635377099], [203.0, 271.6406560636182], [201.0, 267.72004889975534], [205.0, 272.6852508869738], [204.0, 271.335480673935], [200.0, 265.97437673130275], [207.0, 278.89758403361367], [206.0, 273.9965415019763], [208.0, 279.4659217877096], [210.0, 280.8366619115553], [209.0, 279.04141018466703], [213.0, 302.4976905311776], [214.0, 305.8129117259552], [215.0, 314.83114754098375], [212.0, 290.74927953890466], [211.0, 287.20796100731116], [216.0, 306.48863636363626], [219.0, 341.3749999999999], [218.0, 330.545774647887], [217.0, 316.73314606741565], [220.0, 358.9637681159421], [221.0, 404.2044444444446], [222.0, 428.6893203883496], [223.0, 445.8552631578948], [231.0, 633.1304347826086], [229.0, 581.4375], [230.0, 594.8939393939393], [228.0, 515.2835820895524], [226.0, 471.627272727273], [225.0, 446.992], [224.0, 446.2297297297299], [227.0, 478.6753246753247], [239.0, 807.9807692307692], [238.0, 694.5106382978721], [237.0, 659.2244897959183], [236.0, 593.75], [235.0, 677.8823529411765], [233.0, 791.8918918918919], [232.0, 864.1025641025639], [234.0, 484.94736842105254], [247.0, 875.4230769230771], [245.0, 1091.3373493975905], [246.0, 897.5402298850573], [240.0, 825.0615384615384], [242.0, 836.9302325581394], [241.0, 924.6304347826086], [244.0, 896.4929577464789], [243.0, 905.7894736842105], [254.0, 1053.6285714285711], [255.0, 1055.5125], [253.0, 1063.831460674157], [249.0, 895.9473684210527], [248.0, 919.6799999999998], [250.0, 998.8095238095237], [251.0, 1046.4457831325296], [252.0, 1047.6304347826092], [270.0, 1184.5641025641025], [271.0, 1186.3000000000002], [269.0, 990.75], [268.0, 1058.4090909090908], [267.0, 1350.8499999999997], [266.0, 1133.878787878788], [265.0, 1247.2250000000001], [264.0, 1186.2115384615383], [263.0, 1312.5689655172416], [257.0, 1051.3793103448277], [256.0, 1021.3764705882352], [259.0, 1051.506329113924], [258.0, 1005.0196078431372], [261.0, 1338.1351351351352], [260.0, 1187.7500000000002], [262.0, 1335.2571428571423], [286.0, 1755.7931034482758], [287.0, 778.0909090909091], [285.0, 1582.64], [284.0, 453.75000000000006], [282.0, 1460.7142857142858], [283.0, 1282.0], [281.0, 876.0], [280.0, 1343.8333333333335], [279.0, 555.5714285714286], [272.0, 1290.0000000000002], [275.0, 416.57894736842104], [274.0, 401.7894736842106], [273.0, 828.2962962962962], [278.0, 1026.4166666666667], [277.0, 1029.2], [276.0, 473.5333333333334], [296.0, 1801.5588235294122], [298.0, 928.5], [299.0, 1928.6666666666667], [300.0, 2029.3750000000002], [301.0, 2034.0], [302.0, 3136.0], [303.0, 2324.625], [291.0, 738.4347826086957], [290.0, 896.2631578947368], [288.0, 1063.375], [289.0, 495.66666666666663], [297.0, 1812.9285714285716], [295.0, 1730.5294117647059], [294.0, 1934.8181818181818], [293.0, 1387.5], [292.0, 1209.0666666666666], [305.0, 1894.7000000000003], [306.0, 2457.7499999999995], [307.0, 2859.1428571428573], [316.0, 2372.923076923076], [317.0, 2001.1666666666665], [318.0, 2054.833333333333], [319.0, 2127.3333333333335], [304.0, 2045.2307692307693], [308.0, 1933.857142857143], [309.0, 2073.12], [310.0, 2018.6666666666667], [311.0, 2039.4444444444446], [312.0, 2053.285714285714], [313.0, 1993.4999999999998], [314.0, 2058.6428571428573], [315.0, 2228.7333333333336], [321.0, 2141.0], [322.0, 1895.0], [324.0, 2106.636363636363], [325.0, 2191.4375], [326.0, 2149.5], [323.0, 2056.714285714286], [327.0, 2107.4], [328.0, 1711.75], [335.0, 2430.7857142857147], [332.0, 2226.0], [333.0, 2313.5], [334.0, 2380.8571428571427], [330.0, 2167.9999999999995], [331.0, 964.5714285714286], [329.0, 2192.1111111111113], [339.0, 2208.368421052631], [337.0, 2392.0], [336.0, 2426.096774193549], [338.0, 2504.777777777778], [341.0, 2449.708333333333], [340.0, 2503.5], [342.0, 2547.7272727272725], [345.0, 2548.3], [343.0, 2574.8181818181815], [344.0, 2555.0], [346.0, 2541.125], [347.0, 2502.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[210.46121052631636, 369.1192894736846]], "isOverall": false, "label": "Booking-Aggregated", "isController": false}, {"data": [[82.0, 1497.1428571428569], [83.0, 1106.0], [88.0, 1072.5], [89.0, 1016.0], [91.0, 1010.0], [92.0, 1063.5], [93.0, 1054.0], [95.0, 1014.0], [96.0, 1147.3333333333333], [97.0, 1027.0], [99.0, 1090.6666666666667], [103.0, 1119.6], [100.0, 1132.0], [106.0, 1099.6666666666667], [114.0, 1155.6666666666667], [116.0, 1102.2], [122.0, 1191.0], [123.0, 1063.5], [121.0, 1159.0], [126.0, 1086.0], [127.0, 1171.0], [128.0, 1110.0], [132.0, 1122.0], [133.0, 1125.0], [134.0, 1151.0], [136.0, 1166.3333333333333], [137.0, 1192.3333333333333], [141.0, 1116.25], [142.0, 1176.0], [144.0, 1136.25], [147.0, 1111.3333333333333], [148.0, 1041.0], [149.0, 1066.6], [150.0, 1131.5], [151.0, 1083.5], [146.0, 1108.0], [154.0, 1152.0], [155.0, 1085.3333333333333], [156.0, 1066.5], [157.0, 1139.5], [159.0, 1020.5], [160.0, 1142.0], [161.0, 1016.0], [163.0, 1089.25], [164.0, 1146.6666666666667], [166.0, 1047.0], [167.0, 1045.3333333333333], [165.0, 1160.0], [162.0, 1138.0], [168.0, 998.0], [169.0, 979.0], [170.0, 1058.0], [174.0, 1099.0], [173.0, 1051.0], [172.0, 1141.3333333333333], [175.0, 1109.0], [171.0, 1147.0], [176.0, 1079.4], [177.0, 1051.8333333333333], [178.0, 1074.4], [179.0, 962.0], [181.0, 1075.5], [180.0, 1034.5], [182.0, 1071.0], [183.0, 1015.5], [184.0, 1057.9999999999998], [185.0, 1024.2222222222222], [186.0, 1017.5], [187.0, 1026.5750000000003], [188.0, 1022.9186991869914], [189.0, 1042.1636363636362], [190.0, 1030.642857142857], [191.0, 1034.0678571428577], [192.0, 1026.933717579251], [194.0, 1030.0606060606058], [193.0, 1029.0775862068972], [195.0, 1027.909963985596], [196.0, 1034.4428879310344], [197.0, 1032.8219844357961], [198.0, 1037.092221331194], [199.0, 1035.0069930069944], [201.0, 1032.193390452876], [202.0, 1040.5971997845973], [203.0, 1044.8809402146126], [205.0, 1050.9059113300457], [204.0, 1047.116116116115], [207.0, 1055.3315479378687], [206.0, 1049.0729366602723], [200.0, 1031.5690834473328], [208.0, 1061.3016820401533], [210.0, 1064.1844660194174], [211.0, 1065.5728813559333], [209.0, 1064.4160879629633], [215.0, 1081.8929188255602], [214.0, 1076.961104140526], [213.0, 1072.5300751879709], [212.0, 1066.786917740337], [216.0, 1093.4800995024866], [217.0, 1094.573208722741], [218.0, 1081.6920152091254], [219.0, 1113.1164658634543], [220.0, 1108.4685039370077], [222.0, 1125.2456140350873], [223.0, 1117.4654088050308], [221.0, 1135.0131004366813], [231.0, 1212.875], [230.0, 1130.106060606061], [229.0, 1148.1600000000005], [228.0, 1157.8289473684208], [225.0, 1147.061946902655], [224.0, 1141.2269503546102], [226.0, 1137.7777777777778], [227.0, 1143.5943396226412], [239.0, 1378.3142857142861], [237.0, 1178.5588235294117], [238.0, 1103.065217391304], [236.0, 2178.909090909091], [235.0, 1136.5555555555557], [234.0, 1159.8333333333335], [233.0, 1420.5945945945944], [232.0, 1139.655172413793], [246.0, 1083.9690721649486], [245.0, 1089.6734693877556], [244.0, 1085.754098360656], [240.0, 1407.666666666667], [241.0, 1304.1000000000001], [242.0, 1194.75], [243.0, 1055.3620689655172], [247.0, 1055.3152173913043], [254.0, 1049.204819277109], [255.0, 1125.6404494382027], [253.0, 1052.3118279569896], [248.0, 1065.619047619048], [250.0, 1116.9571428571423], [249.0, 1047.9152542372879], [251.0, 1043.1688311688313], [252.0, 1055.1724137931033], [270.0, 1137.1428571428578], [271.0, 1107.0], [269.0, 1050.1578947368423], [268.0, 1512.157894736842], [267.0, 1145.1333333333332], [266.0, 1057.5384615384614], [265.0, 1110.8], [264.0, 1059.4666666666672], [262.0, 1306.140350877193], [263.0, 1060.3636363636358], [256.0, 1128.3627450980396], [257.0, 1094.090909090909], [259.0, 1228.1224489795923], [258.0, 1056.9545454545455], [261.0, 1052.3506493506495], [260.0, 1049.318181818182], [286.0, 2744.7333333333336], [287.0, 2210.0000000000005], [285.0, 2754.0588235294117], [283.0, 1687.1000000000001], [284.0, 2038.4], [282.0, 2080.4], [281.0, 1957.857142857143], [280.0, 1151.75], [278.0, 1476.8333333333335], [272.0, 1412.272727272727], [279.0, 1156.6666666666667], [273.0, 1100.521739130435], [274.0, 1120.526315789474], [275.0, 1104.5], [277.0, 1350.5], [276.0, 1106.6666666666667], [301.0, 1356.4444444444443], [296.0, 1582.6969696969697], [302.0, 1330.8333333333335], [303.0, 3159.777777777778], [297.0, 1773.789473684211], [298.0, 1984.0833333333333], [299.0, 1998.2], [300.0, 1996.35], [291.0, 1601.769230769231], [290.0, 1930.9090909090908], [288.0, 1480.4285714285716], [289.0, 1783.090909090909], [295.0, 1628.441176470588], [294.0, 1523.8947368421054], [293.0, 1405.9999999999995], [292.0, 1903.047619047619], [305.0, 1790.1875000000002], [306.0, 1952.217391304348], [304.0, 1887.7272727272727], [307.0, 2554.1666666666665], [308.0, 1670.7894736842106], [309.0, 2074.3181818181824], [310.0, 1855.375], [311.0, 1255.434782608696], [312.0, 1223.4375], [318.0, 1181.3529411764707], [319.0, 1303.0], [316.0, 1178.2727272727273], [317.0, 1203.1333333333334], [313.0, 1171.611111111111], [314.0, 1310.4999999999995], [315.0, 1463.2500000000007], [322.0, 1187.8], [325.0, 1190.3529411764705], [324.0, 1175.9583333333337], [326.0, 1169.125], [323.0, 1199.272727272727], [332.0, 1208.4], [333.0, 1238.0], [334.0, 1159.5], [335.0, 1205.9999999999998], [327.0, 1182.5], [321.0, 1137.0], [328.0, 1170.1666666666667], [329.0, 1164.8], [330.0, 1173.3333333333333], [331.0, 1184.0], [337.0, 1187.75], [336.0, 1166.4210526315792], [339.0, 1159.2222222222222], [338.0, 1146.0], [340.0, 1158.1666666666665], [341.0, 1166.2222222222222], [342.0, 1165.0], [343.0, 1173.470588235294], [344.0, 1185.25], [345.0, 1195.25], [346.0, 1197.75], [347.0, 1179.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[210.39786842105306, 1072.137552631588]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 546.0], [3.0, 609.0], [4.0, 579.0], [5.0, 545.0], [6.0, 593.0], [7.0, 552.0], [8.0, 485.0], [9.0, 497.0], [10.0, 449.0], [11.0, 433.0], [12.0, 467.0], [13.0, 462.0], [14.0, 553.0], [15.0, 581.0], [17.0, 564.5], [18.0, 611.0], [19.0, 500.0], [20.0, 607.0], [21.0, 658.0], [22.0, 690.0], [23.0, 699.0], [24.0, 743.0], [25.0, 784.0], [26.0, 769.0], [27.0, 672.0], [28.0, 676.0], [29.0, 678.0], [30.0, 649.0], [31.0, 674.0], [33.0, 668.0], [32.0, 662.0], [35.0, 665.0], [34.0, 644.0], [37.0, 721.0], [36.0, 650.0], [39.0, 735.0], [38.0, 740.0], [41.0, 808.0], [40.0, 765.0], [43.0, 834.0], [42.0, 818.0], [45.0, 982.0], [44.0, 929.0], [47.0, 952.0], [46.0, 974.0], [49.0, 1009.0], [48.0, 956.0], [51.0, 1043.0], [50.0, 1001.0], [53.0, 1032.0], [52.0, 1056.0], [55.0, 1055.0], [54.0, 1034.0], [57.0, 1016.0], [56.0, 1054.0], [59.0, 1030.0], [58.0, 1031.0], [61.0, 998.0], [60.0, 1000.0], [63.0, 987.0], [62.0, 1008.0], [67.0, 948.0], [66.0, 944.0], [65.0, 960.0], [64.0, 963.0], [71.0, 959.0], [70.0, 965.0], [69.0, 961.5], [75.0, 946.0], [74.0, 921.0], [73.0, 929.0], [72.0, 930.0], [79.0, 863.0], [78.0, 862.0], [77.0, 910.0], [76.0, 941.0], [83.0, 768.0], [82.0, 791.0], [81.0, 833.0], [80.0, 840.0], [87.0, 713.0], [86.0, 729.0], [85.0, 772.0], [84.0, 784.0], [91.0, 710.0], [90.0, 675.0], [89.0, 700.0], [88.0, 677.0], [95.0, 744.0], [94.0, 774.0], [92.0, 792.0], [99.0, 763.0], [98.0, 729.0], [97.0, 683.0], [96.0, 723.0], [103.0, 745.0], [102.0, 756.0], [101.0, 729.0], [100.0, 757.0], [107.0, 722.0], [106.0, 750.0], [105.0, 756.0], [104.0, 763.0], [111.0, 728.0], [110.0, 746.0], [109.0, 735.0], [108.0, 703.0], [115.0, 732.0], [114.0, 716.0], [113.0, 697.0], [112.0, 715.0], [119.0, 796.0], [118.0, 763.0], [117.0, 771.0], [116.0, 742.0], [121.0, 572.5], [123.0, 885.0], [122.0, 902.0], [120.0, 789.0], [127.0, 640.5], [126.0, 1001.5], [124.0, 931.0], [135.0, 629.0], [134.0, 948.0], [133.0, 961.0], [132.0, 973.0], [131.0, 964.0], [130.0, 964.0], [129.0, 990.0], [128.0, 1012.0], [136.0, 506.33333333333337], [137.0, 598.0], [141.0, 523.0], [139.0, 651.5], [143.0, 1073.0], [142.0, 1039.0], [140.0, 999.0], [138.0, 962.0], [150.0, 576.3333333333333], [151.0, 569.6666666666667], [149.0, 1156.0], [148.0, 1094.0], [147.0, 1103.0], [146.0, 1114.0], [145.0, 1099.0], [144.0, 1119.0], [152.0, 583.0], [154.0, 556.3333333333333], [155.0, 702.0], [159.0, 1077.0], [158.0, 1094.0], [157.0, 1116.0], [156.0, 1114.0], [153.0, 1153.0], [161.0, 650.0], [164.0, 588.6666666666667], [166.0, 522.25], [165.0, 601.0], [167.0, 1111.0], [163.0, 1055.0], [162.0, 1044.0], [160.0, 1062.0], [170.0, 683.5], [174.0, 489.25], [173.0, 438.0], [175.0, 694.5], [172.0, 1105.0], [171.0, 1076.0], [169.0, 1089.0], [168.0, 1101.0], [176.0, 482.5], [177.0, 528.3333333333333], [178.0, 387.57142857142856], [180.0, 530.3333333333333], [179.0, 489.25], [181.0, 440.66666666666663], [183.0, 991.0], [182.0, 1015.0], [184.0, 409.0], [185.0, 368.2857142857143], [186.0, 292.8260869565217], [187.0, 288.35135135135135], [191.0, 267.1150793650797], [190.0, 269.80625], [188.0, 273.21505376344084], [189.0, 268.13636363636374], [192.0, 266.60544217687107], [195.0, 266.98531571218814], [194.0, 268.98555956678683], [193.0, 263.9945054945053], [196.0, 267.04245283018827], [199.0, 270.6186374314795], [198.0, 270.8733273862615], [197.0, 271.0446247464504], [203.0, 275.7931937172781], [202.0, 273.41319444444474], [201.0, 271.86594663278277], [204.0, 277.40316205533605], [205.0, 278.272126144456], [200.0, 270.733379501385], [207.0, 282.6054526748964], [206.0, 280.1932270916333], [208.0, 284.9134929270952], [209.0, 288.3460246360576], [211.0, 290.3479909021982], [210.0, 288.2869009584662], [215.0, 317.9313868613135], [214.0, 306.1997471554995], [213.0, 307.77419354838725], [212.0, 297.93982300884926], [216.0, 318.34842519685014], [217.0, 325.34948979591843], [219.0, 340.71485943775116], [218.0, 335.20645161290327], [220.0, 367.81600000000014], [221.0, 393.35968379446626], [223.0, 438.36216216216195], [222.0, 411.8164556962026], [231.0, 628.0657894736842], [229.0, 519.2166666666668], [230.0, 581.56], [228.0, 487.26582278481015], [226.0, 465.98924731182797], [225.0, 449.30821917808225], [227.0, 499.4257425742576], [224.0, 450.9699248120302], [239.0, 708.7878787878788], [238.0, 669.4749999999999], [237.0, 600.2777777777778], [236.0, 426.5], [235.0, 448.5263157894737], [234.0, 483.32], [233.0, 544.8571428571429], [232.0, 625.7894736842106], [247.0, 902.514563106796], [246.0, 876.0], [245.0, 899.2898550724638], [243.0, 823.5471698113209], [242.0, 1068.2826086956522], [241.0, 755.8333333333334], [240.0, 853.5], [244.0, 925.0499999999997], [255.0, 1052.8589743589748], [254.0, 1174.3877551020403], [253.0, 1124.75], [251.0, 979.0624999999999], [249.0, 832.027027027027], [250.0, 971.4833333333332], [248.0, 893.2926829268295], [252.0, 1055.7564102564106], [270.0, 969.1600000000001], [271.0, 1160.441176470588], [269.0, 1071.2105263157898], [268.0, 923.0625], [267.0, 1011.8823529411765], [266.0, 1233.32], [265.0, 1204.7551020408164], [264.0, 1261.4444444444446], [263.0, 1284.085714285714], [256.0, 1048.2421052631576], [258.0, 1037.8], [259.0, 1129.8035714285716], [257.0, 988.2124999999996], [262.0, 1353.9589041095892], [261.0, 1272.7391304347825], [260.0, 1194.7936507936506], [286.0, 1003.7619047619045], [287.0, 1430.8461538461543], [285.0, 2282.0], [284.0, 1055.4], [283.0, 1186.6153846153848], [282.0, 1767.0], [281.0, 789.9999999999999], [280.0, 681.875], [279.0, 592.3333333333334], [273.0, 782.3749999999999], [272.0, 1060.3999999999999], [275.0, 555.5925925925926], [274.0, 894.9259259259261], [278.0, 437.73333333333335], [277.0, 243.55555555555554], [276.0, 459.8], [300.0, 1523.6363636363635], [295.0, 1669.4285714285713], [289.0, 953.388888888889], [288.0, 626.8181818181819], [291.0, 1035.727272727273], [290.0, 1161.5714285714287], [297.0, 1804.2058823529408], [301.0, 1728.909090909091], [299.0, 1720.7857142857144], [298.0, 1800.1333333333332], [296.0, 1603.3548387096776], [303.0, 2187.0], [302.0, 2171.875], [294.0, 1719.478260869565], [293.0, 1469.6315789473686], [292.0, 1223.0000000000002], [305.0, 2337.285714285714], [306.0, 1822.3571428571427], [307.0, 2028.0], [316.0, 2186.764705882353], [319.0, 2139.75], [318.0, 2036.4583333333333], [317.0, 2208.6666666666665], [304.0, 2879.5], [310.0, 2052.2], [309.0, 1688.0769230769233], [308.0, 1736.5199999999998], [311.0, 2101.0], [312.0, 1551.0], [313.0, 1850.8823529411766], [314.0, 1950.1], [315.0, 2160.9999999999995], [320.0, 2294.0], [322.0, 1453.3076923076924], [324.0, 2110.0833333333335], [325.0, 2148.875], [326.0, 2139.5], [327.0, 2137.333333333333], [323.0, 2041.857142857143], [329.0, 2177.230769230769], [328.0, 1345.1666666666665], [334.0, 2369.0], [335.0, 2418.0], [332.0, 2263.6666666666665], [333.0, 2293.5], [330.0, 2177.0], [331.0, 1478.2], [339.0, 2322.2666666666664], [337.0, 2442.4615384615386], [336.0, 2448.034482758621], [343.0, 2565.5], [342.0, 2538.7000000000007], [338.0, 2476.25], [340.0, 2561.416666666667], [341.0, 2291.2], [345.0, 2558.9], [344.0, 2570.5384615384614], [346.0, 2548.6666666666665], [347.0, 2531.0], [1.0, 393.0]], "isOverall": false, "label": "Search Booking", "isController": false}, {"data": [[210.5120526315792, 372.2390789473649]], "isOverall": false, "label": "Search Booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 347.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12454.533333333333, "minX": 1.74172854E12, "maxY": 85009.8, "series": [{"data": [[1.74172872E12, 82025.26666666666], [1.74172938E12, 82495.13333333333], [1.74172968E12, 81889.86666666667], [1.74172878E12, 82032.3], [1.74172974E12, 64955.96666666667], [1.74172908E12, 82039.11666666667], [1.74172962E12, 82034.86666666667], [1.74172866E12, 81857.48333333334], [1.74172896E12, 82191.95], [1.74172902E12, 81879.98333333334], [1.74172932E12, 81856.18333333333], [1.7417289E12, 82184.5], [1.7417292E12, 81115.75], [1.7417286E12, 82028.1], [1.74172926E12, 85009.8], [1.74172956E12, 81821.0], [1.74172914E12, 81484.21666666666], [1.74172944E12, 81853.03333333334], [1.7417295E12, 82145.06666666667], [1.74172854E12, 39222.65], [1.74172884E12, 81786.03333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74172872E12, 25866.5], [1.74172938E12, 25984.233333333334], [1.74172968E12, 25843.65], [1.74172878E12, 25823.866666666665], [1.74172974E12, 20348.833333333332], [1.74172908E12, 25853.7], [1.74172962E12, 25863.133333333335], [1.74172866E12, 25799.316666666666], [1.74172896E12, 25894.416666666668], [1.74172902E12, 25827.016666666666], [1.74172932E12, 25762.85], [1.7417289E12, 25924.633333333335], [1.7417292E12, 25597.1], [1.7417286E12, 25874.066666666666], [1.74172926E12, 26064.766666666666], [1.74172956E12, 25799.033333333333], [1.74172914E12, 25700.816666666666], [1.74172944E12, 25785.416666666668], [1.7417295E12, 25924.983333333334], [1.74172854E12, 12454.533333333333], [1.74172884E12, 25812.466666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74172974E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 258.16987179487205, "minX": 1.74172854E12, "maxY": 1332.5311335816912, "series": [{"data": [[1.74172872E12, 259.14765458422187], [1.74172938E12, 259.37546468401445], [1.74172968E12, 306.9445924347364], [1.74172878E12, 258.21831735889253], [1.74172974E12, 556.9729180771832], [1.74172908E12, 293.67272727272757], [1.74172962E12, 291.6620395088098], [1.74172866E12, 381.1603420630678], [1.74172896E12, 269.41987179487086], [1.74172902E12, 269.18473037907063], [1.74172932E12, 258.16987179487205], [1.7417289E12, 273.77742279020214], [1.7417292E12, 1051.7867170626346], [1.7417286E12, 270.16914893617053], [1.74172926E12, 1070.0587002096424], [1.74172956E12, 285.8850881881349], [1.74172914E12, 319.5297587131368], [1.74172944E12, 259.4080213903734], [1.7417295E12, 259.91237387148135], [1.74172854E12, 294.5105908584166], [1.74172884E12, 259.69370330843174]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[1.74172872E12, 1038.3696229421146], [1.74172938E12, 1030.7684989429208], [1.74172968E12, 1065.8446342765626], [1.74172878E12, 1026.0871657753994], [1.74172974E12, 1161.6466854724954], [1.74172908E12, 1038.3663471778507], [1.74172962E12, 1101.2436034115142], [1.74172866E12, 1158.0229823623708], [1.74172896E12, 1053.0303676078854], [1.74172902E12, 1027.0735607675913], [1.74172932E12, 1022.878625134264], [1.7417289E12, 1079.463752665244], [1.7417292E12, 1051.088924387646], [1.7417286E12, 1041.114086770222], [1.74172926E12, 1332.5311335816912], [1.74172956E12, 1114.9439402028825], [1.74172914E12, 1038.1232583065369], [1.74172944E12, 1030.1040554962678], [1.7417295E12, 1024.3039529914533], [1.74172854E12, 1071.6854166666649], [1.74172884E12, 1029.3246407663678]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.74172872E12, 260.8729311265351], [1.74172938E12, 261.5414012738863], [1.74172968E12, 317.68934118907254], [1.74172878E12, 260.06784188034226], [1.74172974E12, 571.0316537467706], [1.74172908E12, 303.36048988285415], [1.74172962E12, 300.67075119872106], [1.74172866E12, 366.7195316657798], [1.74172896E12, 277.1170550847457], [1.74172902E12, 278.25937834940993], [1.74172932E12, 259.96908315565076], [1.7417289E12, 278.70784729586404], [1.7417292E12, 1059.2995090016339], [1.7417286E12, 276.9808306709267], [1.74172926E12, 1015.2708441222157], [1.74172956E12, 294.2294906166219], [1.74172914E12, 331.08674568965483], [1.74172944E12, 263.97109207708746], [1.7417295E12, 265.14771519659917], [1.74172854E12, 303.4904534606204], [1.74172884E12, 263.5396226415092]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74172974E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 258.1655982905994, "minX": 1.74172854E12, "maxY": 1332.5263437998926, "series": [{"data": [[1.74172872E12, 259.1433901918976], [1.74172938E12, 259.3706850770049], [1.74172968E12, 306.9392647842295], [1.74172878E12, 258.2151224707128], [1.74172974E12, 556.966147596479], [1.74172908E12, 293.66898395721944], [1.74172962E12, 291.6550987720239], [1.74172866E12, 381.14270443613043], [1.74172896E12, 269.4155982905981], [1.74172902E12, 269.18152696209336], [1.74172932E12, 258.1655982905994], [1.7417289E12, 273.77263045793364], [1.7417292E12, 1051.7813174946023], [1.7417286E12, 269.3239361702127], [1.74172926E12, 1070.0508385744222], [1.74172956E12, 285.87814003206825], [1.74172914E12, 319.52868632707793], [1.74172944E12, 259.39946524064175], [1.7417295E12, 259.9070631970261], [1.74172854E12, 294.48940914158277], [1.74172884E12, 259.6675560298824]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[1.74172872E12, 1038.3621879978757], [1.74172938E12, 1030.7610993657515], [1.74172968E12, 1065.840363053926], [1.74172878E12, 1026.08128342246], [1.74172974E12, 1161.6431593794064], [1.74172908E12, 1038.3631522896694], [1.74172962E12, 1101.23773987207], [1.74172866E12, 1158.0010689470867], [1.74172896E12, 1053.027171017581], [1.74172902E12, 1027.0708955223915], [1.74172932E12, 1022.8737916219123], [1.7417289E12, 1079.4616204690822], [1.7417292E12, 1051.08466453674], [1.7417286E12, 1041.106052490626], [1.74172926E12, 1332.5263437998926], [1.74172956E12, 1114.941270688735], [1.74172914E12, 1038.1195069667733], [1.74172944E12, 1030.099252934899], [1.7417295E12, 1024.2964743589764], [1.74172854E12, 1071.4989583333318], [1.74172884E12, 1029.3171899946772]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.74172872E12, 260.8681260010675], [1.74172938E12, 261.5387473460722], [1.74172968E12, 317.6845206213175], [1.74172878E12, 260.0608974358969], [1.74172974E12, 571.0239018087849], [1.74172908E12, 303.3546325878586], [1.74172962E12, 300.6648907831647], [1.74172866E12, 366.7131452900473], [1.74172896E12, 277.11016949152526], [1.74172902E12, 278.2550911039656], [1.74172932E12, 259.96375266524547], [1.7417289E12, 278.7014846235421], [1.7417292E12, 1059.2924168030547], [1.7417286E12, 276.96751863684796], [1.74172926E12, 1015.2433972035253], [1.74172956E12, 294.2225201072381], [1.74172914E12, 331.0813577586204], [1.74172944E12, 263.9646680942183], [1.7417295E12, 265.1429330499465], [1.74172854E12, 303.46539379474933], [1.74172884E12, 263.53584905660324]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74172974E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74172854E12, "maxY": 865.2698243746668, "series": [{"data": [[1.74172872E12, 0.0], [1.74172938E12, 0.0], [1.74172968E12, 0.0], [1.74172878E12, 0.0], [1.74172974E12, 0.0], [1.74172908E12, 0.0], [1.74172962E12, 0.0], [1.74172866E12, 0.0], [1.74172896E12, 0.0], [1.74172902E12, 0.0], [1.74172932E12, 0.0], [1.7417289E12, 0.0], [1.7417292E12, 0.0], [1.7417286E12, 0.0], [1.74172926E12, 0.0], [1.74172956E12, 0.0], [1.74172914E12, 0.0], [1.74172944E12, 0.0], [1.7417295E12, 0.0], [1.74172854E12, 0.0], [1.74172884E12, 0.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[1.74172872E12, 779.7498672331385], [1.74172938E12, 771.732558139535], [1.74172968E12, 791.4014949279235], [1.74172878E12, 769.7080213903755], [1.74172974E12, 858.0387870239771], [1.74172908E12, 772.4100106496269], [1.74172962E12, 820.1226012793185], [1.74172866E12, 770.910208444683], [1.74172896E12, 787.0969632392117], [1.74172902E12, 766.3491471215359], [1.74172932E12, 766.6868958109563], [1.7417289E12, 807.9904051172714], [1.7417292E12, 773.2886048988289], [1.7417286E12, 777.5790037493306], [1.74172926E12, 865.2698243746668], [1.74172956E12, 833.3918846769878], [1.74172914E12, 770.513397642016], [1.74172944E12, 771.1910352187833], [1.7417295E12, 766.7366452991462], [1.74172854E12, 801.0187499999998], [1.74172884E12, 770.8754656732302]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.74172872E12, 0.0], [1.74172938E12, 0.0], [1.74172968E12, 0.0], [1.74172878E12, 0.0], [1.74172974E12, 0.0], [1.74172908E12, 0.0], [1.74172962E12, 0.0], [1.74172866E12, 0.0], [1.74172896E12, 0.0], [1.74172902E12, 0.0], [1.74172932E12, 0.0], [1.7417289E12, 0.0], [1.7417292E12, 0.0], [1.7417286E12, 0.0], [1.74172926E12, 0.0], [1.74172956E12, 0.0], [1.74172914E12, 0.0], [1.74172944E12, 0.0], [1.7417295E12, 0.0], [1.74172854E12, 0.0], [1.74172884E12, 0.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74172974E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 233.0, "minX": 1.74172854E12, "maxY": 12245.0, "series": [{"data": [[1.74172872E12, 2724.0], [1.74172938E12, 1774.0], [1.74172968E12, 2002.0], [1.74172878E12, 2585.0], [1.74172974E12, 2194.0], [1.74172908E12, 2040.0], [1.74172962E12, 1621.0], [1.74172866E12, 10985.0], [1.74172896E12, 2759.0], [1.74172902E12, 2083.0], [1.74172932E12, 1740.0], [1.7417289E12, 1991.0], [1.7417292E12, 2129.0], [1.7417286E12, 1883.0], [1.74172926E12, 12245.0], [1.74172956E12, 2623.0], [1.74172914E12, 1884.0], [1.74172944E12, 1286.0], [1.7417295E12, 1919.0], [1.74172854E12, 1913.0], [1.74172884E12, 1763.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74172872E12, 1058.6999999999998], [1.74172938E12, 1053.0], [1.74172968E12, 1075.0], [1.74172878E12, 1051.0], [1.74172974E12, 1173.0], [1.74172908E12, 1065.0], [1.74172962E12, 1148.0], [1.74172866E12, 1070.0], [1.74172896E12, 1065.0], [1.74172902E12, 1051.0], [1.74172932E12, 1048.0], [1.7417289E12, 1133.0], [1.7417292E12, 1337.0], [1.7417286E12, 1067.0], [1.74172926E12, 2283.4000000000005], [1.74172956E12, 1159.0], [1.74172914E12, 1064.0], [1.74172944E12, 1056.6999999999998], [1.7417295E12, 1049.0], [1.74172854E12, 1094.4], [1.74172884E12, 1055.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74172872E12, 1219.67], [1.74172938E12, 1125.0], [1.74172968E12, 1286.4599999999991], [1.74172878E12, 1113.0], [1.74172974E12, 1249.0], [1.74172908E12, 1130.0], [1.74172962E12, 1230.0], [1.74172866E12, 3265.8199999999997], [1.74172896E12, 1272.4799999999996], [1.74172902E12, 1106.0], [1.74172932E12, 1100.8900000000003], [1.7417289E12, 1174.5900000000001], [1.7417292E12, 1617.7199999999993], [1.7417286E12, 1149.9599999999991], [1.74172926E12, 4144.719999999999], [1.74172956E12, 1384.5999999999985], [1.74172914E12, 1128.12], [1.74172944E12, 1122.0], [1.7417295E12, 1100.0], [1.74172854E12, 1248.1599999999999], [1.74172884E12, 1152.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74172872E12, 1083.0], [1.74172938E12, 1077.0], [1.74172968E12, 1108.0], [1.74172878E12, 1072.0], [1.74172974E12, 1194.0], [1.74172908E12, 1088.0], [1.74172962E12, 1172.0], [1.74172866E12, 1108.0], [1.74172896E12, 1103.0999999999995], [1.74172902E12, 1074.0], [1.74172932E12, 1071.0], [1.7417289E12, 1148.0], [1.7417292E12, 1442.0], [1.7417286E12, 1090.0], [1.74172926E12, 2550.2], [1.74172956E12, 1222.0], [1.74172914E12, 1087.0], [1.74172944E12, 1079.0], [1.7417295E12, 1071.0], [1.74172854E12, 1137.0], [1.74172884E12, 1077.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74172872E12, 233.0], [1.74172938E12, 233.0], [1.74172968E12, 235.0], [1.74172878E12, 234.0], [1.74172974E12, 255.0], [1.74172908E12, 236.0], [1.74172962E12, 234.0], [1.74172866E12, 233.0], [1.74172896E12, 233.0], [1.74172902E12, 234.0], [1.74172932E12, 234.0], [1.7417289E12, 234.0], [1.7417292E12, 386.0], [1.7417286E12, 233.0], [1.74172926E12, 270.0], [1.74172956E12, 233.0], [1.74172914E12, 236.0], [1.74172944E12, 233.0], [1.7417295E12, 234.0], [1.74172854E12, 237.0], [1.74172884E12, 234.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74172872E12, 267.0], [1.74172938E12, 267.0], [1.74172968E12, 330.0], [1.74172878E12, 267.0], [1.74172974E12, 671.0], [1.74172908E12, 314.0], [1.74172962E12, 315.0], [1.74172866E12, 269.0], [1.74172896E12, 280.0], [1.74172902E12, 284.0], [1.74172932E12, 267.0], [1.7417289E12, 289.0], [1.7417292E12, 1045.0], [1.7417286E12, 283.0], [1.74172926E12, 1142.0], [1.74172956E12, 303.0], [1.74172914E12, 359.0], [1.74172944E12, 269.0], [1.7417295E12, 270.0], [1.74172854E12, 325.0], [1.74172884E12, 269.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74172974E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10310.0, "series": [{"data": [[6.0, 464.5], [7.0, 552.0], [10.0, 594.0], [17.0, 676.0], [29.0, 1122.0], [32.0, 782.0], [38.0, 1064.5], [46.0, 967.5], [48.0, 2278.0], [51.0, 289.0], [52.0, 276.5], [58.0, 994.0], [60.0, 751.5], [61.0, 1128.0], [63.0, 289.0], [66.0, 310.5], [71.0, 754.5], [68.0, 1169.0], [69.0, 268.0], [74.0, 990.0], [75.0, 314.0], [72.0, 392.5], [73.0, 1088.0], [77.0, 897.0], [76.0, 337.0], [79.0, 292.0], [78.0, 384.5], [83.0, 324.0], [80.0, 299.0], [82.0, 297.0], [81.0, 376.0], [87.0, 291.0], [84.0, 303.0], [86.0, 336.5], [85.0, 302.0], [91.0, 301.0], [88.0, 303.0], [90.0, 291.0], [89.0, 295.0], [95.0, 292.0], [94.0, 298.0], [92.0, 284.0], [93.0, 291.0], [99.0, 292.0], [98.0, 296.0], [97.0, 294.0], [96.0, 294.0], [101.0, 295.0], [102.0, 299.0], [103.0, 298.0], [100.0, 291.0], [106.0, 323.0], [107.0, 290.0], [105.0, 325.0], [104.0, 292.0], [111.0, 993.0], [108.0, 283.5], [109.0, 280.0], [110.0, 367.0], [113.0, 295.5], [115.0, 1024.0], [112.0, 273.5], [114.0, 281.0], [116.0, 268.0], [117.0, 802.0], [119.0, 286.0], [120.0, 398.0], [122.0, 1065.5], [123.0, 289.0], [121.0, 292.0], [125.0, 864.0], [127.0, 300.0], [126.0, 292.0], [131.0, 264.5], [181.0, 2293.0], [204.0, 1981.0], [212.0, 2277.0], [1.0, 393.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 9264.0], [181.0, 1218.0], [48.0, 1284.0], [51.0, 281.0], [204.0, 3258.0], [13.0, 1.0], [212.0, 3280.0], [74.0, 2259.0], [83.0, 6306.0], [22.0, 0.0], [97.0, 265.5], [96.0, 6255.5], [102.0, 10310.0], [115.0, 7266.5], [127.0, 3289.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10310.0, "series": [{"data": [[6.0, 464.5], [7.0, 552.0], [10.0, 594.0], [17.0, 676.0], [29.0, 1122.0], [32.0, 782.0], [38.0, 1064.0], [46.0, 967.5], [48.0, 2278.0], [51.0, 289.0], [52.0, 276.5], [58.0, 994.0], [60.0, 751.5], [61.0, 1128.0], [63.0, 289.0], [66.0, 310.5], [71.0, 754.5], [68.0, 1169.0], [69.0, 268.0], [74.0, 989.5], [75.0, 314.0], [72.0, 392.5], [73.0, 1088.0], [77.0, 897.0], [76.0, 337.0], [79.0, 292.0], [78.0, 384.5], [83.0, 323.5], [80.0, 299.0], [82.0, 297.0], [81.0, 376.0], [87.0, 291.0], [84.0, 303.0], [86.0, 336.5], [85.0, 302.0], [91.0, 301.0], [88.0, 303.0], [90.0, 291.0], [89.0, 295.0], [95.0, 292.0], [94.0, 298.0], [92.0, 284.0], [93.0, 291.0], [99.0, 292.0], [98.0, 296.0], [97.0, 294.0], [96.0, 294.0], [101.0, 295.0], [102.0, 299.0], [103.0, 298.0], [100.0, 291.0], [106.0, 323.0], [107.0, 290.0], [105.0, 325.0], [104.0, 292.0], [111.0, 993.0], [108.0, 283.0], [109.0, 280.0], [110.0, 367.0], [113.0, 295.5], [115.0, 1024.0], [112.0, 273.5], [114.0, 281.0], [116.0, 268.0], [117.0, 802.0], [119.0, 286.0], [120.0, 398.0], [122.0, 1065.5], [123.0, 289.0], [121.0, 292.0], [125.0, 864.0], [127.0, 300.0], [126.0, 292.0], [131.0, 264.5], [181.0, 2293.0], [204.0, 1981.0], [212.0, 2277.0], [1.0, 393.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 9264.0], [181.0, 1218.0], [48.0, 1284.0], [51.0, 281.0], [204.0, 3258.0], [13.0, 0.0], [212.0, 3280.0], [74.0, 2259.0], [83.0, 6306.0], [22.0, 0.0], [97.0, 265.5], [96.0, 6255.5], [102.0, 10310.0], [115.0, 7266.5], [127.0, 3289.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 45.766666666666666, "minX": 1.74172854E12, "maxY": 94.33333333333333, "series": [{"data": [[1.74172872E12, 93.83333333333333], [1.74172938E12, 93.9], [1.74172968E12, 93.55], [1.74172878E12, 93.65], [1.74172974E12, 73.11666666666666], [1.74172908E12, 93.76666666666667], [1.74172962E12, 93.98333333333333], [1.74172866E12, 93.55], [1.74172896E12, 93.96666666666667], [1.74172902E12, 93.48333333333333], [1.74172932E12, 93.66666666666667], [1.7417289E12, 94.05], [1.7417292E12, 93.48333333333333], [1.7417286E12, 93.8], [1.74172926E12, 94.33333333333333], [1.74172956E12, 93.6], [1.74172914E12, 93.36666666666666], [1.74172944E12, 93.66666666666667], [1.7417295E12, 93.85], [1.74172854E12, 45.766666666666666], [1.74172884E12, 93.61666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74172974E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.74172854E12, "maxY": 94.31666666666666, "series": [{"data": [[1.74172872E12, 93.86666666666666], [1.74172938E12, 94.31666666666666], [1.74172968E12, 93.61666666666666], [1.74172878E12, 93.66666666666667], [1.74172974E12, 74.05], [1.74172908E12, 93.76666666666667], [1.74172962E12, 93.76666666666667], [1.74172866E12, 92.63333333333334], [1.74172896E12, 93.95], [1.74172902E12, 93.58333333333333], [1.74172932E12, 93.5], [1.7417289E12, 94.0], [1.7417292E12, 92.71666666666667], [1.7417286E12, 93.75], [1.74172926E12, 91.25], [1.74172956E12, 93.48333333333333], [1.74172914E12, 93.11666666666666], [1.74172944E12, 93.53333333333333], [1.7417295E12, 93.95], [1.74172854E12, 44.916666666666664], [1.74172884E12, 93.46666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.74172926E12, 2.1], [1.74172866E12, 0.016666666666666666]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.74172926E12, 1.0], [1.74172866E12, 1.0333333333333334]], "isOverall": false, "label": "404", "isController": false}, {"data": [[1.74172926E12, 0.95]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74172974E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.95, "minX": 1.74172854E12, "maxY": 31.533333333333335, "series": [{"data": [[1.74172926E12, 3.1], [1.74172866E12, 1.05]], "isOverall": false, "label": "Search Booking-failure", "isController": false}, {"data": [[1.74172872E12, 31.266666666666666], [1.74172938E12, 31.383333333333333], [1.74172968E12, 31.283333333333335], [1.74172878E12, 31.3], [1.74172974E12, 24.616666666666667], [1.74172908E12, 31.166666666666668], [1.74172962E12, 31.216666666666665], [1.74172866E12, 31.183333333333334], [1.74172896E12, 31.2], [1.74172902E12, 31.216666666666665], [1.74172932E12, 31.2], [1.7417289E12, 31.3], [1.7417292E12, 30.866666666666667], [1.7417286E12, 31.333333333333332], [1.74172926E12, 30.85], [1.74172956E12, 31.183333333333334], [1.74172914E12, 31.083333333333332], [1.74172944E12, 31.166666666666668], [1.7417295E12, 31.383333333333333], [1.74172854E12, 14.95], [1.74172884E12, 31.233333333333334]], "isOverall": false, "label": "Booking-success", "isController": false}, {"data": [[1.74172926E12, 0.95]], "isOverall": false, "label": "Booking-failure", "isController": false}, {"data": [[1.74172872E12, 31.383333333333333], [1.74172938E12, 31.533333333333335], [1.74172968E12, 31.216666666666665], [1.74172878E12, 31.166666666666668], [1.74172974E12, 23.633333333333333], [1.74172908E12, 31.3], [1.74172962E12, 31.266666666666666], [1.74172866E12, 31.183333333333334], [1.74172896E12, 31.283333333333335], [1.74172902E12, 31.266666666666666], [1.74172932E12, 31.033333333333335], [1.7417289E12, 31.266666666666666], [1.7417292E12, 31.3], [1.7417286E12, 31.116666666666667], [1.74172926E12, 31.316666666666666], [1.74172956E12, 31.216666666666665], [1.74172914E12, 31.1], [1.74172944E12, 31.233333333333334], [1.7417295E12, 31.2], [1.74172854E12, 16.0], [1.74172884E12, 31.316666666666666]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.74172872E12, 31.216666666666665], [1.74172938E12, 31.4], [1.74172968E12, 31.116666666666667], [1.74172878E12, 31.2], [1.74172974E12, 25.8], [1.74172908E12, 31.3], [1.74172962E12, 31.283333333333335], [1.74172866E12, 30.266666666666666], [1.74172896E12, 31.466666666666665], [1.74172902E12, 31.1], [1.74172932E12, 31.266666666666666], [1.7417289E12, 31.433333333333334], [1.7417292E12, 30.55], [1.7417286E12, 31.3], [1.74172926E12, 29.083333333333332], [1.74172956E12, 31.083333333333332], [1.74172914E12, 30.933333333333334], [1.74172944E12, 31.133333333333333], [1.7417295E12, 31.366666666666667], [1.74172854E12, 13.966666666666667], [1.74172884E12, 30.916666666666668]], "isOverall": false, "label": "Search Booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74172974E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.05, "minX": 1.74172854E12, "maxY": 94.31666666666666, "series": [{"data": [[1.74172872E12, 93.86666666666666], [1.74172938E12, 94.31666666666666], [1.74172968E12, 93.61666666666666], [1.74172878E12, 93.66666666666667], [1.74172974E12, 74.05], [1.74172908E12, 93.76666666666667], [1.74172962E12, 93.76666666666667], [1.74172866E12, 92.63333333333334], [1.74172896E12, 93.95], [1.74172902E12, 93.58333333333333], [1.74172932E12, 93.5], [1.7417289E12, 94.0], [1.7417292E12, 92.71666666666667], [1.7417286E12, 93.75], [1.74172926E12, 91.25], [1.74172956E12, 93.48333333333333], [1.74172914E12, 93.11666666666666], [1.74172944E12, 93.53333333333333], [1.7417295E12, 93.95], [1.74172854E12, 44.916666666666664], [1.74172884E12, 93.46666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74172926E12, 4.05], [1.74172866E12, 1.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74172974E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

