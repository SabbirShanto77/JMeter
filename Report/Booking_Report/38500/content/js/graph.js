/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 12452.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 2.0], [13.8, 5.0], [13.9, 240.0], [14.0, 241.0], [14.1, 242.0], [14.2, 242.0], [14.3, 242.0], [14.4, 243.0], [14.5, 243.0], [14.6, 243.0], [14.7, 244.0], [14.8, 244.0], [14.9, 244.0], [15.0, 244.0], [15.1, 244.0], [15.2, 245.0], [15.3, 245.0], [15.4, 245.0], [15.5, 245.0], [15.6, 245.0], [15.7, 245.0], [15.8, 246.0], [15.9, 246.0], [16.0, 246.0], [16.1, 246.0], [16.2, 246.0], [16.3, 246.0], [16.4, 246.0], [16.5, 246.0], [16.6, 247.0], [16.7, 247.0], [16.8, 247.0], [16.9, 247.0], [17.0, 247.0], [17.1, 247.0], [17.2, 247.0], [17.3, 247.0], [17.4, 247.0], [17.5, 247.0], [17.6, 248.0], [17.7, 248.0], [17.8, 248.0], [17.9, 248.0], [18.0, 248.0], [18.1, 248.0], [18.2, 248.0], [18.3, 248.0], [18.4, 248.0], [18.5, 248.0], [18.6, 248.0], [18.7, 248.0], [18.8, 249.0], [18.9, 249.0], [19.0, 249.0], [19.1, 249.0], [19.2, 249.0], [19.3, 249.0], [19.4, 249.0], [19.5, 249.0], [19.6, 249.0], [19.7, 249.0], [19.8, 249.0], [19.9, 249.0], [20.0, 249.0], [20.1, 250.0], [20.2, 250.0], [20.3, 250.0], [20.4, 250.0], [20.5, 250.0], [20.6, 250.0], [20.7, 250.0], [20.8, 250.0], [20.9, 250.0], [21.0, 250.0], [21.1, 250.0], [21.2, 250.0], [21.3, 250.0], [21.4, 250.0], [21.5, 250.0], [21.6, 250.0], [21.7, 251.0], [21.8, 251.0], [21.9, 251.0], [22.0, 251.0], [22.1, 251.0], [22.2, 251.0], [22.3, 251.0], [22.4, 251.0], [22.5, 251.0], [22.6, 251.0], [22.7, 251.0], [22.8, 251.0], [22.9, 251.0], [23.0, 251.0], [23.1, 251.0], [23.2, 251.0], [23.3, 251.0], [23.4, 252.0], [23.5, 252.0], [23.6, 252.0], [23.7, 252.0], [23.8, 252.0], [23.9, 252.0], [24.0, 252.0], [24.1, 252.0], [24.2, 252.0], [24.3, 252.0], [24.4, 252.0], [24.5, 252.0], [24.6, 252.0], [24.7, 252.0], [24.8, 252.0], [24.9, 252.0], [25.0, 252.0], [25.1, 253.0], [25.2, 253.0], [25.3, 253.0], [25.4, 253.0], [25.5, 253.0], [25.6, 253.0], [25.7, 253.0], [25.8, 253.0], [25.9, 253.0], [26.0, 253.0], [26.1, 253.0], [26.2, 253.0], [26.3, 253.0], [26.4, 253.0], [26.5, 253.0], [26.6, 253.0], [26.7, 253.0], [26.8, 253.0], [26.9, 253.0], [27.0, 254.0], [27.1, 254.0], [27.2, 254.0], [27.3, 254.0], [27.4, 254.0], [27.5, 254.0], [27.6, 254.0], [27.7, 254.0], [27.8, 254.0], [27.9, 254.0], [28.0, 254.0], [28.1, 254.0], [28.2, 254.0], [28.3, 254.0], [28.4, 254.0], [28.5, 254.0], [28.6, 254.0], [28.7, 254.0], [28.8, 255.0], [28.9, 255.0], [29.0, 255.0], [29.1, 255.0], [29.2, 255.0], [29.3, 255.0], [29.4, 255.0], [29.5, 255.0], [29.6, 255.0], [29.7, 255.0], [29.8, 255.0], [29.9, 255.0], [30.0, 255.0], [30.1, 255.0], [30.2, 255.0], [30.3, 255.0], [30.4, 255.0], [30.5, 255.0], [30.6, 256.0], [30.7, 256.0], [30.8, 256.0], [30.9, 256.0], [31.0, 256.0], [31.1, 256.0], [31.2, 256.0], [31.3, 256.0], [31.4, 256.0], [31.5, 256.0], [31.6, 256.0], [31.7, 256.0], [31.8, 256.0], [31.9, 256.0], [32.0, 256.0], [32.1, 256.0], [32.2, 256.0], [32.3, 257.0], [32.4, 257.0], [32.5, 257.0], [32.6, 257.0], [32.7, 257.0], [32.8, 257.0], [32.9, 257.0], [33.0, 257.0], [33.1, 257.0], [33.2, 257.0], [33.3, 257.0], [33.4, 257.0], [33.5, 257.0], [33.6, 257.0], [33.7, 257.0], [33.8, 257.0], [33.9, 257.0], [34.0, 258.0], [34.1, 258.0], [34.2, 258.0], [34.3, 258.0], [34.4, 258.0], [34.5, 258.0], [34.6, 258.0], [34.7, 258.0], [34.8, 258.0], [34.9, 258.0], [35.0, 258.0], [35.1, 258.0], [35.2, 258.0], [35.3, 258.0], [35.4, 258.0], [35.5, 258.0], [35.6, 259.0], [35.7, 259.0], [35.8, 259.0], [35.9, 259.0], [36.0, 259.0], [36.1, 259.0], [36.2, 259.0], [36.3, 259.0], [36.4, 259.0], [36.5, 259.0], [36.6, 259.0], [36.7, 259.0], [36.8, 259.0], [36.9, 259.0], [37.0, 259.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 260.0], [37.9, 260.0], [38.0, 260.0], [38.1, 260.0], [38.2, 260.0], [38.3, 260.0], [38.4, 260.0], [38.5, 260.0], [38.6, 260.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 261.0], [40.2, 261.0], [40.3, 262.0], [40.4, 262.0], [40.5, 262.0], [40.6, 262.0], [40.7, 262.0], [40.8, 262.0], [40.9, 262.0], [41.0, 262.0], [41.1, 262.0], [41.2, 262.0], [41.3, 262.0], [41.4, 262.0], [41.5, 262.0], [41.6, 262.0], [41.7, 262.0], [41.8, 262.0], [41.9, 263.0], [42.0, 263.0], [42.1, 263.0], [42.2, 263.0], [42.3, 263.0], [42.4, 263.0], [42.5, 263.0], [42.6, 263.0], [42.7, 263.0], [42.8, 263.0], [42.9, 263.0], [43.0, 263.0], [43.1, 263.0], [43.2, 263.0], [43.3, 263.0], [43.4, 263.0], [43.5, 263.0], [43.6, 264.0], [43.7, 264.0], [43.8, 264.0], [43.9, 264.0], [44.0, 264.0], [44.1, 264.0], [44.2, 264.0], [44.3, 264.0], [44.4, 264.0], [44.5, 264.0], [44.6, 264.0], [44.7, 264.0], [44.8, 264.0], [44.9, 264.0], [45.0, 264.0], [45.1, 264.0], [45.2, 265.0], [45.3, 265.0], [45.4, 265.0], [45.5, 265.0], [45.6, 265.0], [45.7, 265.0], [45.8, 265.0], [45.9, 265.0], [46.0, 265.0], [46.1, 265.0], [46.2, 265.0], [46.3, 265.0], [46.4, 265.0], [46.5, 265.0], [46.6, 265.0], [46.7, 265.0], [46.8, 265.0], [46.9, 265.0], [47.0, 266.0], [47.1, 266.0], [47.2, 266.0], [47.3, 266.0], [47.4, 266.0], [47.5, 266.0], [47.6, 266.0], [47.7, 266.0], [47.8, 266.0], [47.9, 266.0], [48.0, 266.0], [48.1, 266.0], [48.2, 266.0], [48.3, 266.0], [48.4, 266.0], [48.5, 266.0], [48.6, 266.0], [48.7, 267.0], [48.8, 267.0], [48.9, 267.0], [49.0, 267.0], [49.1, 267.0], [49.2, 267.0], [49.3, 267.0], [49.4, 267.0], [49.5, 267.0], [49.6, 267.0], [49.7, 267.0], [49.8, 267.0], [49.9, 267.0], [50.0, 267.0], [50.1, 267.0], [50.2, 267.0], [50.3, 267.0], [50.4, 268.0], [50.5, 268.0], [50.6, 268.0], [50.7, 268.0], [50.8, 268.0], [50.9, 268.0], [51.0, 268.0], [51.1, 268.0], [51.2, 268.0], [51.3, 268.0], [51.4, 268.0], [51.5, 268.0], [51.6, 268.0], [51.7, 268.0], [51.8, 268.0], [51.9, 268.0], [52.0, 269.0], [52.1, 269.0], [52.2, 269.0], [52.3, 269.0], [52.4, 269.0], [52.5, 269.0], [52.6, 269.0], [52.7, 269.0], [52.8, 269.0], [52.9, 269.0], [53.0, 269.0], [53.1, 269.0], [53.2, 269.0], [53.3, 269.0], [53.4, 269.0], [53.5, 270.0], [53.6, 270.0], [53.7, 270.0], [53.8, 270.0], [53.9, 270.0], [54.0, 270.0], [54.1, 270.0], [54.2, 270.0], [54.3, 270.0], [54.4, 270.0], [54.5, 270.0], [54.6, 270.0], [54.7, 270.0], [54.8, 270.0], [54.9, 270.0], [55.0, 270.0], [55.1, 271.0], [55.2, 271.0], [55.3, 271.0], [55.4, 271.0], [55.5, 271.0], [55.6, 271.0], [55.7, 271.0], [55.8, 271.0], [55.9, 271.0], [56.0, 271.0], [56.1, 271.0], [56.2, 271.0], [56.3, 271.0], [56.4, 271.0], [56.5, 271.0], [56.6, 271.0], [56.7, 271.0], [56.8, 271.0], [56.9, 272.0], [57.0, 272.0], [57.1, 272.0], [57.2, 272.0], [57.3, 272.0], [57.4, 272.0], [57.5, 272.0], [57.6, 272.0], [57.7, 272.0], [57.8, 272.0], [57.9, 272.0], [58.0, 272.0], [58.1, 272.0], [58.2, 272.0], [58.3, 272.0], [58.4, 272.0], [58.5, 272.0], [58.6, 273.0], [58.7, 273.0], [58.8, 273.0], [58.9, 273.0], [59.0, 273.0], [59.1, 273.0], [59.2, 273.0], [59.3, 273.0], [59.4, 273.0], [59.5, 273.0], [59.6, 273.0], [59.7, 273.0], [59.8, 273.0], [59.9, 273.0], [60.0, 273.0], [60.1, 273.0], [60.2, 273.0], [60.3, 274.0], [60.4, 274.0], [60.5, 274.0], [60.6, 274.0], [60.7, 274.0], [60.8, 274.0], [60.9, 274.0], [61.0, 274.0], [61.1, 274.0], [61.2, 274.0], [61.3, 274.0], [61.4, 274.0], [61.5, 274.0], [61.6, 274.0], [61.7, 274.0], [61.8, 274.0], [61.9, 274.0], [62.0, 275.0], [62.1, 275.0], [62.2, 275.0], [62.3, 275.0], [62.4, 275.0], [62.5, 275.0], [62.6, 275.0], [62.7, 275.0], [62.8, 275.0], [62.9, 275.0], [63.0, 275.0], [63.1, 275.0], [63.2, 275.0], [63.3, 275.0], [63.4, 275.0], [63.5, 275.0], [63.6, 276.0], [63.7, 276.0], [63.8, 276.0], [63.9, 276.0], [64.0, 276.0], [64.1, 276.0], [64.2, 276.0], [64.3, 276.0], [64.4, 276.0], [64.5, 276.0], [64.6, 276.0], [64.7, 276.0], [64.8, 276.0], [64.9, 276.0], [65.0, 276.0], [65.1, 277.0], [65.2, 277.0], [65.3, 277.0], [65.4, 277.0], [65.5, 277.0], [65.6, 277.0], [65.7, 277.0], [65.8, 277.0], [65.9, 277.0], [66.0, 277.0], [66.1, 277.0], [66.2, 277.0], [66.3, 277.0], [66.4, 278.0], [66.5, 278.0], [66.6, 278.0], [66.7, 278.0], [66.8, 278.0], [66.9, 278.0], [67.0, 278.0], [67.1, 278.0], [67.2, 278.0], [67.3, 278.0], [67.4, 278.0], [67.5, 278.0], [67.6, 279.0], [67.7, 279.0], [67.8, 279.0], [67.9, 279.0], [68.0, 279.0], [68.1, 279.0], [68.2, 279.0], [68.3, 279.0], [68.4, 279.0], [68.5, 279.0], [68.6, 279.0], [68.7, 280.0], [68.8, 280.0], [68.9, 280.0], [69.0, 280.0], [69.1, 280.0], [69.2, 280.0], [69.3, 280.0], [69.4, 280.0], [69.5, 280.0], [69.6, 280.0], [69.7, 281.0], [69.8, 281.0], [69.9, 281.0], [70.0, 281.0], [70.1, 281.0], [70.2, 281.0], [70.3, 281.0], [70.4, 281.0], [70.5, 281.0], [70.6, 281.0], [70.7, 282.0], [70.8, 282.0], [70.9, 282.0], [71.0, 282.0], [71.1, 282.0], [71.2, 282.0], [71.3, 282.0], [71.4, 282.0], [71.5, 282.0], [71.6, 282.0], [71.7, 283.0], [71.8, 283.0], [71.9, 283.0], [72.0, 283.0], [72.1, 283.0], [72.2, 283.0], [72.3, 283.0], [72.4, 283.0], [72.5, 283.0], [72.6, 284.0], [72.7, 284.0], [72.8, 284.0], [72.9, 284.0], [73.0, 284.0], [73.1, 284.0], [73.2, 284.0], [73.3, 284.0], [73.4, 284.0], [73.5, 285.0], [73.6, 285.0], [73.7, 285.0], [73.8, 285.0], [73.9, 285.0], [74.0, 285.0], [74.1, 285.0], [74.2, 285.0], [74.3, 286.0], [74.4, 286.0], [74.5, 286.0], [74.6, 286.0], [74.7, 286.0], [74.8, 286.0], [74.9, 286.0], [75.0, 286.0], [75.1, 287.0], [75.2, 287.0], [75.3, 287.0], [75.4, 287.0], [75.5, 287.0], [75.6, 287.0], [75.7, 287.0], [75.8, 287.0], [75.9, 288.0], [76.0, 288.0], [76.1, 288.0], [76.2, 288.0], [76.3, 288.0], [76.4, 288.0], [76.5, 288.0], [76.6, 288.0], [76.7, 289.0], [76.8, 289.0], [76.9, 289.0], [77.0, 289.0], [77.1, 289.0], [77.2, 289.0], [77.3, 289.0], [77.4, 290.0], [77.5, 290.0], [77.6, 290.0], [77.7, 290.0], [77.8, 290.0], [77.9, 290.0], [78.0, 290.0], [78.1, 291.0], [78.2, 291.0], [78.3, 291.0], [78.4, 291.0], [78.5, 291.0], [78.6, 291.0], [78.7, 291.0], [78.8, 292.0], [78.9, 292.0], [79.0, 292.0], [79.1, 292.0], [79.2, 292.0], [79.3, 292.0], [79.4, 293.0], [79.5, 293.0], [79.6, 293.0], [79.7, 293.0], [79.8, 293.0], [79.9, 293.0], [80.0, 294.0], [80.1, 294.0], [80.2, 294.0], [80.3, 294.0], [80.4, 294.0], [80.5, 295.0], [80.6, 295.0], [80.7, 295.0], [80.8, 295.0], [80.9, 295.0], [81.0, 296.0], [81.1, 296.0], [81.2, 296.0], [81.3, 296.0], [81.4, 296.0], [81.5, 297.0], [81.6, 297.0], [81.7, 297.0], [81.8, 297.0], [81.9, 297.0], [82.0, 298.0], [82.1, 298.0], [82.2, 298.0], [82.3, 298.0], [82.4, 299.0], [82.5, 299.0], [82.6, 299.0], [82.7, 299.0], [82.8, 299.0], [82.9, 300.0], [83.0, 300.0], [83.1, 300.0], [83.2, 300.0], [83.3, 301.0], [83.4, 301.0], [83.5, 301.0], [83.6, 301.0], [83.7, 302.0], [83.8, 302.0], [83.9, 302.0], [84.0, 302.0], [84.1, 303.0], [84.2, 303.0], [84.3, 303.0], [84.4, 303.0], [84.5, 304.0], [84.6, 304.0], [84.7, 304.0], [84.8, 304.0], [84.9, 305.0], [85.0, 305.0], [85.1, 306.0], [85.2, 306.0], [85.3, 306.0], [85.4, 307.0], [85.5, 307.0], [85.6, 307.0], [85.7, 308.0], [85.8, 308.0], [85.9, 308.0], [86.0, 309.0], [86.1, 309.0], [86.2, 309.0], [86.3, 310.0], [86.4, 310.0], [86.5, 310.0], [86.6, 311.0], [86.7, 311.0], [86.8, 312.0], [86.9, 312.0], [87.0, 312.0], [87.1, 313.0], [87.2, 313.0], [87.3, 314.0], [87.4, 314.0], [87.5, 314.0], [87.6, 315.0], [87.7, 315.0], [87.8, 316.0], [87.9, 316.0], [88.0, 317.0], [88.1, 317.0], [88.2, 318.0], [88.3, 318.0], [88.4, 319.0], [88.5, 319.0], [88.6, 320.0], [88.7, 320.0], [88.8, 321.0], [88.9, 321.0], [89.0, 322.0], [89.1, 322.0], [89.2, 323.0], [89.3, 323.0], [89.4, 324.0], [89.5, 324.0], [89.6, 325.0], [89.7, 326.0], [89.8, 326.0], [89.9, 327.0], [90.0, 327.0], [90.1, 328.0], [90.2, 328.0], [90.3, 329.0], [90.4, 329.0], [90.5, 330.0], [90.6, 331.0], [90.7, 331.0], [90.8, 332.0], [90.9, 333.0], [91.0, 334.0], [91.1, 334.0], [91.2, 335.0], [91.3, 336.0], [91.4, 337.0], [91.5, 338.0], [91.6, 339.0], [91.7, 340.0], [91.8, 340.0], [91.9, 341.0], [92.0, 342.0], [92.1, 343.0], [92.2, 344.0], [92.3, 345.0], [92.4, 346.0], [92.5, 347.0], [92.6, 348.0], [92.7, 349.0], [92.8, 350.0], [92.9, 351.0], [93.0, 352.0], [93.1, 353.0], [93.2, 354.0], [93.3, 355.0], [93.4, 356.0], [93.5, 358.0], [93.6, 359.0], [93.7, 360.0], [93.8, 361.0], [93.9, 362.0], [94.0, 364.0], [94.1, 365.0], [94.2, 367.0], [94.3, 368.0], [94.4, 370.0], [94.5, 371.0], [94.6, 373.0], [94.7, 374.0], [94.8, 375.0], [94.9, 377.0], [95.0, 378.0], [95.1, 380.0], [95.2, 381.0], [95.3, 384.0], [95.4, 385.0], [95.5, 388.0], [95.6, 389.0], [95.7, 392.0], [95.8, 394.0], [95.9, 396.0], [96.0, 399.0], [96.1, 402.0], [96.2, 404.0], [96.3, 408.0], [96.4, 411.0], [96.5, 414.0], [96.6, 419.0], [96.7, 425.0], [96.8, 429.0], [96.9, 433.0], [97.0, 437.0], [97.1, 443.0], [97.2, 449.0], [97.3, 455.0], [97.4, 461.0], [97.5, 469.0], [97.6, 477.0], [97.7, 486.0], [97.8, 496.0], [97.9, 509.0], [98.0, 522.0], [98.1, 546.0], [98.2, 577.0], [98.3, 596.0], [98.4, 624.0], [98.5, 667.0], [98.6, 720.0], [98.7, 774.0], [98.8, 833.0], [98.9, 925.0], [99.0, 1011.0], [99.1, 1204.0], [99.2, 1281.0], [99.3, 2258.0], [99.4, 2422.0], [99.5, 3273.0], [99.6, 4253.0], [99.7, 4272.0], [99.8, 5253.0], [99.9, 5281.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[0.0, 948.0], [0.1, 964.0], [0.2, 968.0], [0.3, 970.0], [0.4, 972.0], [0.5, 973.0], [0.6, 974.0], [0.7, 975.0], [0.8, 976.0], [0.9, 977.0], [1.0, 978.0], [1.1, 979.0], [1.2, 980.0], [1.3, 980.0], [1.4, 981.0], [1.5, 982.0], [1.6, 982.0], [1.7, 983.0], [1.8, 984.0], [1.9, 984.0], [2.0, 985.0], [2.1, 985.0], [2.2, 986.0], [2.3, 986.0], [2.4, 987.0], [2.5, 987.0], [2.6, 988.0], [2.7, 988.0], [2.8, 989.0], [2.9, 989.0], [3.0, 989.0], [3.1, 990.0], [3.2, 990.0], [3.3, 991.0], [3.4, 991.0], [3.5, 991.0], [3.6, 992.0], [3.7, 992.0], [3.8, 992.0], [3.9, 993.0], [4.0, 993.0], [4.1, 993.0], [4.2, 994.0], [4.3, 994.0], [4.4, 994.0], [4.5, 995.0], [4.6, 995.0], [4.7, 995.0], [4.8, 996.0], [4.9, 996.0], [5.0, 996.0], [5.1, 997.0], [5.2, 997.0], [5.3, 997.0], [5.4, 998.0], [5.5, 998.0], [5.6, 998.0], [5.7, 998.0], [5.8, 999.0], [5.9, 999.0], [6.0, 999.0], [6.1, 999.0], [6.2, 1000.0], [6.3, 1000.0], [6.4, 1000.0], [6.5, 1000.0], [6.6, 1001.0], [6.7, 1001.0], [6.8, 1001.0], [6.9, 1001.0], [7.0, 1002.0], [7.1, 1002.0], [7.2, 1002.0], [7.3, 1002.0], [7.4, 1003.0], [7.5, 1003.0], [7.6, 1003.0], [7.7, 1003.0], [7.8, 1004.0], [7.9, 1004.0], [8.0, 1004.0], [8.1, 1004.0], [8.2, 1005.0], [8.3, 1005.0], [8.4, 1005.0], [8.5, 1005.0], [8.6, 1005.0], [8.7, 1006.0], [8.8, 1006.0], [8.9, 1006.0], [9.0, 1006.0], [9.1, 1007.0], [9.2, 1007.0], [9.3, 1007.0], [9.4, 1007.0], [9.5, 1007.0], [9.6, 1008.0], [9.7, 1008.0], [9.8, 1008.0], [9.9, 1008.0], [10.0, 1009.0], [10.1, 1009.0], [10.2, 1009.0], [10.3, 1009.0], [10.4, 1009.0], [10.5, 1010.0], [10.6, 1010.0], [10.7, 1010.0], [10.8, 1010.0], [10.9, 1010.0], [11.0, 1011.0], [11.1, 1011.0], [11.2, 1011.0], [11.3, 1011.0], [11.4, 1011.0], [11.5, 1012.0], [11.6, 1012.0], [11.7, 1012.0], [11.8, 1012.0], [11.9, 1013.0], [12.0, 1013.0], [12.1, 1013.0], [12.2, 1013.0], [12.3, 1013.0], [12.4, 1014.0], [12.5, 1014.0], [12.6, 1014.0], [12.7, 1014.0], [12.8, 1014.0], [12.9, 1014.0], [13.0, 1015.0], [13.1, 1015.0], [13.2, 1015.0], [13.3, 1015.0], [13.4, 1015.0], [13.5, 1015.0], [13.6, 1016.0], [13.7, 1016.0], [13.8, 1016.0], [13.9, 1016.0], [14.0, 1017.0], [14.1, 1017.0], [14.2, 1017.0], [14.3, 1017.0], [14.4, 1017.0], [14.5, 1017.0], [14.6, 1018.0], [14.7, 1018.0], [14.8, 1018.0], [14.9, 1018.0], [15.0, 1018.0], [15.1, 1018.0], [15.2, 1019.0], [15.3, 1019.0], [15.4, 1019.0], [15.5, 1019.0], [15.6, 1019.0], [15.7, 1019.0], [15.8, 1020.0], [15.9, 1020.0], [16.0, 1020.0], [16.1, 1020.0], [16.2, 1020.0], [16.3, 1021.0], [16.4, 1021.0], [16.5, 1021.0], [16.6, 1021.0], [16.7, 1021.0], [16.8, 1021.0], [16.9, 1022.0], [17.0, 1022.0], [17.1, 1022.0], [17.2, 1022.0], [17.3, 1022.0], [17.4, 1022.0], [17.5, 1023.0], [17.6, 1023.0], [17.7, 1023.0], [17.8, 1023.0], [17.9, 1023.0], [18.0, 1024.0], [18.1, 1024.0], [18.2, 1024.0], [18.3, 1024.0], [18.4, 1024.0], [18.5, 1025.0], [18.6, 1025.0], [18.7, 1025.0], [18.8, 1025.0], [18.9, 1025.0], [19.0, 1025.0], [19.1, 1026.0], [19.2, 1026.0], [19.3, 1026.0], [19.4, 1026.0], [19.5, 1026.0], [19.6, 1026.0], [19.7, 1027.0], [19.8, 1027.0], [19.9, 1027.0], [20.0, 1027.0], [20.1, 1027.0], [20.2, 1027.0], [20.3, 1028.0], [20.4, 1028.0], [20.5, 1028.0], [20.6, 1028.0], [20.7, 1028.0], [20.8, 1028.0], [20.9, 1029.0], [21.0, 1029.0], [21.1, 1029.0], [21.2, 1029.0], [21.3, 1029.0], [21.4, 1030.0], [21.5, 1030.0], [21.6, 1030.0], [21.7, 1030.0], [21.8, 1030.0], [21.9, 1030.0], [22.0, 1031.0], [22.1, 1031.0], [22.2, 1031.0], [22.3, 1031.0], [22.4, 1031.0], [22.5, 1031.0], [22.6, 1032.0], [22.7, 1032.0], [22.8, 1032.0], [22.9, 1032.0], [23.0, 1032.0], [23.1, 1033.0], [23.2, 1033.0], [23.3, 1033.0], [23.4, 1033.0], [23.5, 1033.0], [23.6, 1034.0], [23.7, 1034.0], [23.8, 1034.0], [23.9, 1034.0], [24.0, 1034.0], [24.1, 1035.0], [24.2, 1035.0], [24.3, 1035.0], [24.4, 1035.0], [24.5, 1035.0], [24.6, 1036.0], [24.7, 1036.0], [24.8, 1036.0], [24.9, 1036.0], [25.0, 1036.0], [25.1, 1037.0], [25.2, 1037.0], [25.3, 1037.0], [25.4, 1037.0], [25.5, 1037.0], [25.6, 1038.0], [25.7, 1038.0], [25.8, 1038.0], [25.9, 1038.0], [26.0, 1038.0], [26.1, 1039.0], [26.2, 1039.0], [26.3, 1039.0], [26.4, 1039.0], [26.5, 1039.0], [26.6, 1039.0], [26.7, 1040.0], [26.8, 1040.0], [26.9, 1040.0], [27.0, 1040.0], [27.1, 1041.0], [27.2, 1041.0], [27.3, 1041.0], [27.4, 1041.0], [27.5, 1041.0], [27.6, 1042.0], [27.7, 1042.0], [27.8, 1042.0], [27.9, 1042.0], [28.0, 1042.0], [28.1, 1043.0], [28.2, 1043.0], [28.3, 1043.0], [28.4, 1043.0], [28.5, 1043.0], [28.6, 1044.0], [28.7, 1044.0], [28.8, 1044.0], [28.9, 1044.0], [29.0, 1044.0], [29.1, 1045.0], [29.2, 1045.0], [29.3, 1045.0], [29.4, 1045.0], [29.5, 1046.0], [29.6, 1046.0], [29.7, 1046.0], [29.8, 1046.0], [29.9, 1046.0], [30.0, 1046.0], [30.1, 1047.0], [30.2, 1047.0], [30.3, 1047.0], [30.4, 1047.0], [30.5, 1047.0], [30.6, 1048.0], [30.7, 1048.0], [30.8, 1048.0], [30.9, 1048.0], [31.0, 1049.0], [31.1, 1049.0], [31.2, 1049.0], [31.3, 1049.0], [31.4, 1049.0], [31.5, 1050.0], [31.6, 1050.0], [31.7, 1050.0], [31.8, 1050.0], [31.9, 1051.0], [32.0, 1051.0], [32.1, 1051.0], [32.2, 1051.0], [32.3, 1051.0], [32.4, 1051.0], [32.5, 1052.0], [32.6, 1052.0], [32.7, 1052.0], [32.8, 1052.0], [32.9, 1052.0], [33.0, 1053.0], [33.1, 1053.0], [33.2, 1053.0], [33.3, 1053.0], [33.4, 1054.0], [33.5, 1054.0], [33.6, 1054.0], [33.7, 1054.0], [33.8, 1054.0], [33.9, 1055.0], [34.0, 1055.0], [34.1, 1055.0], [34.2, 1055.0], [34.3, 1055.0], [34.4, 1055.0], [34.5, 1056.0], [34.6, 1056.0], [34.7, 1056.0], [34.8, 1056.0], [34.9, 1057.0], [35.0, 1057.0], [35.1, 1057.0], [35.2, 1057.0], [35.3, 1057.0], [35.4, 1057.0], [35.5, 1058.0], [35.6, 1058.0], [35.7, 1058.0], [35.8, 1058.0], [35.9, 1058.0], [36.0, 1059.0], [36.1, 1059.0], [36.2, 1059.0], [36.3, 1059.0], [36.4, 1059.0], [36.5, 1060.0], [36.6, 1060.0], [36.7, 1060.0], [36.8, 1060.0], [36.9, 1060.0], [37.0, 1061.0], [37.1, 1061.0], [37.2, 1061.0], [37.3, 1061.0], [37.4, 1061.0], [37.5, 1062.0], [37.6, 1062.0], [37.7, 1062.0], [37.8, 1062.0], [37.9, 1062.0], [38.0, 1063.0], [38.1, 1063.0], [38.2, 1063.0], [38.3, 1063.0], [38.4, 1063.0], [38.5, 1063.0], [38.6, 1064.0], [38.7, 1064.0], [38.8, 1064.0], [38.9, 1064.0], [39.0, 1064.0], [39.1, 1065.0], [39.2, 1065.0], [39.3, 1065.0], [39.4, 1065.0], [39.5, 1065.0], [39.6, 1065.0], [39.7, 1066.0], [39.8, 1066.0], [39.9, 1066.0], [40.0, 1066.0], [40.1, 1066.0], [40.2, 1067.0], [40.3, 1067.0], [40.4, 1067.0], [40.5, 1067.0], [40.6, 1067.0], [40.7, 1068.0], [40.8, 1068.0], [40.9, 1068.0], [41.0, 1068.0], [41.1, 1068.0], [41.2, 1068.0], [41.3, 1069.0], [41.4, 1069.0], [41.5, 1069.0], [41.6, 1069.0], [41.7, 1069.0], [41.8, 1070.0], [41.9, 1070.0], [42.0, 1070.0], [42.1, 1070.0], [42.2, 1070.0], [42.3, 1070.0], [42.4, 1071.0], [42.5, 1071.0], [42.6, 1071.0], [42.7, 1071.0], [42.8, 1071.0], [42.9, 1072.0], [43.0, 1072.0], [43.1, 1072.0], [43.2, 1072.0], [43.3, 1072.0], [43.4, 1072.0], [43.5, 1073.0], [43.6, 1073.0], [43.7, 1073.0], [43.8, 1073.0], [43.9, 1073.0], [44.0, 1074.0], [44.1, 1074.0], [44.2, 1074.0], [44.3, 1074.0], [44.4, 1074.0], [44.5, 1075.0], [44.6, 1075.0], [44.7, 1075.0], [44.8, 1075.0], [44.9, 1075.0], [45.0, 1075.0], [45.1, 1076.0], [45.2, 1076.0], [45.3, 1076.0], [45.4, 1076.0], [45.5, 1076.0], [45.6, 1077.0], [45.7, 1077.0], [45.8, 1077.0], [45.9, 1077.0], [46.0, 1077.0], [46.1, 1078.0], [46.2, 1078.0], [46.3, 1078.0], [46.4, 1078.0], [46.5, 1078.0], [46.6, 1079.0], [46.7, 1079.0], [46.8, 1079.0], [46.9, 1079.0], [47.0, 1079.0], [47.1, 1080.0], [47.2, 1080.0], [47.3, 1080.0], [47.4, 1080.0], [47.5, 1080.0], [47.6, 1081.0], [47.7, 1081.0], [47.8, 1081.0], [47.9, 1081.0], [48.0, 1081.0], [48.1, 1082.0], [48.2, 1082.0], [48.3, 1082.0], [48.4, 1082.0], [48.5, 1082.0], [48.6, 1082.0], [48.7, 1083.0], [48.8, 1083.0], [48.9, 1083.0], [49.0, 1083.0], [49.1, 1083.0], [49.2, 1084.0], [49.3, 1084.0], [49.4, 1084.0], [49.5, 1084.0], [49.6, 1085.0], [49.7, 1085.0], [49.8, 1085.0], [49.9, 1085.0], [50.0, 1085.0], [50.1, 1086.0], [50.2, 1086.0], [50.3, 1086.0], [50.4, 1086.0], [50.5, 1086.0], [50.6, 1086.0], [50.7, 1087.0], [50.8, 1087.0], [50.9, 1087.0], [51.0, 1087.0], [51.1, 1087.0], [51.2, 1088.0], [51.3, 1088.0], [51.4, 1088.0], [51.5, 1088.0], [51.6, 1088.0], [51.7, 1089.0], [51.8, 1089.0], [51.9, 1089.0], [52.0, 1089.0], [52.1, 1090.0], [52.2, 1090.0], [52.3, 1090.0], [52.4, 1090.0], [52.5, 1090.0], [52.6, 1091.0], [52.7, 1091.0], [52.8, 1091.0], [52.9, 1091.0], [53.0, 1091.0], [53.1, 1091.0], [53.2, 1092.0], [53.3, 1092.0], [53.4, 1092.0], [53.5, 1092.0], [53.6, 1092.0], [53.7, 1093.0], [53.8, 1093.0], [53.9, 1093.0], [54.0, 1093.0], [54.1, 1093.0], [54.2, 1093.0], [54.3, 1094.0], [54.4, 1094.0], [54.5, 1094.0], [54.6, 1094.0], [54.7, 1094.0], [54.8, 1095.0], [54.9, 1095.0], [55.0, 1095.0], [55.1, 1095.0], [55.2, 1095.0], [55.3, 1096.0], [55.4, 1096.0], [55.5, 1096.0], [55.6, 1096.0], [55.7, 1096.0], [55.8, 1096.0], [55.9, 1097.0], [56.0, 1097.0], [56.1, 1097.0], [56.2, 1097.0], [56.3, 1097.0], [56.4, 1098.0], [56.5, 1098.0], [56.6, 1098.0], [56.7, 1098.0], [56.8, 1098.0], [56.9, 1099.0], [57.0, 1099.0], [57.1, 1099.0], [57.2, 1099.0], [57.3, 1099.0], [57.4, 1100.0], [57.5, 1100.0], [57.6, 1100.0], [57.7, 1100.0], [57.8, 1100.0], [57.9, 1101.0], [58.0, 1101.0], [58.1, 1101.0], [58.2, 1101.0], [58.3, 1101.0], [58.4, 1102.0], [58.5, 1102.0], [58.6, 1102.0], [58.7, 1102.0], [58.8, 1102.0], [58.9, 1103.0], [59.0, 1103.0], [59.1, 1103.0], [59.2, 1103.0], [59.3, 1104.0], [59.4, 1104.0], [59.5, 1104.0], [59.6, 1104.0], [59.7, 1104.0], [59.8, 1104.0], [59.9, 1105.0], [60.0, 1105.0], [60.1, 1105.0], [60.2, 1105.0], [60.3, 1106.0], [60.4, 1106.0], [60.5, 1106.0], [60.6, 1106.0], [60.7, 1106.0], [60.8, 1107.0], [60.9, 1107.0], [61.0, 1107.0], [61.1, 1107.0], [61.2, 1108.0], [61.3, 1108.0], [61.4, 1108.0], [61.5, 1108.0], [61.6, 1109.0], [61.7, 1109.0], [61.8, 1109.0], [61.9, 1109.0], [62.0, 1110.0], [62.1, 1110.0], [62.2, 1110.0], [62.3, 1110.0], [62.4, 1110.0], [62.5, 1111.0], [62.6, 1111.0], [62.7, 1111.0], [62.8, 1111.0], [62.9, 1111.0], [63.0, 1112.0], [63.1, 1112.0], [63.2, 1112.0], [63.3, 1112.0], [63.4, 1113.0], [63.5, 1113.0], [63.6, 1113.0], [63.7, 1113.0], [63.8, 1114.0], [63.9, 1114.0], [64.0, 1114.0], [64.1, 1114.0], [64.2, 1115.0], [64.3, 1115.0], [64.4, 1115.0], [64.5, 1115.0], [64.6, 1116.0], [64.7, 1116.0], [64.8, 1116.0], [64.9, 1116.0], [65.0, 1117.0], [65.1, 1117.0], [65.2, 1117.0], [65.3, 1118.0], [65.4, 1118.0], [65.5, 1118.0], [65.6, 1118.0], [65.7, 1119.0], [65.8, 1119.0], [65.9, 1119.0], [66.0, 1119.0], [66.1, 1120.0], [66.2, 1120.0], [66.3, 1120.0], [66.4, 1121.0], [66.5, 1121.0], [66.6, 1121.0], [66.7, 1121.0], [66.8, 1122.0], [66.9, 1122.0], [67.0, 1122.0], [67.1, 1123.0], [67.2, 1123.0], [67.3, 1123.0], [67.4, 1124.0], [67.5, 1124.0], [67.6, 1124.0], [67.7, 1124.0], [67.8, 1125.0], [67.9, 1125.0], [68.0, 1125.0], [68.1, 1126.0], [68.2, 1126.0], [68.3, 1126.0], [68.4, 1126.0], [68.5, 1127.0], [68.6, 1127.0], [68.7, 1127.0], [68.8, 1128.0], [68.9, 1128.0], [69.0, 1128.0], [69.1, 1129.0], [69.2, 1129.0], [69.3, 1129.0], [69.4, 1129.0], [69.5, 1130.0], [69.6, 1130.0], [69.7, 1130.0], [69.8, 1131.0], [69.9, 1131.0], [70.0, 1131.0], [70.1, 1131.0], [70.2, 1132.0], [70.3, 1132.0], [70.4, 1132.0], [70.5, 1132.0], [70.6, 1133.0], [70.7, 1133.0], [70.8, 1133.0], [70.9, 1134.0], [71.0, 1134.0], [71.1, 1134.0], [71.2, 1135.0], [71.3, 1135.0], [71.4, 1135.0], [71.5, 1136.0], [71.6, 1136.0], [71.7, 1136.0], [71.8, 1136.0], [71.9, 1137.0], [72.0, 1137.0], [72.1, 1138.0], [72.2, 1138.0], [72.3, 1138.0], [72.4, 1139.0], [72.5, 1139.0], [72.6, 1139.0], [72.7, 1140.0], [72.8, 1140.0], [72.9, 1140.0], [73.0, 1141.0], [73.1, 1141.0], [73.2, 1141.0], [73.3, 1142.0], [73.4, 1142.0], [73.5, 1143.0], [73.6, 1143.0], [73.7, 1143.0], [73.8, 1144.0], [73.9, 1144.0], [74.0, 1144.0], [74.1, 1145.0], [74.2, 1145.0], [74.3, 1145.0], [74.4, 1146.0], [74.5, 1146.0], [74.6, 1147.0], [74.7, 1147.0], [74.8, 1147.0], [74.9, 1148.0], [75.0, 1148.0], [75.1, 1149.0], [75.2, 1149.0], [75.3, 1150.0], [75.4, 1150.0], [75.5, 1150.0], [75.6, 1151.0], [75.7, 1151.0], [75.8, 1151.0], [75.9, 1152.0], [76.0, 1152.0], [76.1, 1152.0], [76.2, 1153.0], [76.3, 1153.0], [76.4, 1154.0], [76.5, 1154.0], [76.6, 1155.0], [76.7, 1155.0], [76.8, 1156.0], [76.9, 1156.0], [77.0, 1156.0], [77.1, 1157.0], [77.2, 1157.0], [77.3, 1157.0], [77.4, 1158.0], [77.5, 1158.0], [77.6, 1159.0], [77.7, 1159.0], [77.8, 1159.0], [77.9, 1160.0], [78.0, 1160.0], [78.1, 1161.0], [78.2, 1161.0], [78.3, 1162.0], [78.4, 1162.0], [78.5, 1162.0], [78.6, 1163.0], [78.7, 1163.0], [78.8, 1164.0], [78.9, 1164.0], [79.0, 1165.0], [79.1, 1165.0], [79.2, 1166.0], [79.3, 1166.0], [79.4, 1167.0], [79.5, 1167.0], [79.6, 1168.0], [79.7, 1168.0], [79.8, 1169.0], [79.9, 1169.0], [80.0, 1170.0], [80.1, 1171.0], [80.2, 1171.0], [80.3, 1172.0], [80.4, 1172.0], [80.5, 1173.0], [80.6, 1173.0], [80.7, 1174.0], [80.8, 1174.0], [80.9, 1175.0], [81.0, 1175.0], [81.1, 1176.0], [81.2, 1177.0], [81.3, 1177.0], [81.4, 1178.0], [81.5, 1179.0], [81.6, 1179.0], [81.7, 1180.0], [81.8, 1180.0], [81.9, 1181.0], [82.0, 1182.0], [82.1, 1182.0], [82.2, 1183.0], [82.3, 1183.0], [82.4, 1184.0], [82.5, 1185.0], [82.6, 1185.0], [82.7, 1186.0], [82.8, 1187.0], [82.9, 1188.0], [83.0, 1188.0], [83.1, 1189.0], [83.2, 1190.0], [83.3, 1191.0], [83.4, 1192.0], [83.5, 1192.0], [83.6, 1193.0], [83.7, 1194.0], [83.8, 1195.0], [83.9, 1195.0], [84.0, 1196.0], [84.1, 1197.0], [84.2, 1197.0], [84.3, 1198.0], [84.4, 1199.0], [84.5, 1200.0], [84.6, 1201.0], [84.7, 1202.0], [84.8, 1203.0], [84.9, 1203.0], [85.0, 1204.0], [85.1, 1205.0], [85.2, 1206.0], [85.3, 1206.0], [85.4, 1207.0], [85.5, 1208.0], [85.6, 1209.0], [85.7, 1210.0], [85.8, 1211.0], [85.9, 1212.0], [86.0, 1212.0], [86.1, 1213.0], [86.2, 1214.0], [86.3, 1215.0], [86.4, 1216.0], [86.5, 1217.0], [86.6, 1218.0], [86.7, 1219.0], [86.8, 1220.0], [86.9, 1221.0], [87.0, 1221.0], [87.1, 1222.0], [87.2, 1223.0], [87.3, 1224.0], [87.4, 1226.0], [87.5, 1227.0], [87.6, 1228.0], [87.7, 1229.0], [87.8, 1231.0], [87.9, 1232.0], [88.0, 1233.0], [88.1, 1234.0], [88.2, 1235.0], [88.3, 1236.0], [88.4, 1238.0], [88.5, 1239.0], [88.6, 1240.0], [88.7, 1242.0], [88.8, 1243.0], [88.9, 1244.0], [89.0, 1246.0], [89.1, 1247.0], [89.2, 1249.0], [89.3, 1251.0], [89.4, 1252.0], [89.5, 1253.0], [89.6, 1255.0], [89.7, 1257.0], [89.8, 1259.0], [89.9, 1260.0], [90.0, 1262.0], [90.1, 1264.0], [90.2, 1265.0], [90.3, 1268.0], [90.4, 1269.0], [90.5, 1271.0], [90.6, 1273.0], [90.7, 1275.0], [90.8, 1277.0], [90.9, 1279.0], [91.0, 1281.0], [91.1, 1284.0], [91.2, 1286.0], [91.3, 1287.0], [91.4, 1290.0], [91.5, 1292.0], [91.6, 1295.0], [91.7, 1297.0], [91.8, 1299.0], [91.9, 1301.0], [92.0, 1305.0], [92.1, 1308.0], [92.2, 1310.0], [92.3, 1313.0], [92.4, 1315.0], [92.5, 1318.0], [92.6, 1322.0], [92.7, 1325.0], [92.8, 1329.0], [92.9, 1332.0], [93.0, 1336.0], [93.1, 1339.0], [93.2, 1342.0], [93.3, 1345.0], [93.4, 1349.0], [93.5, 1352.0], [93.6, 1355.0], [93.7, 1360.0], [93.8, 1364.0], [93.9, 1369.0], [94.0, 1373.0], [94.1, 1376.0], [94.2, 1381.0], [94.3, 1386.0], [94.4, 1390.0], [94.5, 1395.0], [94.6, 1400.0], [94.7, 1405.0], [94.8, 1413.0], [94.9, 1419.0], [95.0, 1424.0], [95.1, 1431.0], [95.2, 1437.0], [95.3, 1443.0], [95.4, 1451.0], [95.5, 1460.0], [95.6, 1469.0], [95.7, 1475.0], [95.8, 1483.0], [95.9, 1494.0], [96.0, 1505.0], [96.1, 1517.0], [96.2, 1531.0], [96.3, 1551.0], [96.4, 1573.0], [96.5, 1595.0], [96.6, 1630.0], [96.7, 1674.0], [96.8, 1733.0], [96.9, 1784.0], [97.0, 1851.0], [97.1, 1912.0], [97.2, 1979.0], [97.3, 2018.0], [97.4, 2042.0], [97.5, 2062.0], [97.6, 2094.0], [97.7, 2120.0], [97.8, 2147.0], [97.9, 2189.0], [98.0, 2226.0], [98.1, 2294.0], [98.2, 2399.0], [98.3, 2551.0], [98.4, 2658.0], [98.5, 2799.0], [98.6, 3000.0], [98.7, 3037.0], [98.8, 3078.0], [98.9, 3155.0], [99.0, 3459.0], [99.1, 3985.0], [99.2, 4050.0], [99.3, 4094.0], [99.4, 4238.0], [99.5, 5056.0], [99.6, 5111.0], [99.7, 5438.0], [99.8, 6083.0], [99.9, 7138.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 241.0], [0.6, 242.0], [0.7, 243.0], [0.8, 243.0], [0.9, 244.0], [1.0, 244.0], [1.1, 244.0], [1.2, 245.0], [1.3, 245.0], [1.4, 245.0], [1.5, 246.0], [1.6, 246.0], [1.7, 246.0], [1.8, 246.0], [1.9, 247.0], [2.0, 247.0], [2.1, 247.0], [2.2, 247.0], [2.3, 247.0], [2.4, 247.0], [2.5, 248.0], [2.6, 248.0], [2.7, 248.0], [2.8, 248.0], [2.9, 248.0], [3.0, 248.0], [3.1, 248.0], [3.2, 248.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 250.0], [4.3, 250.0], [4.4, 250.0], [4.5, 250.0], [4.6, 250.0], [4.7, 250.0], [4.8, 250.0], [4.9, 250.0], [5.0, 250.0], [5.1, 251.0], [5.2, 251.0], [5.3, 251.0], [5.4, 251.0], [5.5, 251.0], [5.6, 251.0], [5.7, 251.0], [5.8, 251.0], [5.9, 251.0], [6.0, 251.0], [6.1, 251.0], [6.2, 251.0], [6.3, 252.0], [6.4, 252.0], [6.5, 252.0], [6.6, 252.0], [6.7, 252.0], [6.8, 252.0], [6.9, 252.0], [7.0, 252.0], [7.1, 252.0], [7.2, 252.0], [7.3, 252.0], [7.4, 252.0], [7.5, 252.0], [7.6, 252.0], [7.7, 253.0], [7.8, 253.0], [7.9, 253.0], [8.0, 253.0], [8.1, 253.0], [8.2, 253.0], [8.3, 253.0], [8.4, 253.0], [8.5, 253.0], [8.6, 253.0], [8.7, 253.0], [8.8, 253.0], [8.9, 253.0], [9.0, 253.0], [9.1, 253.0], [9.2, 254.0], [9.3, 254.0], [9.4, 254.0], [9.5, 254.0], [9.6, 254.0], [9.7, 254.0], [9.8, 254.0], [9.9, 254.0], [10.0, 254.0], [10.1, 254.0], [10.2, 254.0], [10.3, 254.0], [10.4, 254.0], [10.5, 254.0], [10.6, 254.0], [10.7, 254.0], [10.8, 254.0], [10.9, 254.0], [11.0, 255.0], [11.1, 255.0], [11.2, 255.0], [11.3, 255.0], [11.4, 255.0], [11.5, 255.0], [11.6, 255.0], [11.7, 255.0], [11.8, 255.0], [11.9, 255.0], [12.0, 255.0], [12.1, 255.0], [12.2, 255.0], [12.3, 255.0], [12.4, 255.0], [12.5, 255.0], [12.6, 255.0], [12.7, 256.0], [12.8, 256.0], [12.9, 256.0], [13.0, 256.0], [13.1, 256.0], [13.2, 256.0], [13.3, 256.0], [13.4, 256.0], [13.5, 256.0], [13.6, 256.0], [13.7, 256.0], [13.8, 256.0], [13.9, 256.0], [14.0, 256.0], [14.1, 256.0], [14.2, 256.0], [14.3, 257.0], [14.4, 257.0], [14.5, 257.0], [14.6, 257.0], [14.7, 257.0], [14.8, 257.0], [14.9, 257.0], [15.0, 257.0], [15.1, 257.0], [15.2, 257.0], [15.3, 257.0], [15.4, 257.0], [15.5, 257.0], [15.6, 257.0], [15.7, 257.0], [15.8, 257.0], [15.9, 258.0], [16.0, 258.0], [16.1, 258.0], [16.2, 258.0], [16.3, 258.0], [16.4, 258.0], [16.5, 258.0], [16.6, 258.0], [16.7, 258.0], [16.8, 258.0], [16.9, 258.0], [17.0, 258.0], [17.1, 258.0], [17.2, 258.0], [17.3, 258.0], [17.4, 258.0], [17.5, 259.0], [17.6, 259.0], [17.7, 259.0], [17.8, 259.0], [17.9, 259.0], [18.0, 259.0], [18.1, 259.0], [18.2, 259.0], [18.3, 259.0], [18.4, 259.0], [18.5, 259.0], [18.6, 259.0], [18.7, 259.0], [18.8, 259.0], [18.9, 259.0], [19.0, 260.0], [19.1, 260.0], [19.2, 260.0], [19.3, 260.0], [19.4, 260.0], [19.5, 260.0], [19.6, 260.0], [19.7, 260.0], [19.8, 260.0], [19.9, 260.0], [20.0, 260.0], [20.1, 260.0], [20.2, 260.0], [20.3, 260.0], [20.4, 260.0], [20.5, 260.0], [20.6, 261.0], [20.7, 261.0], [20.8, 261.0], [20.9, 261.0], [21.0, 261.0], [21.1, 261.0], [21.2, 261.0], [21.3, 261.0], [21.4, 261.0], [21.5, 261.0], [21.6, 261.0], [21.7, 261.0], [21.8, 261.0], [21.9, 261.0], [22.0, 261.0], [22.1, 262.0], [22.2, 262.0], [22.3, 262.0], [22.4, 262.0], [22.5, 262.0], [22.6, 262.0], [22.7, 262.0], [22.8, 262.0], [22.9, 262.0], [23.0, 262.0], [23.1, 262.0], [23.2, 262.0], [23.3, 262.0], [23.4, 262.0], [23.5, 262.0], [23.6, 263.0], [23.7, 263.0], [23.8, 263.0], [23.9, 263.0], [24.0, 263.0], [24.1, 263.0], [24.2, 263.0], [24.3, 263.0], [24.4, 263.0], [24.5, 263.0], [24.6, 263.0], [24.7, 263.0], [24.8, 263.0], [24.9, 263.0], [25.0, 263.0], [25.1, 264.0], [25.2, 264.0], [25.3, 264.0], [25.4, 264.0], [25.5, 264.0], [25.6, 264.0], [25.7, 264.0], [25.8, 264.0], [25.9, 264.0], [26.0, 264.0], [26.1, 264.0], [26.2, 264.0], [26.3, 264.0], [26.4, 264.0], [26.5, 264.0], [26.6, 265.0], [26.7, 265.0], [26.8, 265.0], [26.9, 265.0], [27.0, 265.0], [27.1, 265.0], [27.2, 265.0], [27.3, 265.0], [27.4, 265.0], [27.5, 265.0], [27.6, 265.0], [27.7, 265.0], [27.8, 265.0], [27.9, 265.0], [28.0, 265.0], [28.1, 266.0], [28.2, 266.0], [28.3, 266.0], [28.4, 266.0], [28.5, 266.0], [28.6, 266.0], [28.7, 266.0], [28.8, 266.0], [28.9, 266.0], [29.0, 266.0], [29.1, 266.0], [29.2, 266.0], [29.3, 266.0], [29.4, 266.0], [29.5, 266.0], [29.6, 266.0], [29.7, 267.0], [29.8, 267.0], [29.9, 267.0], [30.0, 267.0], [30.1, 267.0], [30.2, 267.0], [30.3, 267.0], [30.4, 267.0], [30.5, 267.0], [30.6, 267.0], [30.7, 267.0], [30.8, 267.0], [30.9, 267.0], [31.0, 267.0], [31.1, 267.0], [31.2, 267.0], [31.3, 268.0], [31.4, 268.0], [31.5, 268.0], [31.6, 268.0], [31.7, 268.0], [31.8, 268.0], [31.9, 268.0], [32.0, 268.0], [32.1, 268.0], [32.2, 268.0], [32.3, 268.0], [32.4, 268.0], [32.5, 268.0], [32.6, 268.0], [32.7, 268.0], [32.8, 268.0], [32.9, 268.0], [33.0, 269.0], [33.1, 269.0], [33.2, 269.0], [33.3, 269.0], [33.4, 269.0], [33.5, 269.0], [33.6, 269.0], [33.7, 269.0], [33.8, 269.0], [33.9, 269.0], [34.0, 269.0], [34.1, 269.0], [34.2, 269.0], [34.3, 269.0], [34.4, 269.0], [34.5, 269.0], [34.6, 270.0], [34.7, 270.0], [34.8, 270.0], [34.9, 270.0], [35.0, 270.0], [35.1, 270.0], [35.2, 270.0], [35.3, 270.0], [35.4, 270.0], [35.5, 270.0], [35.6, 270.0], [35.7, 270.0], [35.8, 270.0], [35.9, 270.0], [36.0, 270.0], [36.1, 270.0], [36.2, 270.0], [36.3, 271.0], [36.4, 271.0], [36.5, 271.0], [36.6, 271.0], [36.7, 271.0], [36.8, 271.0], [36.9, 271.0], [37.0, 271.0], [37.1, 271.0], [37.2, 271.0], [37.3, 271.0], [37.4, 271.0], [37.5, 271.0], [37.6, 271.0], [37.7, 271.0], [37.8, 272.0], [37.9, 272.0], [38.0, 272.0], [38.1, 272.0], [38.2, 272.0], [38.3, 272.0], [38.4, 272.0], [38.5, 272.0], [38.6, 272.0], [38.7, 272.0], [38.8, 272.0], [38.9, 272.0], [39.0, 272.0], [39.1, 272.0], [39.2, 272.0], [39.3, 272.0], [39.4, 272.0], [39.5, 273.0], [39.6, 273.0], [39.7, 273.0], [39.8, 273.0], [39.9, 273.0], [40.0, 273.0], [40.1, 273.0], [40.2, 273.0], [40.3, 273.0], [40.4, 273.0], [40.5, 273.0], [40.6, 273.0], [40.7, 273.0], [40.8, 273.0], [40.9, 273.0], [41.0, 273.0], [41.1, 273.0], [41.2, 274.0], [41.3, 274.0], [41.4, 274.0], [41.5, 274.0], [41.6, 274.0], [41.7, 274.0], [41.8, 274.0], [41.9, 274.0], [42.0, 274.0], [42.1, 274.0], [42.2, 274.0], [42.3, 274.0], [42.4, 274.0], [42.5, 274.0], [42.6, 274.0], [42.7, 274.0], [42.8, 274.0], [42.9, 275.0], [43.0, 275.0], [43.1, 275.0], [43.2, 275.0], [43.3, 275.0], [43.4, 275.0], [43.5, 275.0], [43.6, 275.0], [43.7, 275.0], [43.8, 275.0], [43.9, 275.0], [44.0, 275.0], [44.1, 275.0], [44.2, 275.0], [44.3, 275.0], [44.4, 276.0], [44.5, 276.0], [44.6, 276.0], [44.7, 276.0], [44.8, 276.0], [44.9, 276.0], [45.0, 276.0], [45.1, 276.0], [45.2, 276.0], [45.3, 276.0], [45.4, 276.0], [45.5, 276.0], [45.6, 276.0], [45.7, 276.0], [45.8, 276.0], [45.9, 276.0], [46.0, 277.0], [46.1, 277.0], [46.2, 277.0], [46.3, 277.0], [46.4, 277.0], [46.5, 277.0], [46.6, 277.0], [46.7, 277.0], [46.8, 277.0], [46.9, 277.0], [47.0, 277.0], [47.1, 277.0], [47.2, 277.0], [47.3, 277.0], [47.4, 278.0], [47.5, 278.0], [47.6, 278.0], [47.7, 278.0], [47.8, 278.0], [47.9, 278.0], [48.0, 278.0], [48.1, 278.0], [48.2, 278.0], [48.3, 278.0], [48.4, 278.0], [48.5, 278.0], [48.6, 278.0], [48.7, 278.0], [48.8, 279.0], [48.9, 279.0], [49.0, 279.0], [49.1, 279.0], [49.2, 279.0], [49.3, 279.0], [49.4, 279.0], [49.5, 279.0], [49.6, 279.0], [49.7, 279.0], [49.8, 279.0], [49.9, 279.0], [50.0, 279.0], [50.1, 279.0], [50.2, 280.0], [50.3, 280.0], [50.4, 280.0], [50.5, 280.0], [50.6, 280.0], [50.7, 280.0], [50.8, 280.0], [50.9, 280.0], [51.0, 280.0], [51.1, 280.0], [51.2, 280.0], [51.3, 280.0], [51.4, 281.0], [51.5, 281.0], [51.6, 281.0], [51.7, 281.0], [51.8, 281.0], [51.9, 281.0], [52.0, 281.0], [52.1, 281.0], [52.2, 281.0], [52.3, 281.0], [52.4, 281.0], [52.5, 281.0], [52.6, 282.0], [52.7, 282.0], [52.8, 282.0], [52.9, 282.0], [53.0, 282.0], [53.1, 282.0], [53.2, 282.0], [53.3, 282.0], [53.4, 282.0], [53.5, 282.0], [53.6, 282.0], [53.7, 283.0], [53.8, 283.0], [53.9, 283.0], [54.0, 283.0], [54.1, 283.0], [54.2, 283.0], [54.3, 283.0], [54.4, 283.0], [54.5, 283.0], [54.6, 283.0], [54.7, 284.0], [54.8, 284.0], [54.9, 284.0], [55.0, 284.0], [55.1, 284.0], [55.2, 284.0], [55.3, 284.0], [55.4, 284.0], [55.5, 284.0], [55.6, 285.0], [55.7, 285.0], [55.8, 285.0], [55.9, 285.0], [56.0, 285.0], [56.1, 285.0], [56.2, 285.0], [56.3, 285.0], [56.4, 285.0], [56.5, 285.0], [56.6, 286.0], [56.7, 286.0], [56.8, 286.0], [56.9, 286.0], [57.0, 286.0], [57.1, 286.0], [57.2, 286.0], [57.3, 286.0], [57.4, 286.0], [57.5, 287.0], [57.6, 287.0], [57.7, 287.0], [57.8, 287.0], [57.9, 287.0], [58.0, 287.0], [58.1, 287.0], [58.2, 287.0], [58.3, 287.0], [58.4, 288.0], [58.5, 288.0], [58.6, 288.0], [58.7, 288.0], [58.8, 288.0], [58.9, 288.0], [59.0, 288.0], [59.1, 288.0], [59.2, 289.0], [59.3, 289.0], [59.4, 289.0], [59.5, 289.0], [59.6, 289.0], [59.7, 289.0], [59.8, 289.0], [59.9, 289.0], [60.0, 289.0], [60.1, 290.0], [60.2, 290.0], [60.3, 290.0], [60.4, 290.0], [60.5, 290.0], [60.6, 290.0], [60.7, 290.0], [60.8, 290.0], [60.9, 291.0], [61.0, 291.0], [61.1, 291.0], [61.2, 291.0], [61.3, 291.0], [61.4, 291.0], [61.5, 291.0], [61.6, 291.0], [61.7, 292.0], [61.8, 292.0], [61.9, 292.0], [62.0, 292.0], [62.1, 292.0], [62.2, 292.0], [62.3, 292.0], [62.4, 292.0], [62.5, 293.0], [62.6, 293.0], [62.7, 293.0], [62.8, 293.0], [62.9, 293.0], [63.0, 293.0], [63.1, 293.0], [63.2, 294.0], [63.3, 294.0], [63.4, 294.0], [63.5, 294.0], [63.6, 294.0], [63.7, 294.0], [63.8, 294.0], [63.9, 295.0], [64.0, 295.0], [64.1, 295.0], [64.2, 295.0], [64.3, 295.0], [64.4, 295.0], [64.5, 296.0], [64.6, 296.0], [64.7, 296.0], [64.8, 296.0], [64.9, 296.0], [65.0, 296.0], [65.1, 296.0], [65.2, 297.0], [65.3, 297.0], [65.4, 297.0], [65.5, 297.0], [65.6, 297.0], [65.7, 297.0], [65.8, 298.0], [65.9, 298.0], [66.0, 298.0], [66.1, 298.0], [66.2, 298.0], [66.3, 298.0], [66.4, 299.0], [66.5, 299.0], [66.6, 299.0], [66.7, 299.0], [66.8, 299.0], [66.9, 299.0], [67.0, 300.0], [67.1, 300.0], [67.2, 300.0], [67.3, 300.0], [67.4, 301.0], [67.5, 301.0], [67.6, 301.0], [67.7, 301.0], [67.8, 302.0], [67.9, 302.0], [68.0, 302.0], [68.1, 302.0], [68.2, 303.0], [68.3, 303.0], [68.4, 303.0], [68.5, 303.0], [68.6, 303.0], [68.7, 304.0], [68.8, 304.0], [68.9, 304.0], [69.0, 304.0], [69.1, 304.0], [69.2, 305.0], [69.3, 305.0], [69.4, 305.0], [69.5, 305.0], [69.6, 306.0], [69.7, 306.0], [69.8, 306.0], [69.9, 306.0], [70.0, 307.0], [70.1, 307.0], [70.2, 307.0], [70.3, 307.0], [70.4, 308.0], [70.5, 308.0], [70.6, 308.0], [70.7, 309.0], [70.8, 309.0], [70.9, 309.0], [71.0, 309.0], [71.1, 310.0], [71.2, 310.0], [71.3, 310.0], [71.4, 311.0], [71.5, 311.0], [71.6, 311.0], [71.7, 312.0], [71.8, 312.0], [71.9, 312.0], [72.0, 313.0], [72.1, 313.0], [72.2, 313.0], [72.3, 314.0], [72.4, 314.0], [72.5, 314.0], [72.6, 315.0], [72.7, 315.0], [72.8, 315.0], [72.9, 316.0], [73.0, 316.0], [73.1, 317.0], [73.2, 317.0], [73.3, 317.0], [73.4, 318.0], [73.5, 318.0], [73.6, 318.0], [73.7, 319.0], [73.8, 319.0], [73.9, 320.0], [74.0, 320.0], [74.1, 320.0], [74.2, 321.0], [74.3, 321.0], [74.4, 321.0], [74.5, 322.0], [74.6, 322.0], [74.7, 323.0], [74.8, 323.0], [74.9, 324.0], [75.0, 324.0], [75.1, 325.0], [75.2, 325.0], [75.3, 326.0], [75.4, 326.0], [75.5, 327.0], [75.6, 328.0], [75.7, 328.0], [75.8, 329.0], [75.9, 329.0], [76.0, 330.0], [76.1, 330.0], [76.2, 331.0], [76.3, 332.0], [76.4, 332.0], [76.5, 333.0], [76.6, 334.0], [76.7, 334.0], [76.8, 335.0], [76.9, 336.0], [77.0, 336.0], [77.1, 337.0], [77.2, 338.0], [77.3, 338.0], [77.4, 339.0], [77.5, 340.0], [77.6, 341.0], [77.7, 342.0], [77.8, 343.0], [77.9, 343.0], [78.0, 344.0], [78.1, 345.0], [78.2, 346.0], [78.3, 347.0], [78.4, 348.0], [78.5, 349.0], [78.6, 350.0], [78.7, 351.0], [78.8, 352.0], [78.9, 353.0], [79.0, 354.0], [79.1, 355.0], [79.2, 356.0], [79.3, 357.0], [79.4, 358.0], [79.5, 359.0], [79.6, 360.0], [79.7, 361.0], [79.8, 363.0], [79.9, 364.0], [80.0, 365.0], [80.1, 367.0], [80.2, 368.0], [80.3, 369.0], [80.4, 370.0], [80.5, 371.0], [80.6, 373.0], [80.7, 374.0], [80.8, 375.0], [80.9, 376.0], [81.0, 378.0], [81.1, 380.0], [81.2, 382.0], [81.3, 383.0], [81.4, 385.0], [81.5, 387.0], [81.6, 389.0], [81.7, 390.0], [81.8, 392.0], [81.9, 394.0], [82.0, 396.0], [82.1, 397.0], [82.2, 399.0], [82.3, 401.0], [82.4, 404.0], [82.5, 406.0], [82.6, 408.0], [82.7, 410.0], [82.8, 412.0], [82.9, 414.0], [83.0, 417.0], [83.1, 420.0], [83.2, 423.0], [83.3, 426.0], [83.4, 430.0], [83.5, 434.0], [83.6, 437.0], [83.7, 443.0], [83.8, 450.0], [83.9, 455.0], [84.0, 461.0], [84.1, 466.0], [84.2, 472.0], [84.3, 482.0], [84.4, 490.0], [84.5, 499.0], [84.6, 510.0], [84.7, 525.0], [84.8, 546.0], [84.9, 570.0], [85.0, 589.0], [85.1, 625.0], [85.2, 678.0], [85.3, 723.0], [85.4, 732.0], [85.5, 736.0], [85.6, 739.0], [85.7, 742.0], [85.8, 744.0], [85.9, 746.0], [86.0, 748.0], [86.1, 749.0], [86.2, 751.0], [86.3, 752.0], [86.4, 753.0], [86.5, 754.0], [86.6, 756.0], [86.7, 757.0], [86.8, 759.0], [86.9, 759.0], [87.0, 761.0], [87.1, 762.0], [87.2, 763.0], [87.3, 764.0], [87.4, 765.0], [87.5, 766.0], [87.6, 767.0], [87.7, 769.0], [87.8, 770.0], [87.9, 771.0], [88.0, 772.0], [88.1, 773.0], [88.2, 774.0], [88.3, 774.0], [88.4, 776.0], [88.5, 777.0], [88.6, 778.0], [88.7, 779.0], [88.8, 781.0], [88.9, 782.0], [89.0, 783.0], [89.1, 784.0], [89.2, 785.0], [89.3, 786.0], [89.4, 787.0], [89.5, 788.0], [89.6, 789.0], [89.7, 790.0], [89.8, 791.0], [89.9, 792.0], [90.0, 793.0], [90.1, 795.0], [90.2, 796.0], [90.3, 797.0], [90.4, 798.0], [90.5, 799.0], [90.6, 800.0], [90.7, 802.0], [90.8, 803.0], [90.9, 803.0], [91.0, 804.0], [91.1, 806.0], [91.2, 807.0], [91.3, 808.0], [91.4, 809.0], [91.5, 810.0], [91.6, 812.0], [91.7, 813.0], [91.8, 814.0], [91.9, 815.0], [92.0, 816.0], [92.1, 817.0], [92.2, 818.0], [92.3, 819.0], [92.4, 820.0], [92.5, 821.0], [92.6, 823.0], [92.7, 824.0], [92.8, 825.0], [92.9, 826.0], [93.0, 827.0], [93.1, 828.0], [93.2, 829.0], [93.3, 831.0], [93.4, 832.0], [93.5, 833.0], [93.6, 835.0], [93.7, 836.0], [93.8, 837.0], [93.9, 839.0], [94.0, 840.0], [94.1, 841.0], [94.2, 843.0], [94.3, 844.0], [94.4, 846.0], [94.5, 847.0], [94.6, 849.0], [94.7, 851.0], [94.8, 852.0], [94.9, 854.0], [95.0, 856.0], [95.1, 858.0], [95.2, 861.0], [95.3, 863.0], [95.4, 866.0], [95.5, 868.0], [95.6, 870.0], [95.7, 872.0], [95.8, 875.0], [95.9, 877.0], [96.0, 880.0], [96.1, 883.0], [96.2, 886.0], [96.3, 889.0], [96.4, 892.0], [96.5, 896.0], [96.6, 898.0], [96.7, 902.0], [96.8, 905.0], [96.9, 910.0], [97.0, 915.0], [97.1, 920.0], [97.2, 926.0], [97.3, 932.0], [97.4, 938.0], [97.5, 943.0], [97.6, 949.0], [97.7, 957.0], [97.8, 964.0], [97.9, 971.0], [98.0, 977.0], [98.1, 986.0], [98.2, 998.0], [98.3, 1011.0], [98.4, 1025.0], [98.5, 1045.0], [98.6, 1061.0], [98.7, 1080.0], [98.8, 1103.0], [98.9, 1127.0], [99.0, 1178.0], [99.1, 1212.0], [99.2, 1271.0], [99.3, 1431.0], [99.4, 2139.0], [99.5, 3247.0], [99.6, 3284.0], [99.7, 4269.0], [99.8, 4345.0], [99.9, 5325.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 26577.0, "series": [{"data": [[8200.0, 6.0], [0.0, 5317.0], [9200.0, 4.0], [600.0, 96.0], [10200.0, 13.0], [700.0, 63.0], [800.0, 53.0], [900.0, 45.0], [1000.0, 32.0], [1100.0, 11.0], [1200.0, 45.0], [1300.0, 7.0], [1400.0, 2.0], [1500.0, 2.0], [1700.0, 4.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 6.0], [2200.0, 44.0], [2400.0, 1.0], [200.0, 26577.0], [3300.0, 13.0], [3200.0, 59.0], [3400.0, 1.0], [4300.0, 11.0], [4200.0, 59.0], [300.0, 5074.0], [5300.0, 2.0], [5200.0, 52.0], [6200.0, 3.0], [400.0, 700.0], [7200.0, 7.0], [500.0, 185.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[900.0, 2357.0], [1000.0, 19722.0], [1100.0, 10440.0], [1200.0, 2826.0], [1300.0, 1074.0], [1400.0, 523.0], [1500.0, 216.0], [1600.0, 88.0], [1700.0, 67.0], [1800.0, 65.0], [1900.0, 62.0], [2000.0, 143.0], [2100.0, 120.0], [2300.0, 35.0], [2200.0, 70.0], [2400.0, 21.0], [2500.0, 35.0], [2600.0, 30.0], [2800.0, 14.0], [2700.0, 30.0], [2900.0, 22.0], [3000.0, 95.0], [3100.0, 31.0], [3300.0, 8.0], [3200.0, 18.0], [3400.0, 5.0], [3500.0, 20.0], [3600.0, 7.0], [3700.0, 5.0], [3800.0, 3.0], [3900.0, 4.0], [4000.0, 78.0], [4100.0, 34.0], [4300.0, 2.0], [4200.0, 3.0], [4600.0, 1.0], [5100.0, 37.0], [4900.0, 4.0], [5000.0, 60.0], [5200.0, 6.0], [5400.0, 4.0], [5600.0, 2.0], [5500.0, 1.0], [5800.0, 1.0], [5700.0, 2.0], [6000.0, 31.0], [6100.0, 16.0], [5900.0, 7.0], [6200.0, 1.0], [6600.0, 1.0], [6900.0, 3.0], [7000.0, 8.0], [7100.0, 5.0], [7200.0, 1.0], [8000.0, 9.0], [8100.0, 1.0], [9000.0, 6.0], [9200.0, 1.0], [9100.0, 1.0], [10000.0, 1.0], [11000.0, 10.0], [11100.0, 1.0], [10900.0, 3.0], [12000.0, 2.0], [12400.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[8200.0, 4.0], [0.0, 173.0], [9200.0, 7.0], [600.0, 72.0], [10200.0, 13.0], [700.0, 2033.0], [11200.0, 1.0], [800.0, 2360.0], [900.0, 606.0], [1000.0, 220.0], [1100.0, 106.0], [1200.0, 73.0], [1300.0, 11.0], [1400.0, 18.0], [1500.0, 9.0], [1600.0, 1.0], [1700.0, 5.0], [1800.0, 7.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 4.0], [2200.0, 28.0], [2300.0, 5.0], [2700.0, 1.0], [200.0, 25584.0], [3300.0, 15.0], [3200.0, 43.0], [4300.0, 11.0], [4200.0, 49.0], [4400.0, 1.0], [300.0, 5894.0], [5300.0, 3.0], [5200.0, 33.0], [6200.0, 5.0], [400.0, 882.0], [7200.0, 8.0], [500.0, 210.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1737.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 64607.0, "series": [{"data": [[0.0, 64607.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 32498.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1737.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 16658.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 158.31562499999998, "minX": 1.7417616E12, "maxY": 249.78187456926292, "series": [{"data": [[1.74176232E12, 208.65970303867422], [1.74176202E12, 212.34090127279012], [1.74176172E12, 216.02883625128715], [1.74176238E12, 211.4547647768393], [1.74176268E12, 222.55164075993181], [1.7417616E12, 217.65903587937524], [1.74176226E12, 236.69933413010017], [1.74176256E12, 214.57271312467486], [1.74176196E12, 210.86248053969823], [1.74176262E12, 249.78187456926292], [1.74176166E12, 228.70468642315666], [1.74176184E12, 215.35621362547073], [1.7417625E12, 218.4634062338563], [1.7417628E12, 158.31562499999998], [1.7417622E12, 225.64052507573248], [1.7417619E12, 216.3955570862762], [1.74176208E12, 212.9183079294402], [1.74176274E12, 224.58566283656353], [1.74176178E12, 210.8738504251259], [1.74176214E12, 216.99377667140794], [1.74176244E12, 213.63619146005527]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7417628E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 7097.0, "series": [{"data": [[33.0, 0.5], [35.0, 1.0], [39.0, 0.0], [45.0, 0.5], [47.0, 1.0], [52.0, 1.0], [59.0, 0.5], [63.0, 0.0], [67.0, 1.0], [65.0, 0.33333333333333337], [70.0, 1.0], [75.0, 0.0], [74.0, 0.0], [78.0, 0.0], [76.0, 0.0], [87.0, 0.0], [85.0, 1.0], [88.0, 0.0], [95.0, 0.0], [94.0, 1.0], [92.0, 1.0], [99.0, 0.0], [98.0, 1.0], [97.0, 0.0], [103.0, 1.0], [102.0, 1.0], [106.0, 1.0], [111.0, 1.0], [109.0, 1.0], [108.0, 0.0], [114.0, 0.5], [113.0, 1.0], [112.0, 1.0], [119.0, 0.0], [117.0, 0.0], [126.0, 0.0], [125.0, 1.0], [124.0, 0.0], [133.0, 0.0], [131.0, 0.375], [142.0, 0.0], [140.0, 1.0], [139.0, 0.0], [137.0, 0.0], [145.0, 0.33333333333333337], [144.0, 1.0], [158.0, 0.0], [157.0, 0.5], [156.0, 0.0], [154.0, 0.5], [163.0, 0.33333333333333337], [162.0, 1.0], [175.0, 0.0], [174.0, 0.14285714285714288], [171.0, 0.0], [183.0, 0.0], [179.0, 1.0], [191.0, 263.7307692307693], [190.0, 270.3684210526317], [189.0, 220.45454545454547], [188.0, 260.6666666666667], [187.0, 133.0], [184.0, 428.5], [198.0, 255.388489208633], [199.0, 264.870588235294], [196.0, 275.37662337662334], [197.0, 269.7184466019416], [193.0, 274.1000000000001], [192.0, 227.11764705882348], [194.0, 268.56410256410254], [195.0, 272.32203389830516], [200.0, 268.44621513944196], [202.0, 267.01943844492445], [203.0, 269.54531249999974], [204.0, 270.39097744360873], [206.0, 267.12712623097514], [207.0, 268.44381107491853], [205.0, 268.853509664293], [201.0, 272.9798657718123], [209.0, 270.8069666182875], [210.0, 263.441446965052], [212.0, 257.9132915002848], [214.0, 263.2644422310754], [215.0, 257.31223849372395], [213.0, 255.6688877498711], [208.0, 270.1251808972508], [211.0, 262.02082018927484], [216.0, 256.6587436332766], [219.0, 250.9719557195571], [221.0, 233.61121157323703], [222.0, 238.48484848484827], [223.0, 226.86839145106822], [220.0, 241.26248108925907], [218.0, 259.3305304010355], [217.0, 258.3259170174381], [226.0, 177.40830449827027], [228.0, 155.2694174757282], [229.0, 124.96783625730997], [230.0, 146.8496732026144], [231.0, 182.04999999999993], [227.0, 182.1926977687625], [225.0, 197.6710719530101], [224.0, 207.7280219780219], [233.0, 173.86764705882348], [237.0, 196.21590909090898], [238.0, 223.8376068376068], [239.0, 209.00877192982463], [236.0, 184.71084337349407], [232.0, 136.438596491228], [235.0, 180.11398963730582], [234.0, 163.25388601036263], [243.0, 224.5272727272728], [242.0, 283.56818181818176], [240.0, 247.01666666666668], [241.0, 247.64999999999998], [245.0, 262.1500000000001], [247.0, 318.6111111111111], [246.0, 322.09999999999997], [244.0, 269.2653061224489], [249.0, 298.2380952380952], [253.0, 373.62222222222215], [251.0, 299.3191489361703], [255.0, 668.7], [250.0, 263.60655737704906], [248.0, 325.0476190476191], [254.0, 366.06666666666666], [252.0, 265.3999999999999], [257.0, 702.7317073170732], [270.0, 371.48780487804873], [271.0, 445.15151515151524], [265.0, 393.0952380952382], [264.0, 357.14285714285717], [266.0, 226.53846153846152], [267.0, 377.9375], [269.0, 414.5777777777777], [263.0, 1432.7857142857142], [258.0, 787.8518518518518], [259.0, 539.7096774193549], [268.0, 449.51162790697686], [256.0, 340.40000000000003], [262.0, 1067.1153846153845], [261.0, 671.5], [260.0, 1656.7083333333335], [286.0, 271.4], [281.0, 242.375], [283.0, 274.83333333333337], [282.0, 288.2857142857143], [284.0, 261.0], [285.0, 2752.0], [275.0, 630.2692307692306], [274.0, 348.4642857142858], [273.0, 442.67499999999995], [272.0, 316.5882352941176], [280.0, 266.14285714285717], [279.0, 257.5], [277.0, 260.3333333333333], [278.0, 227.5], [276.0, 319.65000000000003], [290.0, 269.0], [301.0, 929.076923076923], [303.0, 254.0], [302.0, 274.5], [300.0, 1105.1666666666667], [291.0, 468.15384615384625], [297.0, 1520.5], [299.0, 274.75], [298.0, 315.4], [296.0, 1497.7777777777778], [295.0, 598.6666666666666], [294.0, 284.16666666666663], [292.0, 274.75], [293.0, 276.66666666666663], [289.0, 275.0], [288.0, 258.0], [316.0, 1049.642857142857], [319.0, 1180.5], [312.0, 1269.6666666666667], [318.0, 1447.9090909090908], [317.0, 1594.6666666666667], [314.0, 263.0], [315.0, 1603.3333333333335], [310.0, 1517.0], [308.0, 968.1176470588235], [309.0, 1668.6000000000001], [307.0, 505.75], [306.0, 1102.0], [304.0, 1596.0], [305.0, 720.7777777777778], [334.0, 2372.08], [335.0, 1793.5192307692312], [332.0, 1369.4883720930234], [331.0, 1345.1111111111109], [330.0, 1908.481481481482], [333.0, 1238.5454545454545], [329.0, 1208.7058823529412], [328.0, 1345.3076923076926], [327.0, 793.1578947368422], [324.0, 812.1818181818182], [325.0, 273.5], [326.0, 264.44444444444446], [320.0, 1152.3333333333333], [321.0, 781.5], [323.0, 260.57142857142856], [322.0, 705.5714285714286], [348.0, 2453.625], [346.0, 3194.1818181818185], [347.0, 1601.416666666667], [345.0, 2971.5], [344.0, 2255.0], [349.0, 259.0], [350.0, 2429.5], [351.0, 3521.0], [337.0, 1965.4666666666672], [338.0, 2152.1111111111113], [339.0, 3012.5714285714284], [336.0, 1045.1794871794873], [342.0, 4390.5], [341.0, 2471.0], [340.0, 3410.285714285714], [343.0, 1929.0], [354.0, 1356.8999999999999], [353.0, 702.7777777777777], [352.0, 704.1250000000001], [355.0, 464.1999999999999], [364.0, 2263.75], [365.0, 2473.8], [366.0, 1007.75], [356.0, 1259.4444444444443], [357.0, 662.4499999999999], [358.0, 666.0], [359.0, 268.0], [360.0, 265.90909090909093], [361.0, 265.0], [362.0, 2551.857142857143], [363.0, 425.1666666666667], [368.0, 247.5], [369.0, 2589.0], [1.0, 747.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[218.97709090909223, 279.46355844156074]], "isOverall": false, "label": "Booking-Aggregated", "isController": false}, {"data": [[48.0, 1078.0], [70.0, 1057.0], [78.0, 1075.0], [81.0, 1091.0], [87.0, 1010.0], [99.0, 1026.0], [98.0, 1106.0], [106.0, 1025.0], [105.0, 1071.0], [116.0, 1143.0], [126.0, 1097.0], [125.0, 1179.0], [134.0, 1066.0], [133.0, 1040.0], [131.0, 1040.5], [130.0, 1121.5], [129.0, 1108.0], [142.0, 1066.5], [140.0, 1600.3333333333333], [146.0, 1135.0], [145.0, 1152.5], [144.0, 1112.5], [157.0, 1159.0], [154.0, 1103.6666666666667], [165.0, 1086.0], [164.0, 1151.0], [162.0, 1085.0], [160.0, 1120.0], [174.0, 1073.5], [173.0, 1405.0], [172.0, 1140.6666666666667], [171.0, 1432.0], [168.0, 1097.3333333333333], [180.0, 2512.892307692308], [179.0, 2448.6363636363635], [182.0, 1201.0], [183.0, 1134.0], [187.0, 1088.0], [188.0, 1079.25], [189.0, 1079.75], [190.0, 1073.0434782608695], [191.0, 1110.4705882352941], [184.0, 1116.0], [192.0, 1084.6000000000001], [193.0, 1103.1290322580644], [194.0, 1066.8873239436614], [195.0, 1081.9354838709683], [196.0, 1059.8510638297873], [197.0, 1083.9895833333333], [199.0, 1067.2578947368422], [198.0, 1069.8933333333325], [202.0, 1084.298418972333], [204.0, 1088.3447837150136], [207.0, 1085.9841930116477], [205.0, 1076.7434607645887], [206.0, 1084.2292522596538], [203.0, 1073.5575959933217], [201.0, 1079.731927710842], [200.0, 1071.6591928251132], [208.0, 1084.8472330475454], [210.0, 1083.3981358189096], [211.0, 1091.5463917525765], [212.0, 1104.6947983014854], [213.0, 1096.3901554404156], [215.0, 1111.9826041117556], [214.0, 1101.5736894164183], [209.0, 1089.6255172413787], [216.0, 1106.8325714285695], [217.0, 1108.3406801007552], [221.0, 1130.5036166365273], [222.0, 1141.5102996254675], [223.0, 1132.2935267857122], [220.0, 1129.9033515198769], [219.0, 1122.5945736434137], [218.0, 1108.0932982917236], [224.0, 1145.1938775510214], [225.0, 1143.9795918367347], [228.0, 1180.8112745098038], [229.0, 1189.361979166667], [230.0, 1156.8648648648652], [231.0, 1205.869047619047], [227.0, 1165.573498964805], [226.0, 1174.1418439716326], [232.0, 1232.293103448276], [233.0, 1234.0101010101005], [237.0, 1279.2465753424665], [236.0, 1220.2993630573244], [239.0, 1293.9661016949156], [238.0, 1273.547008547008], [234.0, 1289.3418367346933], [235.0, 1318.99421965318], [240.0, 1293.3525179856115], [243.0, 1241.2857142857142], [241.0, 1261.7872340425536], [242.0, 1270.8170731707319], [245.0, 1217.5], [244.0, 1163.111111111111], [247.0, 1305.2058823529412], [246.0, 1399.0000000000002], [253.0, 1422.3414634146345], [251.0, 1148.170731707317], [250.0, 1357.5192307692303], [249.0, 1167.3469387755104], [255.0, 1690.608695652174], [254.0, 1364.2608695652173], [248.0, 1092.8235294117644], [252.0, 1476.0999999999997], [258.0, 1518.027027027027], [269.0, 1876.4262295081967], [257.0, 1954.6285714285716], [256.0, 1928.111111111111], [266.0, 1615.9230769230771], [265.0, 1961.2499999999998], [267.0, 1784.7499999999998], [264.0, 1910.0], [270.0, 2053.682926829268], [271.0, 1806.448275862069], [263.0, 2292.7333333333336], [262.0, 2138.0555555555557], [261.0, 2462.8095238095234], [260.0, 2488.37037037037], [259.0, 1898.8571428571427], [268.0, 2092.8730158730154], [284.0, 2291.4], [287.0, 1095.0], [286.0, 1193.0], [285.0, 4431.333333333333], [283.0, 1136.526315789474], [282.0, 1394.0], [280.0, 1096.0], [281.0, 1159.3333333333333], [279.0, 1065.0], [275.0, 1711.85], [274.0, 2024.8636363636363], [273.0, 1927.4615384615388], [272.0, 1409.1578947368423], [278.0, 1044.625], [276.0, 3103.0000000000005], [277.0, 1418.285714285714], [289.0, 1337.0], [297.0, 3037.714285714286], [298.0, 1504.8], [299.0, 1025.0], [296.0, 2430.75], [295.0, 1058.0], [294.0, 1033.0], [292.0, 3070.0], [293.0, 2133.0], [288.0, 1076.6666666666667], [290.0, 1157.3333333333333], [291.0, 1794.7142857142853], [302.0, 1293.75], [300.0, 3069.0], [301.0, 2814.6666666666665], [303.0, 1085.0], [306.0, 1429.8333333333335], [317.0, 5093.25], [318.0, 1090.0], [319.0, 3976.55], [315.0, 1067.0], [314.0, 3141.0], [313.0, 2427.3333333333335], [312.0, 1047.6666666666667], [316.0, 1701.6666666666667], [310.0, 1048.6666666666667], [311.0, 1057.0], [307.0, 2558.4], [308.0, 3031.8], [309.0, 3390.5555555555557], [305.0, 1699.4444444444443], [304.0, 3269.6], [334.0, 2678.2307692307686], [335.0, 2706.460526315789], [328.0, 3172.1499999999996], [333.0, 3431.396226415093], [332.0, 2278.952380952381], [331.0, 3194.0333333333324], [329.0, 2614.6136363636365], [330.0, 2796.875], [327.0, 1975.611111111111], [324.0, 2477.0], [325.0, 1567.5], [326.0, 1633.2], [320.0, 3088.285714285714], [321.0, 2539.0], [323.0, 1519.4285714285713], [322.0, 1078.0], [344.0, 3075.2], [346.0, 2680.777777777778], [348.0, 2165.6], [351.0, 7097.0], [350.0, 3047.0], [347.0, 3651.0769230769233], [345.0, 3163.611111111111], [342.0, 4339.764705882353], [341.0, 3294.875], [340.0, 1907.6666666666667], [336.0, 2464.541666666666], [343.0, 2432.5625], [339.0, 3200.2500000000005], [338.0, 2327.0454545454545], [337.0, 2512.777777777778], [354.0, 2600.7272727272725], [352.0, 2048.0], [353.0, 1512.4705882352941], [355.0, 2889.285714285714], [364.0, 2129.5], [365.0, 3051.3333333333335], [366.0, 1044.0], [367.0, 1069.0], [356.0, 1166.625], [358.0, 2910.5714285714284], [359.0, 1393.6666666666667], [357.0, 1981.1428571428573], [360.0, 2045.75], [361.0, 3808.0000000000005], [363.0, 3685.5], [362.0, 5532.0], [368.0, 1143.0], [369.0, 1513.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[219.18225974026004, 1173.6565454545294]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 758.0], [3.0, 815.0], [4.0, 773.0], [5.0, 791.0], [6.0, 811.0], [7.0, 751.0], [8.0, 828.0], [9.0, 771.0], [10.0, 757.0], [11.0, 770.0], [12.0, 811.0], [13.0, 764.0], [14.0, 740.0], [15.0, 790.0], [16.0, 736.0], [17.0, 806.0], [18.0, 809.0], [19.0, 817.0], [20.0, 760.0], [21.0, 760.0], [22.0, 810.0], [23.0, 729.0], [24.0, 792.0], [26.0, 865.0], [27.0, 811.0], [28.0, 737.0], [29.0, 785.0], [30.0, 813.0], [31.0, 755.0], [33.0, 758.0], [32.0, 845.0], [35.0, 854.0], [34.0, 790.0], [37.0, 812.0], [36.0, 789.0], [39.0, 736.0], [38.0, 774.0], [40.0, 868.0], [43.0, 761.0], [42.0, 797.5], [45.0, 834.0], [44.0, 1551.0], [47.0, 787.0], [46.0, 760.0], [49.0, 872.0], [48.0, 824.0], [51.0, 817.0], [50.0, 797.0], [53.0, 774.0], [52.0, 822.0], [55.0, 938.0], [54.0, 751.0], [57.0, 785.0], [56.0, 762.0], [59.0, 783.0], [58.0, 759.0], [60.0, 862.0], [63.0, 789.0], [62.0, 823.0], [67.0, 839.0], [66.0, 763.0], [65.0, 804.0], [71.0, 790.0], [70.0, 759.0], [69.0, 760.0], [68.0, 821.0], [75.0, 814.0], [74.0, 744.0], [73.0, 788.0], [72.0, 780.0], [78.0, 752.0], [77.0, 827.0], [76.0, 731.0], [83.0, 844.0], [82.0, 794.0], [81.0, 751.0], [80.0, 766.5], [87.0, 794.5], [85.0, 806.0], [84.0, 739.0], [91.0, 760.0], [90.0, 765.0], [89.0, 809.0], [88.0, 765.0], [95.0, 770.0], [94.0, 798.0], [93.0, 817.0], [92.0, 832.0], [99.0, 803.0], [98.0, 885.0], [97.0, 807.0], [96.0, 766.0], [103.0, 781.0], [102.0, 762.0], [101.0, 775.0], [100.0, 831.0], [106.0, 842.0], [105.0, 787.0], [104.0, 731.0], [111.0, 827.0], [110.0, 747.0], [109.0, 792.0], [108.0, 771.5], [115.0, 853.0], [114.0, 767.0], [113.0, 766.0], [112.0, 801.0], [119.0, 774.0], [118.0, 812.0], [117.0, 844.0], [116.0, 904.0], [123.0, 788.0], [122.0, 803.0], [121.0, 881.0], [120.0, 833.0], [127.0, 817.0], [126.0, 862.0], [125.0, 832.0], [124.0, 810.0], [134.0, 0.0], [133.0, 764.0], [132.0, 829.0], [131.0, 842.0], [130.0, 786.0], [129.0, 816.0], [128.0, 761.0], [143.0, 813.0], [142.0, 809.5], [140.0, 764.0], [139.0, 809.5], [137.0, 820.3333333333334], [151.0, 835.0], [150.0, 0.0], [149.0, 0.0], [148.0, 738.0], [147.0, 815.0], [146.0, 797.0], [145.0, 825.0], [144.0, 747.0], [159.0, 786.0], [158.0, 856.0], [157.0, 857.0], [156.0, 814.0], [154.0, 863.0], [153.0, 816.5], [167.0, 825.0], [166.0, 810.0], [165.0, 855.0], [164.0, 889.0], [163.0, 833.0], [162.0, 866.5], [160.0, 803.0], [174.0, 768.0], [173.0, 874.0], [172.0, 784.0], [171.0, 877.0], [170.0, 913.0], [169.0, 800.0], [168.0, 783.0], [183.0, 952.0], [182.0, 783.5], [180.0, 819.0], [179.0, 823.0], [178.0, 881.0], [177.0, 916.0], [176.0, 891.0], [191.0, 270.3103448275862], [190.0, 299.11111111111114], [189.0, 321.29999999999995], [188.0, 340.50000000000006], [187.0, 459.0], [186.0, 770.0], [185.0, 814.0], [184.0, 814.0], [199.0, 273.2485875706215], [198.0, 275.9930555555556], [197.0, 285.18999999999994], [196.0, 276.8026315789475], [195.0, 311.7627118644068], [194.0, 290.65454545454537], [193.0, 297.55000000000007], [192.0, 332.2], [207.0, 284.19759999999957], [206.0, 280.5074766355149], [205.0, 279.71815107102583], [204.0, 276.9075067024131], [203.0, 277.13345864661665], [202.0, 277.3848167539265], [201.0, 274.32333333333315], [200.0, 272.1960784313725], [215.0, 339.66632705043315], [214.0, 325.4135610766049], [213.0, 328.41121976325223], [212.0, 315.32771644392835], [211.0, 303.55576923076865], [210.0, 299.5577312626607], [209.0, 292.96314670446475], [208.0, 288.48677248677257], [223.0, 439.4162995594714], [222.0, 416.38028169014035], [221.0, 411.7051282051275], [219.0, 354.45241477272685], [220.0, 385.1630353117958], [218.0, 351.98625000000055], [217.0, 346.9043731778431], [216.0, 347.8004410143332], [224.0, 447.69645042839653], [231.0, 623.0072463768116], [228.0, 593.6596736596738], [230.0, 635.3638968481374], [229.0, 651.6901041666662], [227.0, 567.2767175572519], [226.0, 561.0679933665011], [225.0, 481.2335664335665], [232.0, 641.1428571428569], [234.0, 607.0514018691593], [237.0, 554.7657142857142], [238.0, 537.2538461538463], [239.0, 539.0970873786407], [236.0, 572.0609756097558], [233.0, 599.3526785714286], [235.0, 604.0409356725146], [240.0, 492.79699248120284], [243.0, 402.49999999999983], [242.0, 435.67021276595744], [244.0, 459.75757575757575], [241.0, 461.6428571428571], [245.0, 381.45454545454544], [247.0, 374.7727272727272], [246.0, 522.3636363636363], [253.0, 330.1081081081081], [252.0, 361.734693877551], [251.0, 362.1000000000001], [249.0, 378.7659574468085], [248.0, 349.9148936170214], [255.0, 397.55172413793105], [250.0, 313.45762711864404], [254.0, 541.6486486486486], [270.0, 380.9148936170212], [257.0, 1132.75], [271.0, 398.8235294117647], [268.0, 752.7], [269.0, 319.53124999999994], [259.0, 1129.258064516129], [258.0, 1323.1290322580644], [266.0, 421.75], [267.0, 660.9473684210527], [265.0, 679.5], [264.0, 1104.2857142857142], [263.0, 869.44], [256.0, 655.2], [260.0, 618.4799999999999], [262.0, 554.9677419354839], [261.0, 989.294117647059], [286.0, 265.09999999999997], [287.0, 253.5], [284.0, 265.0], [285.0, 260.0], [275.0, 454.58064516129025], [274.0, 426.3636363636364], [273.0, 322.81818181818187], [272.0, 498.04166666666674], [283.0, 268.7], [282.0, 272.5], [281.0, 695.0833333333334], [280.0, 262.1666666666667], [279.0, 260.0], [278.0, 990.4285714285713], [277.0, 423.6], [276.0, 332.75], [302.0, 268.4285714285714], [303.0, 745.1111111111111], [301.0, 329.90000000000003], [300.0, 269.0], [298.0, 1278.2], [299.0, 184.33333333333331], [297.0, 264.8888888888889], [296.0, 2009.8333333333335], [295.0, 281.8], [290.0, 260.4], [289.0, 289.0], [291.0, 280.00000000000006], [288.0, 2063.4], [294.0, 1834.636363636364], [293.0, 330.0], [292.0, 246.88888888888889], [318.0, 891.1538461538461], [319.0, 1372.111111111111], [317.0, 3263.8], [316.0, 2934.0], [315.0, 2516.0], [314.0, 259.5], [313.0, 271.66666666666663], [312.0, 1263.75], [311.0, 1144.0000000000002], [305.0, 266.25], [304.0, 300.6666666666667], [307.0, 302.4], [306.0, 1757.5454545454545], [310.0, 263.25], [309.0, 766.5000000000001], [308.0, 856.8], [334.0, 1962.7619047619048], [335.0, 1772.8055555555554], [332.0, 1035.1428571428573], [333.0, 1596.1666666666665], [331.0, 1279.8148148148146], [330.0, 1657.0769230769235], [329.0, 1468.3461538461538], [328.0, 1187.9999999999998], [327.0, 265.875], [326.0, 264.83333333333337], [324.0, 1445.2727272727273], [325.0, 3264.25], [321.0, 410.14285714285717], [320.0, 1535.8181818181815], [323.0, 332.77777777777777], [322.0, 2621.8333333333335], [348.0, 3304.333333333333], [347.0, 2157.875], [346.0, 2646.625], [345.0, 3316.8888888888887], [344.0, 1758.25], [350.0, 2408.142857142857], [349.0, 255.0], [351.0, 265.0], [341.0, 1770.3333333333335], [340.0, 2251.3333333333335], [342.0, 3978.4285714285716], [343.0, 1928.0], [339.0, 2672.1500000000005], [338.0, 1782.4615384615383], [337.0, 1466.6500000000003], [336.0, 1422.8148148148148], [365.0, 2504.0], [359.0, 1761.75], [352.0, 2124.0], [354.0, 261.25], [353.0, 330.35714285714283], [364.0, 2504.75], [355.0, 269.2], [356.0, 263.5], [358.0, 261.33333333333337], [357.0, 1054.3], [361.0, 2387.75], [363.0, 2606.0], [362.0, 767.25], [360.0, 1054.2], [366.0, 2516.75], [367.0, 287.0], [369.0, 460.6], [1.0, 0.0]], "isOverall": false, "label": "Search Booking", "isController": false}, {"data": [[218.57205194805093, 392.1277662337646]], "isOverall": false, "label": "Search Booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 369.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1528.65, "minX": 1.7417616E12, "maxY": 147458.48333333334, "series": [{"data": [[1.74176232E12, 84434.6], [1.74176202E12, 84913.33333333333], [1.74176172E12, 84897.16666666667], [1.74176238E12, 84616.05], [1.74176268E12, 146492.65], [1.7417616E12, 66090.76666666666], [1.74176226E12, 85319.98333333334], [1.74176256E12, 84295.28333333334], [1.74176196E12, 84380.43333333333], [1.74176262E12, 129617.55], [1.74176166E12, 84455.51666666666], [1.74176184E12, 85151.6], [1.7417625E12, 84593.16666666667], [1.7417628E12, 16043.6], [1.7417622E12, 86662.48333333334], [1.7417619E12, 84697.63333333333], [1.74176208E12, 85137.78333333334], [1.74176274E12, 147458.48333333334], [1.74176178E12, 84020.1], [1.74176214E12, 82014.78333333334], [1.74176244E12, 84725.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74176232E12, 26566.0], [1.74176202E12, 26737.916666666668], [1.74176172E12, 26750.55], [1.74176238E12, 26654.866666666665], [1.74176268E12, 14159.75], [1.7417616E12, 20948.633333333335], [1.74176226E12, 26935.283333333333], [1.74176256E12, 26605.283333333333], [1.74176196E12, 26583.533333333333], [1.74176262E12, 17783.333333333332], [1.74176166E12, 26661.066666666666], [1.74176184E12, 26827.7], [1.7417625E12, 26704.2], [1.7417628E12, 1528.65], [1.7417622E12, 27304.816666666666], [1.7417619E12, 26697.016666666666], [1.74176208E12, 26857.6], [1.74176274E12, 14237.733333333334], [1.74176178E12, 26482.633333333335], [1.74176214E12, 25850.25], [1.74176244E12, 26685.633333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7417628E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 16.270672829994872, "minX": 1.7417616E12, "maxY": 1507.3467492260052, "series": [{"data": [[1.74176232E12, 270.7253778009383], [1.74176202E12, 283.4380804953559], [1.74176172E12, 274.21947449768174], [1.74176238E12, 268.60361757105943], [1.74176268E12, 18.32590673575126], [1.7417616E12, 281.2068737607406], [1.74176226E12, 469.90835030549897], [1.74176256E12, 276.6373512674603], [1.74176196E12, 271.3309128630703], [1.74176262E12, 403.3586171310646], [1.74176166E12, 393.97829457364355], [1.74176184E12, 292.6790123456788], [1.7417625E12, 302.44863190500746], [1.7417628E12, 27.094527363184092], [1.7417622E12, 334.76771255060703], [1.7417619E12, 292.86970010341304], [1.74176208E12, 289.6791389031267], [1.74176274E12, 16.270672829994872], [1.74176178E12, 275.9766476388167], [1.74176214E12, 324.1208556149728], [1.74176244E12, 273.3017019081995]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[1.74176232E12, 1080.8397932816522], [1.74176202E12, 1113.1739577972207], [1.74176172E12, 1100.185567010308], [1.74176238E12, 1070.9152892561951], [1.74176268E12, 1130.145736434111], [1.7417616E12, 1215.7174603174597], [1.74176226E12, 1376.2535934291575], [1.74176256E12, 1099.175767030679], [1.74176196E12, 1079.073727933542], [1.74176262E12, 1507.3467492260052], [1.74176166E12, 1317.028335909325], [1.74176184E12, 1178.5601233299076], [1.7417625E12, 1209.8216132368154], [1.7417628E12, 1183.9019607843136], [1.7417622E12, 1206.2238504295085], [1.7417619E12, 1153.5962829117193], [1.74176208E12, 1117.605873261206], [1.74176274E12, 1123.248838409911], [1.74176178E12, 1099.634846113718], [1.74176214E12, 1214.3478723404282], [1.74176244E12, 1084.5299586776869]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.74176232E12, 273.2812177502581], [1.74176202E12, 290.44283497154686], [1.74176172E12, 273.78251928020546], [1.74176238E12, 271.14648033126286], [1.74176268E12, 826.6966233766243], [1.7417616E12, 286.05085910652895], [1.74176226E12, 436.43033419023135], [1.74176256E12, 281.86818889465457], [1.74176196E12, 277.41619097041996], [1.74176262E12, 895.8060165975122], [1.74176166E12, 388.557572614109], [1.74176184E12, 297.4651639344265], [1.7417625E12, 305.4194214876035], [1.7417628E12, 824.5000000000001], [1.7417622E12, 348.37393054856517], [1.7417619E12, 291.51394628099206], [1.74176208E12, 297.6748844375965], [1.74176274E12, 829.7375449409361], [1.74176178E12, 277.24179260031315], [1.74176214E12, 330.8927427961581], [1.74176244E12, 272.9089498189343]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7417628E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 15.84591679506932, "minX": 1.7417616E12, "maxY": 1507.340041279667, "series": [{"data": [[1.74176232E12, 270.7217300677436], [1.74176202E12, 283.4349845201235], [1.74176172E12, 274.2132921174646], [1.74176238E12, 268.5984496124033], [1.74176268E12, 17.570984455958538], [1.7417616E12, 281.17316589557186], [1.74176226E12, 469.89256619144635], [1.74176256E12, 276.6321779617179], [1.74176196E12, 271.3288381742739], [1.74176262E12, 403.0288957688336], [1.74176166E12, 393.97002583979327], [1.74176184E12, 292.6754115226332], [1.7417625E12, 302.4450180691793], [1.7417628E12, 26.70149253731343], [1.7417622E12, 334.76366396761136], [1.7417619E12, 292.8650465356768], [1.74176208E12, 289.67298821117356], [1.74176274E12, 15.84591679506932], [1.74176178E12, 275.96990140114184], [1.74176214E12, 324.1149732620323], [1.74176244E12, 273.29757607013954]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[1.74176232E12, 1080.8335917312666], [1.74176202E12, 1113.1703551209466], [1.74176172E12, 1100.1809278350522], [1.74176238E12, 1070.9132231404974], [1.74176268E12, 1130.142118863046], [1.7417616E12, 1213.4006349206356], [1.74176226E12, 1376.2525667351115], [1.74176256E12, 1099.170046801872], [1.74176196E12, 1079.0695742471426], [1.74176262E12, 1507.340041279667], [1.74176166E12, 1317.0206079340564], [1.74176184E12, 1178.554984583761], [1.7417625E12, 1209.8190279214077], [1.7417628E12, 1183.8888888888894], [1.7417622E12, 1206.2193026781194], [1.7417619E12, 1153.589055240061], [1.74176208E12, 1117.5996908809889], [1.74176274E12, 1123.24419204956], [1.74176178E12, 1099.6317162232644], [1.74176214E12, 1214.3425531914888], [1.74176244E12, 1084.528409090908]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.74176232E12, 273.2801857585136], [1.74176202E12, 290.4381789963791], [1.74176172E12, 273.7794344473007], [1.74176238E12, 271.14130434782527], [1.74176268E12, 826.6857142857152], [1.7417616E12, 286.0240549828181], [1.74176226E12, 436.4241645244223], [1.74176256E12, 281.866632070576], [1.74176196E12, 277.4120394395434], [1.74176262E12, 895.7728215767626], [1.74176166E12, 388.5503112033207], [1.74176184E12, 297.45901639344254], [1.7417625E12, 305.4116735537195], [1.7417628E12, 824.4930069930072], [1.7417622E12, 348.3714141922494], [1.7417619E12, 291.50723140495785], [1.74176208E12, 297.670775552132], [1.74176274E12, 829.7272727272735], [1.74176178E12, 277.23449713392347], [1.74176214E12, 330.8906083244394], [1.74176244E12, 272.90274185204356]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7417628E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7417616E12, "maxY": 936.0603174603176, "series": [{"data": [[1.74176232E12, 0.0], [1.74176202E12, 0.0], [1.74176172E12, 0.0], [1.74176238E12, 0.0], [1.74176268E12, 11.732642487046638], [1.7417616E12, 0.0], [1.74176226E12, 0.0], [1.74176256E12, 0.0], [1.74176196E12, 0.0], [1.74176262E12, 6.443240454076361], [1.74176166E12, 0.0], [1.74176184E12, 0.0], [1.7417625E12, 0.0], [1.7417628E12, 18.10447761194029], [1.7417622E12, 0.0], [1.7417619E12, 0.0], [1.74176208E12, 0.0], [1.74176274E12, 10.639958911145362], [1.74176178E12, 0.0], [1.74176214E12, 0.0], [1.74176244E12, 0.0]], "isOverall": false, "label": "Booking", "isController": false}, {"data": [[1.74176232E12, 810.4930232558148], [1.74176202E12, 832.950591868245], [1.74176172E12, 825.3067010309273], [1.74176238E12, 803.3543388429756], [1.74176268E12, 851.2093023255826], [1.7417616E12, 936.0603174603176], [1.74176226E12, 813.0605749486667], [1.74176256E12, 824.3291731669273], [1.74176196E12, 808.6194184839038], [1.74176262E12, 836.0614035087715], [1.74176166E12, 818.1014940752183], [1.74176184E12, 886.5421377183965], [1.7417625E12, 911.6913133402282], [1.7417628E12, 883.5882352941175], [1.7417622E12, 911.1045982819589], [1.7417619E12, 866.704181724315], [1.74176208E12, 834.6491499227193], [1.74176274E12, 843.8750645327821], [1.74176178E12, 827.4720918101207], [1.74176214E12, 900.569148936171], [1.74176244E12, 812.5738636363639]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.74176232E12, 0.0], [1.74176202E12, 0.0], [1.74176172E12, 0.0], [1.74176238E12, 0.0], [1.74176268E12, 550.4612987012986], [1.7417616E12, 0.0], [1.74176226E12, 0.0], [1.74176256E12, 0.0], [1.74176196E12, 0.0], [1.74176262E12, 367.9268672199166], [1.74176166E12, 0.0], [1.74176184E12, 0.0], [1.7417625E12, 0.0], [1.7417628E12, 554.188811188811], [1.7417622E12, 0.0], [1.7417619E12, 0.0], [1.74176208E12, 0.0], [1.74176274E12, 554.7524396507437], [1.74176178E12, 0.0], [1.74176214E12, 0.0], [1.74176244E12, 0.0]], "isOverall": false, "label": "Search Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7417628E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 235.0, "minX": 1.7417616E12, "maxY": 12452.0, "series": [{"data": [[1.74176232E12, 2657.0], [1.74176202E12, 2551.0], [1.74176172E12, 3329.0], [1.74176238E12, 2688.0], [1.7417616E12, 6955.0], [1.74176226E12, 11109.0], [1.74176256E12, 3479.0], [1.74176196E12, 2680.0], [1.74176262E12, 12452.0], [1.74176166E12, 11098.0], [1.74176184E12, 3001.0], [1.7417625E12, 3238.0], [1.7417622E12, 5846.0], [1.7417619E12, 3034.0], [1.74176208E12, 3259.0], [1.74176178E12, 2806.0], [1.74176214E12, 6611.0], [1.74176244E12, 2779.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74176232E12, 1100.0], [1.74176202E12, 1120.0], [1.74176172E12, 1091.0], [1.74176238E12, 1090.0], [1.7417616E12, 1131.0], [1.74176226E12, 1136.0], [1.74176256E12, 1111.0], [1.74176196E12, 1097.0], [1.74176262E12, 4055.5], [1.74176166E12, 1126.0], [1.74176184E12, 1216.6999999999998], [1.7417625E12, 1204.1999999999998], [1.7417622E12, 1141.0], [1.7417619E12, 1178.0], [1.74176208E12, 1128.0], [1.74176178E12, 1118.0], [1.74176214E12, 1144.0], [1.74176244E12, 1098.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74176232E12, 1229.4199999999983], [1.74176202E12, 1438.7000000000007], [1.74176172E12, 1536.9499999999935], [1.74176238E12, 1197.0], [1.7417616E12, 2933.5600000000004], [1.74176226E12, 5108.92], [1.74176256E12, 1349.3199999999997], [1.74176196E12, 1230.3600000000006], [1.74176262E12, 10279.0], [1.74176166E12, 5007.5199999999995], [1.74176184E12, 1489.5699999999997], [1.7417625E12, 1909.960000000001], [1.7417622E12, 2229.669999999991], [1.7417619E12, 1422.92], [1.74176208E12, 1436.2000000000007], [1.74176178E12, 1259.3599999999997], [1.74176214E12, 2440.25], [1.74176244E12, 1246.8199999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74176232E12, 1135.0], [1.74176202E12, 1199.0], [1.74176172E12, 1126.0], [1.74176238E12, 1121.0], [1.7417616E12, 1281.8000000000002], [1.74176226E12, 1799.1999999999935], [1.74176256E12, 1171.0], [1.74176196E12, 1131.8999999999996], [1.74176262E12, 5268.0], [1.74176166E12, 1314.199999999999], [1.74176184E12, 1320.0], [1.7417625E12, 1289.5999999999995], [1.7417622E12, 1245.8499999999995], [1.7417619E12, 1224.5999999999995], [1.74176208E12, 1199.0], [1.74176178E12, 1162.8000000000002], [1.74176214E12, 1374.25], [1.74176244E12, 1140.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74176232E12, 239.0], [1.74176202E12, 239.0], [1.74176172E12, 239.0], [1.74176238E12, 240.0], [1.7417616E12, 240.0], [1.74176226E12, 238.0], [1.74176256E12, 240.0], [1.74176196E12, 238.0], [1.74176262E12, 239.0], [1.74176166E12, 235.0], [1.74176184E12, 240.0], [1.7417625E12, 239.0], [1.7417622E12, 243.0], [1.7417619E12, 240.0], [1.74176208E12, 239.0], [1.74176178E12, 239.0], [1.74176214E12, 238.0], [1.74176244E12, 239.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74176232E12, 276.0], [1.74176202E12, 292.0], [1.74176172E12, 273.0], [1.74176238E12, 275.0], [1.7417616E12, 279.0], [1.74176226E12, 307.0], [1.74176256E12, 282.0], [1.74176196E12, 281.0], [1.74176262E12, 310.0], [1.74176166E12, 274.0], [1.74176184E12, 307.0], [1.7417625E12, 308.0], [1.7417622E12, 370.0], [1.7417619E12, 297.0], [1.74176208E12, 302.0], [1.74176178E12, 281.0], [1.74176214E12, 327.0], [1.74176244E12, 277.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74176262E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 10272.0, "series": [{"data": [[8.0, 2700.5], [10.0, 1358.0], [12.0, 264.5], [28.0, 1371.5], [39.0, 2135.0], [49.0, 518.0], [48.0, 270.0], [57.0, 275.0], [63.0, 533.0], [69.0, 589.0], [70.0, 449.0], [73.0, 325.0], [75.0, 289.0], [72.0, 454.0], [74.0, 277.0], [78.0, 331.5], [76.0, 614.5], [79.0, 332.0], [77.0, 279.0], [81.0, 309.0], [83.0, 303.0], [80.0, 278.0], [82.0, 347.5], [84.0, 294.0], [86.0, 310.5], [85.0, 290.0], [87.0, 283.0], [91.0, 293.0], [90.0, 303.0], [89.0, 290.0], [88.0, 288.0], [94.0, 286.0], [95.0, 316.0], [93.0, 291.5], [92.0, 288.0], [99.0, 296.0], [96.0, 294.5], [97.0, 292.0], [98.0, 290.0], [100.0, 287.0], [102.0, 282.0], [103.0, 289.0], [101.0, 290.0], [107.0, 281.0], [105.0, 299.0], [106.0, 290.0], [104.0, 294.0], [108.0, 294.0], [110.0, 288.0], [111.0, 285.0], [109.0, 288.0], [115.0, 300.0], [113.0, 282.5], [114.0, 275.0], [112.0, 296.0], [117.0, 312.0], [119.0, 317.0], [116.0, 289.0], [118.0, 281.0], [120.0, 287.0], [123.0, 276.0], [122.0, 275.0], [121.0, 307.0], [126.0, 352.0], [124.0, 335.5], [127.0, 320.0], [131.0, 278.0], [130.0, 292.0], [128.0, 355.0], [134.0, 278.0], [138.0, 274.0], [142.0, 280.0], [139.0, 1055.0], [141.0, 381.0], [144.0, 270.0], [151.0, 297.0], [146.0, 272.0], [145.0, 299.0], [156.0, 3065.0], [152.0, 968.5], [176.0, 275.5], [191.0, 1027.0], [194.0, 3003.0], [250.0, 3145.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1.0], [3.0, 791.0], [8.0, 2285.5], [9.0, 255.0], [10.0, 3356.5], [12.0, 770.5], [16.0, 788.5], [17.0, 779.0], [28.0, 786.0], [39.0, 2758.5], [40.0, 759.0], [48.0, 5276.5], [56.0, 765.5], [69.0, 791.0], [71.0, 786.0], [78.0, 255.5], [77.0, 1163.0], [79.0, 781.0], [80.0, 796.0], [83.0, 823.0], [82.0, 787.5], [81.0, 812.0], [87.0, 781.5], [86.0, 818.5], [85.0, 1068.0], [84.0, 814.5], [90.0, 808.5], [88.0, 816.5], [89.0, 803.0], [91.0, 808.0], [92.0, 821.0], [94.0, 800.0], [93.0, 806.0], [95.0, 787.0], [99.0, 831.0], [96.0, 836.5], [97.0, 815.0], [98.0, 832.5], [102.0, 809.0], [101.0, 820.0], [100.0, 825.5], [103.0, 850.0], [105.0, 824.0], [107.0, 827.5], [106.0, 851.5], [104.0, 825.0], [111.0, 835.0], [108.0, 792.5], [110.0, 821.5], [109.0, 879.5], [115.0, 842.0], [112.0, 804.5], [116.0, 800.0], [119.0, 839.0], [122.0, 834.0], [126.0, 5268.0], [131.0, 781.0], [130.0, 7277.0], [128.0, 7253.5], [138.0, 6258.0], [139.0, 1011.0], [141.0, 796.0], [144.0, 10268.0], [151.0, 8274.5], [146.0, 10262.0], [156.0, 3273.5], [152.0, 9773.0], [176.0, 9251.5], [191.0, 10272.0], [194.0, 3275.0], [250.0, 3366.0], [1.0, 373.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 250.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10272.0, "series": [{"data": [[8.0, 2700.5], [10.0, 1358.0], [12.0, 264.5], [28.0, 1371.5], [39.0, 2135.0], [49.0, 518.0], [48.0, 270.0], [57.0, 275.0], [63.0, 533.0], [69.0, 589.0], [70.0, 449.0], [73.0, 325.0], [75.0, 289.0], [72.0, 454.0], [74.0, 277.0], [78.0, 331.5], [76.0, 614.5], [79.0, 332.0], [77.0, 279.0], [81.0, 309.0], [83.0, 303.0], [80.0, 278.0], [82.0, 347.5], [84.0, 294.0], [86.0, 310.5], [85.0, 290.0], [87.0, 283.0], [91.0, 293.0], [90.0, 303.0], [89.0, 290.0], [88.0, 288.0], [94.0, 286.0], [95.0, 316.0], [93.0, 291.0], [92.0, 288.0], [99.0, 296.0], [96.0, 294.5], [97.0, 292.0], [98.0, 290.0], [100.0, 287.0], [102.0, 282.0], [103.0, 289.0], [101.0, 290.0], [107.0, 281.0], [105.0, 299.0], [106.0, 290.0], [104.0, 294.0], [108.0, 294.0], [110.0, 288.0], [111.0, 285.0], [109.0, 288.0], [115.0, 300.0], [113.0, 282.5], [114.0, 275.0], [112.0, 296.0], [117.0, 312.0], [119.0, 317.0], [116.0, 289.0], [118.0, 281.0], [120.0, 287.0], [123.0, 276.0], [122.0, 275.0], [121.0, 307.0], [126.0, 352.0], [124.0, 335.5], [127.0, 320.0], [131.0, 278.0], [130.0, 292.0], [128.0, 355.0], [134.0, 278.0], [138.0, 274.0], [142.0, 280.0], [139.0, 1055.0], [141.0, 381.0], [144.0, 270.0], [151.0, 297.0], [146.0, 272.0], [145.0, 299.0], [156.0, 3065.0], [152.0, 968.5], [176.0, 275.5], [191.0, 1027.0], [194.0, 3003.0], [250.0, 3145.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [3.0, 791.0], [8.0, 2285.5], [9.0, 255.0], [10.0, 3356.5], [12.0, 770.5], [16.0, 788.5], [17.0, 779.0], [28.0, 786.0], [39.0, 2758.5], [40.0, 759.0], [48.0, 5276.5], [56.0, 765.5], [69.0, 791.0], [71.0, 786.0], [78.0, 255.5], [77.0, 1163.0], [79.0, 781.0], [80.0, 796.0], [83.0, 823.0], [82.0, 787.5], [81.0, 812.0], [87.0, 781.5], [86.0, 818.5], [85.0, 1068.0], [84.0, 814.5], [90.0, 808.5], [88.0, 816.5], [89.0, 803.0], [91.0, 808.0], [92.0, 821.0], [94.0, 800.0], [93.0, 806.0], [95.0, 787.0], [99.0, 831.0], [96.0, 836.5], [97.0, 815.0], [98.0, 832.5], [102.0, 809.0], [101.0, 820.0], [100.0, 825.5], [103.0, 850.0], [105.0, 824.0], [107.0, 827.5], [106.0, 851.5], [104.0, 825.0], [111.0, 835.0], [108.0, 792.5], [110.0, 821.5], [109.0, 879.5], [115.0, 842.0], [112.0, 804.5], [116.0, 800.0], [119.0, 839.0], [122.0, 834.0], [126.0, 5268.0], [131.0, 781.0], [130.0, 7277.0], [128.0, 7253.5], [138.0, 6258.0], [139.0, 1011.0], [141.0, 796.0], [144.0, 10268.0], [151.0, 8274.5], [146.0, 10262.0], [156.0, 3273.5], [152.0, 9773.0], [176.0, 9251.5], [191.0, 10272.0], [194.0, 3275.0], [250.0, 3366.0], [1.0, 373.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 250.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.7, "minX": 1.7417616E12, "maxY": 98.2, "series": [{"data": [[1.74176232E12, 96.56666666666666], [1.74176202E12, 96.88333333333334], [1.74176172E12, 96.83333333333333], [1.74176238E12, 96.68333333333334], [1.74176268E12, 96.33333333333333], [1.7417616E12, 76.51666666666667], [1.74176226E12, 97.21666666666667], [1.74176256E12, 96.53333333333333], [1.74176196E12, 96.55], [1.74176262E12, 97.0], [1.74176166E12, 96.88333333333334], [1.74176184E12, 96.95], [1.7417625E12, 96.65], [1.7417628E12, 9.7], [1.7417622E12, 98.2], [1.7417619E12, 96.78333333333333], [1.74176208E12, 97.33333333333333], [1.74176274E12, 97.08333333333333], [1.74176178E12, 96.48333333333333], [1.74176214E12, 94.81666666666666], [1.74176244E12, 97.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7417628E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.7417616E12, "maxY": 99.03333333333333, "series": [{"data": [[1.74176232E12, 96.53333333333333], [1.74176202E12, 96.9], [1.74176172E12, 97.1], [1.74176238E12, 96.71666666666667], [1.7417616E12, 75.71666666666667], [1.74176226E12, 96.78333333333333], [1.74176256E12, 96.38333333333334], [1.74176196E12, 96.35], [1.74176262E12, 25.233333333333334], [1.74176166E12, 95.78333333333333], [1.74176184E12, 97.36666666666666], [1.7417625E12, 96.78333333333333], [1.7417622E12, 99.03333333333333], [1.7417619E12, 96.78333333333333], [1.74176208E12, 97.31666666666666], [1.74176178E12, 96.05], [1.74176214E12, 93.73333333333333], [1.74176244E12, 96.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.74176226E12, 0.8333333333333334], [1.74176262E12, 1.0666666666666667], [1.74176166E12, 0.95]], "isOverall": false, "label": "404", "isController": false}, {"data": [[1.7417628E12, 7.266666666666667], [1.74176268E12, 64.31666666666666], [1.74176274E12, 64.76666666666667], [1.74176262E12, 46.916666666666664]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.7417628E12, 3.4], [1.74176268E12, 32.18333333333333], [1.74176274E12, 32.416666666666664], [1.74176262E12, 23.516666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7417628E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.7417616E12, "maxY": 33.11666666666667, "series": [{"data": [[1.7417628E12, 4.766666666666667], [1.74176268E12, 32.083333333333336], [1.74176274E12, 32.45], [1.74176226E12, 0.8333333333333334], [1.74176262E12, 24.65], [1.74176166E12, 0.95]], "isOverall": false, "label": "Search Booking-failure", "isController": false}, {"data": [[1.74176232E12, 31.983333333333334], [1.74176202E12, 32.3], [1.74176172E12, 32.35], [1.74176238E12, 32.25], [1.7417616E12, 25.216666666666665], [1.74176226E12, 32.733333333333334], [1.74176256E12, 32.21666666666667], [1.74176196E12, 32.13333333333333], [1.74176262E12, 8.716666666666667], [1.74176166E12, 32.25], [1.74176184E12, 32.4], [1.7417625E12, 32.28333333333333], [1.7417622E12, 32.93333333333333], [1.7417619E12, 32.233333333333334], [1.74176208E12, 32.516666666666666], [1.74176178E12, 32.11666666666667], [1.74176214E12, 31.166666666666668], [1.74176244E12, 32.31666666666667]], "isOverall": false, "label": "Booking-success", "isController": false}, {"data": [[1.7417628E12, 3.35], [1.74176268E12, 32.166666666666664], [1.74176274E12, 32.45], [1.74176262E12, 23.583333333333332]], "isOverall": false, "label": "Booking-failure", "isController": false}, {"data": [[1.74176232E12, 32.25], [1.74176202E12, 32.38333333333333], [1.74176172E12, 32.333333333333336], [1.74176238E12, 32.266666666666666], [1.7417616E12, 26.25], [1.74176226E12, 32.46666666666667], [1.74176256E12, 32.05], [1.74176196E12, 32.1], [1.74176262E12, 9.033333333333333], [1.74176166E12, 32.35], [1.74176184E12, 32.43333333333333], [1.7417625E12, 32.233333333333334], [1.7417622E12, 32.983333333333334], [1.7417619E12, 32.28333333333333], [1.74176208E12, 32.35], [1.74176178E12, 31.95], [1.74176214E12, 31.333333333333332], [1.74176244E12, 32.266666666666666]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.7417628E12, 2.55], [1.74176268E12, 32.25], [1.74176274E12, 32.28333333333333], [1.74176262E12, 23.266666666666666]], "isOverall": false, "label": "Login-failure", "isController": false}, {"data": [[1.74176232E12, 32.3], [1.74176202E12, 32.21666666666667], [1.74176172E12, 32.416666666666664], [1.74176238E12, 32.2], [1.7417616E12, 24.25], [1.74176226E12, 31.583333333333332], [1.74176256E12, 32.11666666666667], [1.74176196E12, 32.11666666666667], [1.74176262E12, 7.483333333333333], [1.74176166E12, 31.183333333333334], [1.74176184E12, 32.53333333333333], [1.7417625E12, 32.266666666666666], [1.7417622E12, 33.11666666666667], [1.7417619E12, 32.266666666666666], [1.74176208E12, 32.45], [1.74176178E12, 31.983333333333334], [1.74176214E12, 31.233333333333334], [1.74176244E12, 32.21666666666667]], "isOverall": false, "label": "Search Booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7417628E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.7417616E12, "maxY": 99.03333333333333, "series": [{"data": [[1.74176232E12, 96.53333333333333], [1.74176202E12, 96.9], [1.74176172E12, 97.1], [1.74176238E12, 96.71666666666667], [1.7417616E12, 75.71666666666667], [1.74176226E12, 96.78333333333333], [1.74176256E12, 96.38333333333334], [1.74176196E12, 96.35], [1.74176262E12, 25.233333333333334], [1.74176166E12, 95.78333333333333], [1.74176184E12, 97.36666666666666], [1.7417625E12, 96.78333333333333], [1.7417622E12, 99.03333333333333], [1.7417619E12, 96.78333333333333], [1.74176208E12, 97.31666666666666], [1.74176178E12, 96.05], [1.74176214E12, 93.73333333333333], [1.74176244E12, 96.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7417628E12, 10.666666666666666], [1.74176268E12, 96.5], [1.74176274E12, 97.18333333333334], [1.74176226E12, 0.8333333333333334], [1.74176262E12, 71.5], [1.74176166E12, 0.95]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7417628E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

